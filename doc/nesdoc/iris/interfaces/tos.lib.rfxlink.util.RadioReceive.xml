<?xml version="1.0" ?><interfacedef loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc" nicename="tos.lib.rfxlink.util.RadioReceive" qname="RadioReceive">
      <function event="" loc="53:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc" name="receive" provided="0" ref="0x2b9d555b6e70">
        <documentation loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>
 Signals the reception of a message, but only for those messages for
 which SUCCESS was returned in the header event.</short>
          <long>
 Signals the reception of a message, but only for those messages for
 which SUCCESS was returned in the header event. The usual owner rules 
 apply to the message pointers.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.lib.rfxlink.util.RadioReceive" qname="RadioReceive"/>
        <type-function alignment="I:1" size="I:1">
          <type-pointer alignment="I:1" size="I:2">
            <type-tag alignment="I:1" size="I:47"><nx_struct-ref name="message_t" ref="0x2b9d54fed510"/>
              <typename><typedef-ref name="message_t" ref="0x2b9d54fecaa8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer alignment="I:1" size="I:2">
              <type-tag alignment="I:1" size="I:47"><nx_struct-ref name="message_t" ref="0x2b9d54fed510"/>
                <typename><typedef-ref name="message_t" ref="0x2b9d54fecaa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="53:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc" name="msg" ref="0x2b9d555b6bc8">
            <type-pointer alignment="I:1" size="I:2">
              <type-tag alignment="I:1" size="I:47"><nx_struct-ref name="message_t" ref="0x2b9d54fed510"/>
                <typename><typedef-ref name="message_t" ref="0x2b9d54fecaa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc" name="header" provided="0" ref="0x2b9d555b6290">
        <documentation loc="39:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>
 This event is fired when the header is received/downloaded and the 
 higher layers are consulted whether it needs to be downloaded and 
 further processed.</short>
          <long>
 This event is fired when the header is received/downloaded and the 
 higher layers are consulted whether it needs to be downloaded and 
 further processed. Return FALSE if the message should be discarded.
 In particular, the message buffer layer returns FALSE if there is
 no space for a new message, so this message will not get acknowledged.
</long>
        </documentation>
        <interfacedef-ref nicename="tos.lib.rfxlink.util.RadioReceive" qname="RadioReceive"/>
        <type-function alignment="I:1" size="I:1">
          <type-int alignment="I:1" cname="unsigned char" size="I:1" unsigned="">
            <typename><typedef-ref name="bool" ref="0x2b9d54c5c4c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer alignment="I:1" size="I:2">
              <type-tag alignment="I:1" size="I:47"><nx_struct-ref name="message_t" ref="0x2b9d54fed510"/>
                <typename><typedef-ref name="message_t" ref="0x2b9d54fecaa8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc" name="msg" ref="0x2b9d555b6020">
            <type-pointer alignment="I:1" size="I:2">
              <type-tag alignment="I:1" size="I:47"><nx_struct-ref name="message_t" ref="0x2b9d54fed510"/>
                <typename><typedef-ref name="message_t" ref="0x2b9d54fecaa8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>