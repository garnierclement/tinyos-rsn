<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="64:RadioCountToLedsAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b42216d2730"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b422151f940"/></to>
    </wire>
    <wire loc="72:/home/tinyos/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x2b422151f940"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x2b422151dc40"/></to>
    </wire>
    <wire loc="66:RadioCountToLedsAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b422175b6a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b42223fa1c8"/></to>
    </wire>
    <wire loc="54:/home/tinyos/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b42223fa1c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b4221852ab0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:RadioCountToLedsAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b422176a278"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b42223bd080"/></to>
    </wire>
    <wire loc="64:/home/tinyos/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b42223bd080"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b4222715398"/></to>
    </wire>
    <wire loc="68:RadioCountToLedsAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x2b42217706d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b4221856940"/></to>
    </wire>
    <wire loc="65:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b4221856940"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b422187ecd0"/></to>
    </wire>
    <wire loc="69:RadioCountToLedsAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b42216d3080"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b42216d4d80"/></to>
    </wire>
    <wire loc="51:/home/tinyos/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x2b42216d4d80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x2b4221795648"/></to>
    </wire>
    <wire loc="70:RadioCountToLedsAppC.nc">
      <from><interface-ref name="MilliTimer" scoped="" ref="0x2b42217615a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b42223ee128"/></to>
    </wire>
    <wire loc="52:/home/tinyos/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b42223ee128"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b4221f931c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:RadioCountToLedsAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b422177f0d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b42223bdc38"/></to>
    </wire>
    <wire loc="65:/home/tinyos/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b42223bdc38"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b4222714020"/></to>
    </wire>
    <wire loc="96:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4221513d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4222a165e8"/></to>
    </wire>
    <wire loc="119:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4221513d50"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b4222005bf0"/></to>
    </wire>
    <wire loc="53:/home/tinyos/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4221513d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4221e1e3e0"/></to>
    </wire>
    <wire loc="52:/home/tinyos/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4221513d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4221d5a198"/></to>
    </wire>
    <wire loc="56:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4221513d50"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b42228c8430"/></to>
    </wire>
    <wire loc="45:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4221513d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4221c2fc80"/></to>
    </wire>
    <wire loc="56:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4221513d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b422289ede8"/></to>
    </wire>
    <wire loc="96:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b4221513d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b42227ee398"/></to>
    </wire>
    <wire loc="67:/home/tinyos/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b42216cd308"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b4221421600"/></to>
    </wire>
    <wire loc="53:/home/tinyos/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x2b4221421600"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x2b42214d6d88"/></to>
    </wire>
    <wire loc="78:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b42216cdce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b422211c870"/></to>
    </wire>
    <wire loc="122:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b42216cdce0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b4222005138"/></to>
    </wire>
    <wire loc="68:/home/tinyos/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b42216cdce0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4221520cd0"/></to>
    </wire>
    <wire loc="58:/home/tinyos/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b4221520cd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b42215234f0"/></to>
    </wire>
    <wire loc="71:/home/tinyos/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x2b42216cc418"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x2b4221513d50"/></to>
    </wire>
    <wire loc="26:/home/tinyos/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b422151b9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b42222c2dc0"/></to>
    </wire>
    <wire loc="59:/home/tinyos/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b4221526b98"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b42216b0ae0"/></to>
    </wire>
    <wire loc="61:/home/tinyos/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x2b4221530398"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b42216b04b0"/></to>
    </wire>
    <wire loc="54:/home/tinyos/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b4221523b90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b42217ba2d8"/></to>
    </wire>
    <wire loc="62:/home/tinyos/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x2b4221523b90"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b4221525a10"/></to>
    </wire>
    <wire loc="46:/home/tinyos/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x2b4221525a10"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x2b4221536460"/></to>
    </wire>
    <wire loc="63:/home/tinyos/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b422152b108"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b422151b9a0"/></to>
    </wire>
    <wire loc="48:/home/tinyos/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x2b422153d5f8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x2b42215411a0"/></to>
    </wire>
    <wire loc="141:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x2b42215411a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b42215c7430"/></to>
    </wire>
    <wire loc="49:/home/tinyos/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x2b42215357f8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x2b422152b108"/></to>
    </wire>
    <wire loc="191:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x2b422157ac78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4221665520"/></to>
    </wire>
    <wire loc="165:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x2b42215547e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b42215f5020"/></to>
    </wire>
    <wire loc="67:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b42215f5020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222536100"/></to>
    </wire>
    <wire loc="176:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x2b42215687e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b4221608d60"/></to>
    </wire>
    <wire loc="69:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b4221608d60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b42225b8100"/></to>
    </wire>
    <wire loc="185:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x2b422156f4d0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b422160b8c8"/></to>
    </wire>
    <wire loc="69:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b422160b8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222646100"/></to>
    </wire>
    <wire loc="196:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x2b4221583af0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4221674c38"/></to>
    </wire>
    <wire loc="143:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x2b422153f4d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b42215c5740"/></to>
    </wire>
    <wire loc="72:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b42215c5740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222445020"/></to>
    </wire>
    <wire loc="183:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x2b42215711a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b422160d5b8"/></to>
    </wire>
    <wire loc="67:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b422160d5b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b422264c100"/></to>
    </wire>
    <wire loc="146:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x2b422154a7e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b42215cd930"/></to>
    </wire>
    <wire loc="66:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b42215cd930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222486180"/></to>
    </wire>
    <wire loc="157:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x2b422154d968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b42215df740"/></to>
    </wire>
    <wire loc="68:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b42215df740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b42224fe100"/></to>
    </wire>
    <wire loc="168:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x2b4221561c78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b42215f2430"/></to>
    </wire>
    <wire loc="70:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b42215f2430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b422257c100"/></to>
    </wire>
    <wire loc="179:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x2b4221565c78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b4221604120"/></to>
    </wire>
    <wire loc="72:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b4221604120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b42225ae100"/></to>
    </wire>
    <wire loc="138:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x2b4221545c78"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b42215cb020"/></to>
    </wire>
    <wire loc="67:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b42215cb020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222406020"/></to>
    </wire>
    <wire loc="149:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x2b4221547c78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b42215dbd60"/></to>
    </wire>
    <wire loc="69:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b42215dbd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b422247d100"/></to>
    </wire>
    <wire loc="160:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x2b4221559e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b42215eebd8"/></to>
    </wire>
    <wire loc="71:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b42215eebd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b42224f4100"/></to>
    </wire>
    <wire loc="171:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x2b422155c1a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b42216008c8"/></to>
    </wire>
    <wire loc="73:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b42216008c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222572100"/></to>
    </wire>
    <wire loc="188:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x2b422156c968"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b422161ad60"/></to>
    </wire>
    <wire loc="72:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b422161ad60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b422263c100"/></to>
    </wire>
    <wire loc="194:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x2b42215767e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b422166ac38"/></to>
    </wire>
    <wire loc="174:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x2b422156a4d0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b42215f9a50"/></to>
    </wire>
    <wire loc="67:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b42215f9a50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b42225be100"/></to>
    </wire>
    <wire loc="70:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b42215c7430"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b422244b020"/></to>
    </wire>
    <wire loc="152:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x2b4221551348"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b42215d7120"/></to>
    </wire>
    <wire loc="72:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b42215d7120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b42224bf100"/></to>
    </wire>
    <wire loc="192:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x2b42215784d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4221661cd8"/></to>
    </wire>
    <wire loc="155:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x2b422154f658"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b42215e1500"/></to>
    </wire>
    <wire loc="66:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b42215e1500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222504180"/></to>
    </wire>
    <wire loc="166:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x2b4221563968"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b42215f4120"/></to>
    </wire>
    <wire loc="68:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b42215f4120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222582100"/></to>
    </wire>
    <wire loc="177:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x2b4221567968"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b4221607e18"/></to>
    </wire>
    <wire loc="70:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b4221607e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b42225b5100"/></to>
    </wire>
    <wire loc="186:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x2b422156e658"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b422160aa50"/></to>
    </wire>
    <wire loc="70:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b422160aa50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222643100"/></to>
    </wire>
    <wire loc="144:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x2b422154b658"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b42215c48c8"/></to>
    </wire>
    <wire loc="73:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b42215c48c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222442020"/></to>
    </wire>
    <wire loc="147:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x2b4221549968"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b42215cca50"/></to>
    </wire>
    <wire loc="67:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b42215cca50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222483100"/></to>
    </wire>
    <wire loc="158:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x2b422155baf0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b42215de8c8"/></to>
    </wire>
    <wire loc="69:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b42215de8c8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b42224fb100"/></to>
    </wire>
    <wire loc="169:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x2b4221560e00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b42215f05b8"/></to>
    </wire>
    <wire loc="71:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b42215f05b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222578100"/></to>
    </wire>
    <wire loc="180:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x2b4221564e00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b42216032a8"/></to>
    </wire>
    <wire loc="73:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b42216032a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b42225ab100"/></to>
    </wire>
    <wire loc="139:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x2b4221544e00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b42215ca120"/></to>
    </wire>
    <wire loc="68:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b42215ca120"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222403020"/></to>
    </wire>
    <wire loc="150:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x2b4221546e00"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b42215dae18"/></to>
    </wire>
    <wire loc="70:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b42215dae18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222479100"/></to>
    </wire>
    <wire loc="161:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x2b4221557020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b42215edd60"/></to>
    </wire>
    <wire loc="72:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b42215edd60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b42224f1100"/></to>
    </wire>
    <wire loc="189:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x2b422157baf0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b4221619e18"/></to>
    </wire>
    <wire loc="73:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b4221619e18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222639100"/></to>
    </wire>
    <wire loc="164:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x2b4221555348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b42215f7e40"/></to>
    </wire>
    <wire loc="66:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b42215f7e40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222539180"/></to>
    </wire>
    <wire loc="175:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x2b4221569658"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b4221609bd8"/></to>
    </wire>
    <wire loc="68:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b4221609bd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b42225bb100"/></to>
    </wire>
    <wire loc="184:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x2b4221570348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b422160c740"/></to>
    </wire>
    <wire loc="68:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b422160c740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222649100"/></to>
    </wire>
    <wire loc="195:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x2b4221575968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b42216793e0"/></to>
    </wire>
    <wire loc="142:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x2b4221540348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b42215c65b8"/></to>
    </wire>
    <wire loc="71:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b42215c65b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222448020"/></to>
    </wire>
    <wire loc="153:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x2b42215504d0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b42215d62a8"/></to>
    </wire>
    <wire loc="73:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b42215d62a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b42224bc100"/></to>
    </wire>
    <wire loc="182:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x2b4221572020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b422160e500"/></to>
    </wire>
    <wire loc="66:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b422160e500"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b42225fd180"/></to>
    </wire>
    <wire loc="156:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x2b422154e7e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x2b42215e05b8"/></to>
    </wire>
    <wire loc="67:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x2b42215e05b8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222501100"/></to>
    </wire>
    <wire loc="167:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x2b4221562af0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b42215f32a8"/></to>
    </wire>
    <wire loc="69:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b42215f32a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b422257f100"/></to>
    </wire>
    <wire loc="178:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x2b4221566af0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b4221605020"/></to>
    </wire>
    <wire loc="71:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b4221605020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b42225b2100"/></to>
    </wire>
    <wire loc="187:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x2b422156d7e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b422161bbd8"/></to>
    </wire>
    <wire loc="71:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b422161bbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222640100"/></to>
    </wire>
    <wire loc="137:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x2b422152aa78"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b42215bddc0"/></to>
    </wire>
    <wire loc="66:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b42215bddc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b422240adb8"/></to>
    </wire>
    <wire loc="148:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x2b4221548af0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x2b42215dcbd8"/></to>
    </wire>
    <wire loc="68:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x2b42215dcbd8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222480100"/></to>
    </wire>
    <wire loc="159:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x2b422155ac78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x2b42215dda50"/></to>
    </wire>
    <wire loc="70:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x2b42215dda50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b42224f8100"/></to>
    </wire>
    <wire loc="170:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x2b422155d020"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x2b42215ef740"/></to>
    </wire>
    <wire loc="72:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x2b42215ef740"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222575100"/></to>
    </wire>
    <wire loc="193:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x2b4221577658"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b422166f3e0"/></to>
    </wire>
    <wire loc="173:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x2b422156b348"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x2b42215fa930"/></to>
    </wire>
    <wire loc="66:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x2b42215fa930"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b42225c1180"/></to>
    </wire>
    <wire loc="162:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x2b42215561a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x2b42215ece18"/></to>
    </wire>
    <wire loc="73:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x2b42215ece18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b42224ee100"/></to>
    </wire>
    <wire loc="140:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x2b4221542020"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x2b42215c82a8"/></to>
    </wire>
    <wire loc="69:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x2b42215c82a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222400020"/></to>
    </wire>
    <wire loc="151:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x2b4221552100"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x2b42215d8020"/></to>
    </wire>
    <wire loc="71:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x2b42215d8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x2b4222476100"/></to>
    </wire>
    <wire loc="54:/home/tinyos/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x2b42214041c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b42214d5c58"/></to>
    </wire>
    <wire loc="55:/home/tinyos/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x2b42214df168"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x2b422142ae28"/></to>
    </wire>
    <wire loc="92:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x2b42214f9988"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x2b4221ea0578"/></to>
    </wire>
    <wire loc="53:/home/tinyos/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b42217ba2d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4221795080"/></to>
    </wire>
    <wire loc="54:/home/tinyos/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b4221794ce8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x2b4221796e18"/></to>
    </wire>
    <wire loc="56:/home/tinyos/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x2b4221796e18"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x2b4221544e00"/></to>
    </wire>
    <wire loc="55:/home/tinyos/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b4221793e70"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x2b42217bc020"/></to>
    </wire>
    <wire loc="57:/home/tinyos/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x2b42217bc020"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x2b4221545c78"/></to>
    </wire>
    <wire loc="56:/home/tinyos/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b4221791020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x2b42217bb1b0"/></to>
    </wire>
    <wire loc="58:/home/tinyos/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x2b42217bb1b0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x2b422152aa78"/></to>
    </wire>
    <wire loc="63:/home/tinyos/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b4222715398"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b42227099a8"/></to>
    </wire>
    <wire loc="64:/home/tinyos/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b4222714020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b42218502a8"/></to>
    </wire>
    <wire loc="66:/home/tinyos/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b42223bc888"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b4222714bd8"/></to>
    </wire>
    <wire loc="65:/home/tinyos/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4222714bd8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b422184f020"/></to>
    </wire>
    <wire loc="67:/home/tinyos/tinyos-main/tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b42223ba020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x2b42227122a8"/></to>
    </wire>
    <wire loc="66:/home/tinyos/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x2b42227122a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4221867658"/></to>
    </wire>
    <wire loc="72:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b42218502a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b4221891360"/></to>
    </wire>
    <wire loc="73:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b422184f020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b4221890020"/></to>
    </wire>
    <wire loc="75:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4221867658"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b422188f658"/></to>
    </wire>
    <wire loc="60:/home/tinyos/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b42227085e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4221808020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/tinyos/tinyos-main/tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4222707268"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b422184f020"/></to>
    </wire>
    <wire loc="53:/home/tinyos/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b4221808020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b42218432c8"/></to>
    </wire>
    <wire loc="54:/home/tinyos/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b4221842060"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b4221853920"/></to>
    </wire>
    <wire loc="67:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b4221853920"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b422187bcb0"/></to>
    </wire>
    <wire loc="55:/home/tinyos/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4221842c38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b422184f020"/></to>
    </wire>
    <wire loc="56:/home/tinyos/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b4221840268"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b42218502a8"/></to>
    </wire>
    <wire loc="169:/home/tinyos/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x2b4221859020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b42214041c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/home/tinyos/tinyos-main/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x2b42218597c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b42214041c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b422187ecd0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b42218a9c50"/></to>
    </wire>
    <wire loc="70:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b4221866b38"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b42218774e8"/></to>
    </wire>
    <wire loc="84:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b42218774e8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b42218a2498"/></to>
    </wire>
    <wire loc="89:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b4221891360"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b42218bb9e8"/></to>
    </wire>
    <wire loc="81:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b422187bcb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b42218a6c30"/></to>
    </wire>
    <wire loc="69:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b4221851628"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b42218789b8"/></to>
    </wire>
    <wire loc="83:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b42218789b8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b42218a4968"/></to>
    </wire>
    <wire loc="76:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b4221864020"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b422188e020"/></to>
    </wire>
    <wire loc="93:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b422188e020"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b42218c7e28"/></to>
    </wire>
    <wire loc="68:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b4221852ab0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b422187ae40"/></to>
    </wire>
    <wire loc="82:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b422187ae40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b42218a5dc0"/></to>
    </wire>
    <wire loc="92:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b422188f658"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b42218c74d0"/></to>
    </wire>
    <wire loc="77:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b4221874dc0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b422188eab8"/></to>
    </wire>
    <wire loc="94:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b422188eab8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b42218be8f0"/></to>
    </wire>
    <wire loc="90:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4221890020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b42218a0378"/></to>
    </wire>
    <wire loc="78:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b42218707f8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b422188d780"/></to>
    </wire>
    <wire loc="95:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b422188d780"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b42218bd5f8"/></to>
    </wire>
    <wire loc="81:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2b42218684a8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4221898978"/></to>
    </wire>
    <wire loc="104:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4221898978"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b42218cd8b0"/></to>
    </wire>
    <wire loc="80:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4221882378"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b42218ad860"/></to>
    </wire>
    <wire loc="103:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b42218ad860"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b42218e59d8"/></to>
    </wire>
    <wire loc="215:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b42218a9c50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b4221c7c1c8"/></to>
    </wire>
    <wire loc="99:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b422189d0c8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b42218d28b8"/></to>
    </wire>
    <wire loc="305:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b42218d28b8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b4221fe90c8"/></to>
    </wire>
    <wire loc="270:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b42218e59d8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4221fc3270"/></to>
    </wire>
    <wire loc="124:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b42218a2498"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b4221a6b020"/></to>
    </wire>
    <wire loc="126:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b42218bb9e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b4221a6f578"/></to>
    </wire>
    <wire loc="121:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b42218a6c30"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b4221a6e388"/></to>
    </wire>
    <wire loc="123:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b42218a4968"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b4221a6d7e0"/></to>
    </wire>
    <wire loc="98:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b4221885d80"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b42218d55a0"/></to>
    </wire>
    <wire loc="303:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b42218d55a0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b4221fedcd0"/></to>
    </wire>
    <wire loc="216:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b42218c7e28"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b4221ca5a10"/></to>
    </wire>
    <wire loc="122:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b42218a5dc0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b4221a6d0c8"/></to>
    </wire>
    <wire loc="269:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b42218cd8b0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4221fbf020"/></to>
    </wire>
    <wire loc="102:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b42218945a8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b42218ce4e0"/></to>
    </wire>
    <wire loc="307:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b42218ce4e0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4222019220"/></to>
    </wire>
    <wire loc="97:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b42218868d8"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b42218d71f8"/></to>
    </wire>
    <wire loc="304:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b42218d71f8"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b422201d860"/></to>
    </wire>
    <wire loc="248:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b42218c74d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4221d71e38"/></to>
    </wire>
    <wire loc="86:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b42218761c8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b42218a11c8"/></to>
    </wire>
    <wire loc="128:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b42218a11c8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b4221a6b738"/></to>
    </wire>
    <wire loc="187:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b42218be8f0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x2b4221c6e9c8"/></to>
    </wire>
    <wire loc="125:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b42218a0378"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b4221a70020"/></to>
    </wire>
    <wire loc="224:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b42218bd5f8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b4221d16268"/></to>
    </wire>
    <wire loc="100:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b4221897990"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b42218cfb78"/></to>
    </wire>
    <wire loc="306:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b42218cfb78"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b422201a9d0"/></to>
    </wire>
    <wire loc="87:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b4221876d58"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b42218a1d58"/></to>
    </wire>
    <wire loc="129:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b42218a1d58"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b4221a6be50"/></to>
    </wire>
    <wire loc="57:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b4221c7c1c8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b4221ca4618"/></to>
    </wire>
    <wire loc="88:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x2b4221fe90c8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x2b4222037020"/></to>
    </wire>
    <wire loc="160:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x2b42218b9710"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b4221b2e840"/></to>
    </wire>
    <wire loc="148:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x2b42218b84b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b4221af0200"/></to>
    </wire>
    <wire loc="98:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b4221af0200"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b42227eb720"/></to>
    </wire>
    <wire loc="70:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x2b4221a6b020"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x2b4222792388"/></to>
    </wire>
    <wire loc="67:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x2b4221a6e388"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x2b4222795698"/></to>
    </wire>
    <wire loc="69:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x2b4221a6d7e0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x2b4222793c28"/></to>
    </wire>
    <wire loc="161:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2b42218bf308"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b4221beb900"/></to>
    </wire>
    <wire loc="56:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x2b4221beb900"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b4222891d98"/></to>
    </wire>
    <wire loc="162:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2b42218c86e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b4221aea980"/></to>
    </wire>
    <wire loc="85:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b4221fedcd0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b422203bb48"/></to>
    </wire>
    <wire loc="63:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x2b4221ca5a10"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x2b42228d0458"/></to>
    </wire>
    <wire loc="66:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b4221a6f578"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b4222796888"/></to>
    </wire>
    <wire loc="68:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b4221a6d0c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b4222793510"/></to>
    </wire>
    <wire loc="59:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4221fbf020"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4222955660"/></to>
    </wire>
    <wire loc="81:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4222019220"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4222121438"/></to>
    </wire>
    <wire loc="94:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b422201d860"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b4222031860"/></to>
    </wire>
    <wire loc="158:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x2b42218b2250"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2b4221b2f578"/></to>
    </wire>
    <wire loc="72:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x2b4221a6b738"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x2b4222792aa0"/></to>
    </wire>
    <wire loc="117:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x2b4221c6e9c8"/></from>
      <to><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2b4221c69d18"/></to>
    </wire>
    <wire loc="61:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x2b4221d16268"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x2b42228c69c8"/></to>
    </wire>
    <wire loc="65:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b4221a70020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b4222797268"/></to>
    </wire>
    <wire loc="58:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4221fc3270"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4222959958"/></to>
    </wire>
    <wire loc="159:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x2b42218b9020"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2b4221b2e2a8"/></to>
    </wire>
    <wire loc="96:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b422201a9d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b422202e9d0"/></to>
    </wire>
    <wire loc="73:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x2b4221a6be50"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x2b42227911e0"/></to>
    </wire>
    <wire loc="102:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b42219315e8"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b4221bee980"/></to>
    </wire>
    <wire loc="55:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b4221bee980"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b422283cd50"/></to>
    </wire>
    <wire loc="103:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b422192a388"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b4221983910"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="104:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b422192e730"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4221fbf020"/></to>
    </wire>
    <wire loc="105:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RF230Packet" scoped="" ref="0x2b4221924640"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b4221feebd8"/></to>
    </wire>
    <wire loc="79:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b4221feebd8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b422203ca50"/></to>
    </wire>
    <wire loc="110:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b42219b1958"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b42220184b8"/></to>
    </wire>
    <wire loc="100:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b42220184b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b42221252e0"/></to>
    </wire>
    <wire loc="116:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b4221a682a8"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2b4221910a60"/></to>
    </wire>
    <wire loc="117:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4221a692a8"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x2b4221a85100"/></to>
    </wire>
    <wire loc="118:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4221a69b90"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x2b4221b62060"/></to>
    </wire>
    <wire loc="119:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b4221a6a4d0"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x2b4221b62638"/></to>
    </wire>
    <wire loc="137:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b4221a9a3f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b4221af0200"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4221a85a48"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x2b4221b63740"/></to>
    </wire>
    <wire loc="153:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b4221b2ee38"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b4221bee980"/></to>
    </wire>
    <wire loc="154:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4221b2aba0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x2b4221b22838"/></to>
    </wire>
    <wire loc="155:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4221b285b8"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x2b4221b652a8"/></to>
    </wire>
    <wire loc="156:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b4221b2bd98"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x2b4221b65880"/></to>
    </wire>
    <wire loc="169:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4221b61490"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4221c54d18"/></to>
    </wire>
    <wire loc="60:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b4221c54d18"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b42228a2da0"/></to>
    </wire>
    <wire loc="170:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4221b61d78"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b4221c6e430"/></to>
    </wire>
    <wire loc="114:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b4221c6e430"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b4221c6b020"/></to>
    </wire>
    <wire loc="171:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b4221b60378"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b4221be9b98"/></to>
    </wire>
    <wire loc="57:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b4221be9b98"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b422288f020"/></to>
    </wire>
    <wire loc="176:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b4221be8ab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b4221c6d700"/></to>
    </wire>
    <wire loc="115:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b4221c6d700"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b4221c6b5f8"/></to>
    </wire>
    <wire loc="181:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b4221c52e68"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x2b42218e83b8"/></to>
    </wire>
    <wire loc="182:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4221c53db8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4221c78ac0"/></to>
    </wire>
    <wire loc="113:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b4221c78ac0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b4221c6c618"/></to>
    </wire>
    <wire loc="191:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4221c693f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4221d71e38"/></to>
    </wire>
    <wire loc="193:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4221c6c618"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4221c7cc38"/></to>
    </wire>
    <wire loc="58:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b4221c7cc38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b4221ca30c0"/></to>
    </wire>
    <wire loc="194:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4221c6b020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b4221c7a5b8"/></to>
    </wire>
    <wire loc="59:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b4221c7a5b8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b4221ca39a8"/></to>
    </wire>
    <wire loc="195:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b4221c6b5f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b4221c7ab50"/></to>
    </wire>
    <wire loc="60:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b4221c7ab50"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b4221ca2020"/></to>
    </wire>
    <wire loc="211:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x2b4221ca4618"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b4221cea708"/></to>
    </wire>
    <wire loc="58:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b4221cea708"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x2b42228c9870"/></to>
    </wire>
    <wire loc="212:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4221ca30c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b4221ce92a8"/></to>
    </wire>
    <wire loc="59:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x2b4221ce92a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x2b42228c8a08"/></to>
    </wire>
    <wire loc="213:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4221ca39a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b4221ce9b90"/></to>
    </wire>
    <wire loc="60:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x2b4221ce9b90"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x2b42228c6430"/></to>
    </wire>
    <wire loc="214:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b4221ca2020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b4221fbd9f8"/></to>
    </wire>
    <wire loc="60:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b4221fbd9f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b4222951080"/></to>
    </wire>
    <wire loc="221:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b4221d15a10"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b4221d4b640"/></to>
    </wire>
    <wire loc="56:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b4221d4b640"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b4222948b58"/></to>
    </wire>
    <wire loc="222:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b4221d143f0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b4221c535f8"/></to>
    </wire>
    <wire loc="63:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b4221c535f8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b422289e6c8"/></to>
    </wire>
    <wire loc="223:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b4221d16b70"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b42220005b8"/></to>
    </wire>
    <wire loc="70:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b42220005b8"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2b4221ffba08"/></to>
    </wire>
    <wire loc="228:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4221c52708"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b4221d4a020"/></to>
    </wire>
    <wire loc="59:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b4221d4a020"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b4222945578"/></to>
    </wire>
    <wire loc="237:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b4221d485b8"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2b42218ff650"/></to>
    </wire>
    <wire loc="238:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4221d4a7e0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b4221d72e38"/></to>
    </wire>
    <wire loc="239:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4221d49120"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b4221d71718"/></to>
    </wire>
    <wire loc="240:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b4221d49840"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b4221983910"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x2b4221d74740"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b4221fb3660"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="247:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b4221d76840"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b4221983910"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b4221d755b8"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2b42218f5080"/></to>
    </wire>
    <wire loc="253:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4221d787b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b4221db9a10"/></to>
    </wire>
    <wire loc="71:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b4221db9a10"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b4221db3020"/></to>
    </wire>
    <wire loc="254:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4221d76120"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b4221db83f0"/></to>
    </wire>
    <wire loc="72:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b4221db83f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b4221db3908"/></to>
    </wire>
    <wire loc="259:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b4221db05b8"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x2b422190e608"/></to>
    </wire>
    <wire loc="260:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4221db3020"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b4221fff3f0"/></to>
    </wire>
    <wire loc="71:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b4221fff3f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b4221ff98c8"/></to>
    </wire>
    <wire loc="261:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4221db3908"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b4221fffc98"/></to>
    </wire>
    <wire loc="72:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b4221fffc98"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b4221ff82a8"/></to>
    </wire>
    <wire loc="262:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x2b4221db10a0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2b4221fee448"/></to>
    </wire>
    <wire loc="78:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b4221fee448"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x2b422203c2c0"/></to>
    </wire>
    <wire loc="267:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4221fbba30"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4222019220"/></to>
    </wire>
    <wire loc="268:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b4221fba9f0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b4221fcd0e0"/></to>
    </wire>
    <wire loc="271:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2b4221fb98c8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b4221fb3660"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="276:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b4221fcc020"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x2b4221feebd8"/></to>
    </wire>
    <wire loc="286:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b4221ff6060"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x2b422190e608"/></to>
    </wire>
    <wire loc="287:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4221ff98c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b4221fef2c8"/></to>
    </wire>
    <wire loc="76:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b4221fef2c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b42220030c0"/></to>
    </wire>
    <wire loc="288:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4221ff82a8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b4221fefbf0"/></to>
    </wire>
    <wire loc="77:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b4221fefbf0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b42220039e8"/></to>
    </wire>
    <wire loc="289:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x2b4221ffba08"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b4221ff23e8"/></to>
    </wire>
    <wire loc="75:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b4221ff23e8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b42220042d0"/></to>
    </wire>
    <wire loc="301:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b42220145c8"/></from>
      <to><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b42218d8428"/></to>
    </wire>
    <wire loc="302:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b4222013730"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4221fbf020"/></to>
    </wire>
    <wire loc="309:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b422200f378"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b4221fb3660"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="310:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2b422200e020"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b4221fb3660"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="311:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b422200eb78"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x2b4221fb3660"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="312:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b422200d768"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b4221983910"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b4221983910"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b4222759bc8"/></to>
    </wire>
    <wire loc="55:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4222757af8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b42219b1958"/></to>
    </wire>
    <wire loc="56:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b42227af9f0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b42219b0220"/></to>
    </wire>
    <wire loc="63:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b422278e700"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b4221a62560"/></to>
    </wire>
    <wire loc="75:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b4222791838"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b4221a6a4d0"/></to>
    </wire>
    <wire loc="76:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4222790740"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b4221a692a8"/></to>
    </wire>
    <wire loc="77:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b422278f060"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b4221a69b90"/></to>
    </wire>
    <wire loc="78:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b422278f638"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b4221a682a8"/></to>
    </wire>
    <wire loc="99:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b4221aef020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b42227ea510"/></to>
    </wire>
    <wire loc="100:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b4221aef760"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b42227eac50"/></to>
    </wire>
    <wire loc="101:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b42227e9570"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b4221aed020"/></to>
    </wire>
    <wire loc="103:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b42227e9cf0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b42227ee970"/></to>
    </wire>
    <wire loc="69:/home/tinyos/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b42227e8800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b42214041c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b422288fdc0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b4221a62560"/></to>
    </wire>
    <wire loc="58:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b422288e890"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b4221be8ab0"/></to>
    </wire>
    <wire loc="57:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2b422289a020"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2b4221c327f8"/></to>
    </wire>
    <wire loc="44:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x2b4221c327f8"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x2b4221c2c2e8"/></to>
    </wire>
    <wire loc="58:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b422289abd8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b4222897140"/></to>
    </wire>
    <wire loc="45:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b4222897140"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b4221c2b4a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b422289d458"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b4221c53db8"/></to>
    </wire>
    <wire loc="64:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b422289dd40"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b4221c52708"/></to>
    </wire>
    <wire loc="65:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x2b422289c4a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b4221c52e68"/></to>
    </wire>
    <wire loc="118:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2b4221c68988"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4221c693f0"/></to>
    </wire>
    <wire loc="63:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b42228c5450"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x2b4221d16b70"/></to>
    </wire>
    <wire loc="64:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b42228c4268"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b42219b0220"/></to>
    </wire>
    <wire loc="65:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x2b42228c4c98"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x2b4221d15a10"/></to>
    </wire>
    <wire loc="66:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x2b42228c3578"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x2b4221d143f0"/></to>
    </wire>
    <wire loc="189:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x2b42228c24f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b42214041c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x2b42228c2c90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b42214041c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x2b42228c3d18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b42214041c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x2b4222945d38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x2b4221d4a7e0"/></to>
    </wire>
    <wire loc="58:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b42229422a8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b4221d485b8"/></to>
    </wire>
    <wire loc="60:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x2b4222944670"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x2b4221d49120"/></to>
    </wire>
    <wire loc="61:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b4222944d90"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b4221d49840"/></to>
    </wire>
    <wire loc="63:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b42229439d8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b4221d31b98"/></to>
    </wire>
    <wire loc="56:/home/tinyos/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x2b4221d31b98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x2b4221d59a08"/></to>
    </wire>
    <wire loc="78:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x2b4222942d58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b42214041c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/home/tinyos/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x2b4221d2fb10"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x2b4221d5a9f0"/></to>
    </wire>
    <wire loc="54:/home/tinyos/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b4221d35e18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4221d5a198"/></to>
    </wire>
    <wire loc="76:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b4221d8c338"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b4221db6658"/></to>
    </wire>
    <wire loc="73:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b4221db8b10"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2b4221db10a0"/></to>
    </wire>
    <wire loc="70:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x2b4221dbbbe0"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x2b4221db4020"/></to>
    </wire>
    <wire loc="74:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b4221db7268"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b4221db1800"/></to>
    </wire>
    <wire loc="80:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b4221db6020"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b4221db05b8"/></to>
    </wire>
    <wire loc="78:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b4221dbb648"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2b4221db5a08"/></to>
    </wire>
    <wire loc="77:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b4221d8cd68"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2b4221db5120"/></to>
    </wire>
    <wire loc="61:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x2b422294eac0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b4221fba9f0"/></to>
    </wire>
    <wire loc="63:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4222950a10"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4221fbba30"/></to>
    </wire>
    <wire loc="64:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b422294faf8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b4221df2a30"/></to>
    </wire>
    <wire loc="26:/home/tinyos/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b4221df2a30"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b4221e175e0"/></to>
    </wire>
    <wire loc="66:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x2b4222951e60"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x2b4221fb98c8"/></to>
    </wire>
    <wire loc="65:/home/tinyos/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b4221e175e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b4221fa5128"/></to>
    </wire>
    <wire loc="61:/home/tinyos/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b4221e1c1c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b4221f7c5e0"/></to>
    </wire>
    <wire loc="59:/home/tinyos/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b4221e1e3e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4221e15c20"/></to>
    </wire>
    <wire loc="35:/home/tinyos/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b4221e15c20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4221f1a020"/></to>
    </wire>
    <wire loc="62:/home/tinyos/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x2b4221f76858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b4221f59ab0"/></to>
    </wire>
    <wire loc="63:/home/tinyos/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4221f54c70"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x2b4221e12648"/></to>
    </wire>
    <wire loc="36:/home/tinyos/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x2b4221e12648"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4221f1a7c8"/></to>
    </wire>
    <wire loc="66:/home/tinyos/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b4221f9c330"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x2b4221e077b8"/></to>
    </wire>
    <wire loc="37:/home/tinyos/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x2b4221e077b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4221f17a90"/></to>
    </wire>
    <wire loc="72:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b4221f17a90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b4222988ca8"/></to>
    </wire>
    <wire loc="70:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b4221f1a020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b422298c398"/></to>
    </wire>
    <wire loc="71:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4221f1a7c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b422298cb40"/></to>
    </wire>
    <wire loc="74:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b4222985020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b4221e85288"/></to>
    </wire>
    <wire loc="94:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b4221e85288"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b4221eade08"/></to>
    </wire>
    <wire loc="75:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b4222981e70"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b4221eb43c0"/></to>
    </wire>
    <wire loc="95:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b4221eb43c0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b4221ea4020"/></to>
    </wire>
    <wire loc="76:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b422297e060"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b4221eb37f8"/></to>
    </wire>
    <wire loc="96:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b4221eb37f8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b4221ea3340"/></to>
    </wire>
    <wire loc="77:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b422297b200"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b4221eaf9e8"/></to>
    </wire>
    <wire loc="97:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x2b4221eaf9e8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x2b4221ea0c78"/></to>
    </wire>
    <wire loc="74:/home/tinyos/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x2b4221f51cf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b42214041c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/tinyos/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x2b4221fa9930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b42214041c8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/home/tinyos/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x2b4221f931c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x2b4221e1c1c8"/></to>
    </wire>
    <wire loc="76:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x2b4221fcab78"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x2b4221ffc020"/></to>
    </wire>
    <wire loc="73:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x2b4221ffe3f0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x2b4221ff8a08"/></to>
    </wire>
    <wire loc="74:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x2b4221ffeb10"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x2b4221ff72a8"/></to>
    </wire>
    <wire loc="80:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b4221ffd8c8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b4221ff6060"/></to>
    </wire>
    <wire loc="78:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x2b4222000020"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x2b4221ffb430"/></to>
    </wire>
    <wire loc="77:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x2b4222001700"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x2b4221ffca90"/></to>
    </wire>
    <wire loc="75:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b42221252e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4222306b68"/></to>
    </wire>
    <wire loc="91:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b4221fe6458"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b42220343b0"/></to>
    </wire>
    <wire loc="81:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4222121438"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b42222fe400"/></to>
    </wire>
    <wire loc="83:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x2b4222056100"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x2b42220145c8"/></to>
    </wire>
    <wire loc="86:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b4222056e10"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b422200f378"/></to>
    </wire>
    <wire loc="89:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x2b4222055988"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x2b422200e020"/></to>
    </wire>
    <wire loc="92:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b4222054518"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b422200eb78"/></to>
    </wire>
    <wire loc="95:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b42220522b0"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b4222013730"/></to>
    </wire>
    <wire loc="98:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b4222058020"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4222121438"/></to>
    </wire>
    <wire loc="101:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x2b422204eab8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x2b422200d768"/></to>
    </wire>
    <wire loc="103:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x2b422202d130"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x2b422212d718"/></to>
    </wire>
    <wire loc="69:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x2b422212d718"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b422154a7e0"/></to>
    </wire>
    <wire loc="104:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b422202c4f8"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x2b422212a990"/></to>
    </wire>
    <wire loc="63:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x2b422212a990"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b4222133e80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="105:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b42220250f0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b42221295e8"/></to>
    </wire>
    <wire loc="64:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b42221295e8"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b422213b9d0"/></to>
    </wire>
    <wire loc="107:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x2b4222025c00"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x2b4222128140"/></to>
    </wire>
    <wire loc="67:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x2b4222128140"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x2b42215504d0"/></to>
    </wire>
    <wire loc="108:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b422202adf0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x2b4222127338"/></to>
    </wire>
    <wire loc="68:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x2b4222127338"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x2b422153f4d0"/></to>
    </wire>
    <wire loc="110:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x2b42220205e8"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x2b42221264c0"/></to>
    </wire>
    <wire loc="57:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x2b42221264c0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x2b4222120ce0"/></to>
    </wire>
    <wire loc="111:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x2b422204e020"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x2b42219b0220"/></to>
    </wire>
    <wire loc="112:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x2b4222057c60"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x2b42223813c0"/></to>
    </wire>
    <wire loc="847:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <from><interface-ref name="releaseSpi" scoped="" ref="0x2b42220efd98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b42214041c8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/home/tinyos/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x2b4222306b68"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x2b4222a5a9d8"/></to>
    </wire>
    <wire loc="95:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x2b422213b9d0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x2b4222130688"/></to>
    </wire>
    <wire loc="48:/home/tinyos/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x2b42222fe400"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x2b4222346c38"/></to>
    </wire>
    <wire loc="59:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x2b4222111c18"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x2b422155d020"/></to>
    </wire>
    <wire loc="60:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x2b4222110e08"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x2b4221561c78"/></to>
    </wire>
    <wire loc="72:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b4222113540"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b422221dca0"/></to>
    </wire>
    <wire loc="91:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x2b422221dca0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x2b4222243350"/></to>
    </wire>
    <wire loc="96:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x2b42221331d8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x2b422212f140"/></to>
    </wire>
    <wire loc="94:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x2b422213b388"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x2b4222130080"/></to>
    </wire>
    <wire loc="92:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x2b422211dcd8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x2b4222134a20"/></to>
    </wire>
    <wire loc="97:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b4222133e80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b422212fda8"/></to>
    </wire>
    <wire loc="99:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x2b42221503c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b42221ed748"/></to>
    </wire>
    <wire loc="98:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x2b42221ed748"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x2b4222a14a28"/></to>
    </wire>
    <wire loc="100:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b422214e020"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b422222ec50"/></to>
    </wire>
    <wire loc="100:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x2b422222ec50"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x2b4222a11020"/></to>
    </wire>
    <wire loc="101:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x2b4222151150"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x2b42221c3020"/></to>
    </wire>
    <wire loc="83:/home/tinyos/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x2b42221c3020"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x2b42221c0dc8"/></to>
    </wire>
    <wire loc="102:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x2b422214e7c8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b42214fb3c8"/></to>
    </wire>
    <wire loc="296:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x2b422216eb58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b42214041c8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/home/tinyos/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x2b42221b3350"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x2b42214fb3c8"/></to>
    </wire>
    <wire loc="86:/home/tinyos/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x2b42221b6c70"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x2b422154a7e0"/></to>
    </wire>
    <wire loc="87:/home/tinyos/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x2b42221b9de0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x2b4221549968"/></to>
    </wire>
    <wire loc="88:/home/tinyos/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x2b42221b5020"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x2b4221548af0"/></to>
    </wire>
    <wire loc="89:/home/tinyos/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x2b42221b4190"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x2b4221547c78"/></to>
    </wire>
    <wire loc="99:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x2b422222e510"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x2b4222a12820"/></to>
    </wire>
    <wire loc="101:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x2b4222a118c0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x2b422222d550"/></to>
    </wire>
    <wire loc="103:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x2b4222a100a0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x2b4222a16bc0"/></to>
    </wire>
    <wire loc="69:/home/tinyos/tinyos-main/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x2b4222a10b50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x2b42214041c8"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x2b42222145e8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x2b4222246c90"/></to>
    </wire>
    <wire loc="89:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b42222256e8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b422224dbe8"/></to>
    </wire>
    <wire loc="93:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b4222210a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x2b4222240c48"/></to>
    </wire>
    <wire loc="94:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b4222210a20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x2b422223a020"/></to>
    </wire>
    <wire loc="95:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x2b4222210a20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x2b4222236360"/></to>
    </wire>
    <wire loc="43:/home/tinyos/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b4222a56a30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b42222256e8"/></to>
    </wire>
    <wire loc="44:/home/tinyos/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b4222a51a80"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x2b4222210a20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="27:/home/tinyos/tinyos-main/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b42222b5540"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b42222256e8"/></to>
    </wire>
    <wire loc="49:/home/tinyos/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b4222345e48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b422234c270"/></to>
    </wire>
    <wire loc="50:/home/tinyos/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x2b422234a450"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b42222fa150"/></to>
    </wire>
    <wire loc="31:/home/tinyos/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x2b42222fa150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x2b422233be08"/></to>
    </wire>
    <wire loc="32:/home/tinyos/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x2b4222328020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x2b42222256e8"/></to>
    </wire>
    <wire loc="55:/home/tinyos/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x2b42223fa760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x2b42218502a8"/></to>
    </wire>
    <wire loc="56:/home/tinyos/tinyos-main/tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x2b42223f93f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x2b422184f020"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/tinyos/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/home/tinyos/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/tinyos/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/tinyos/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/tinyos/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/tinyos/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/tinyos/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/tinyos/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/tinyos/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/tinyos/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/tinyos/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/tinyos/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/tinyos/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/tinyos/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/tinyos/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/tinyos/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/home/tinyos/tinyos-main/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/home/tinyos/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RadioCountToLedsC" loc="57:RadioCountToLedsC.nc" safe="">
      <documentation loc="46:RadioCountToLedsC.nc">
        <short>&#10; Implementation of the RadioCountToLeds application.</short>
        <long>&#10; Implementation of the RadioCountToLeds application. RadioCountToLeds &#10; maintains a 4Hz counter, broadcasting its value in an AM packet &#10; every time it gets updated. A RadioCountToLeds node that hears a counter &#10; displays the bottom three bits on its LEDs. This application is a useful &#10; test to show that basic AM communication and timers work.&#10;&#10; @author Philip Levis&#10; @date   June 6 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/tinyos/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/tinyos/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/tinyos/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/tinyos/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/tinyos/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RadioCountToLedsAppC.AMSenderC" loc="47(RadioCountToLedsAppC.AMSenderC):/home/tinyos/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/tinyos/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioCountToLedsAppC.AMSenderC.SenderC" loc="47(RadioCountToLedsAppC.AMSenderC.SenderC):/home/tinyos/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/tinyos/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioCountToLedsAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(RadioCountToLedsAppC.AMSenderC.SenderC.AMQueueEntryP):/home/tinyos/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/tinyos/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/tinyos/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/tinyos/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/tinyos/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/tinyos/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="37:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="41:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioC" loc="37:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <configuration/>
    </component>
    <component qname="RF230RadioP" loc="39:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC" loc="37(RF230RadioC.RadioAlarmC):/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.RadioAlarmC.RadioAlarmP" loc="39(RF230RadioC.RadioAlarmC.RadioAlarmP):/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC" loc="35(RF230RadioC.ActiveMessageLayerC):/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/home/tinyos/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/home/tinyos/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.AutoResourceAcquireLayerC" loc="35(RF230RadioC.AutoResourceAcquireLayerC):/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC" loc="83(RF230RadioC.SendResourceC):/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Queue" loc="42(RF230RadioC.SendResourceC.Queue):/home/tinyos/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.SendResourceC.Arbiter" loc="49(RF230RadioC.SendResourceC.Arbiter):/home/tinyos/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/tinyos/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154MessageLayerC" loc="35(RF230RadioC.Ieee154MessageLayerC):/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TinyosNetworkLayerC" loc="50(RF230RadioC.TinyosNetworkLayerC):/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC" loc="35(RF230RadioC.Ieee154PacketLayerC):/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC" loc="35(RF230RadioC.UniqueLayerC):/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.UniqueLayerP" loc="38(RF230RadioC.UniqueLayerC.UniqueLayerP):/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RF230RadioC.UniqueLayerC.NeighborhoodFlagC):/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.PacketLinkLayerC" loc="73(RF230RadioC.PacketLinkLayerC):/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC" loc="35(RF230RadioC.LowPowerListeningLayerC):/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC" loc="35(RF230RadioC.MessageBufferLayerC):/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RF230RadioC.MessageBufferLayerC.MessageBufferLayerP):/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC" loc="35(RF230RadioC.CollisionAvoidanceLayerC):/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/tinyos/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/tinyos/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/tinyos/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/tinyos/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RF230RadioC.SoftwareAckLayerC" loc="38(RF230RadioC.SoftwareAckLayerC):/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.CsmaLayerC" loc="35(RF230RadioC.CsmaLayerC):/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC" loc="37(RF230RadioC.TimeStampingLayerC):/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RF230RadioC.TimeStampingLayerC.TimeStampingLayerP):/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/home/tinyos/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/home/tinyos/tinyos-main/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/tinyos/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/tinyos/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/tinyos/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b4221e37780"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/tinyos/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/tinyos/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/tinyos/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/tinyos/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/tinyos/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/tinyos/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230RadioC.MetadataFlagsLayerC" loc="38(RF230RadioC.MetadataFlagsLayerC):/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF230RadioC.TrafficMonitorLayerC" loc="35(RF230RadioC.TrafficMonitorLayerC):/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230DriverLayerC" loc="38:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230DriverLayerP" loc="42:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="37:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="35:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="80:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="66:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="67:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/home/tinyos/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/home/tinyos/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/home/tinyos/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/home/tinyos/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/home/tinyos/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/home/tinyos/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/home/tinyos/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer1C" loc="75:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="67:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="75:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="66:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/home/tinyos/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/home/tinyos/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="InitOneP.InitOne" loc="44(InitOneP.InitOne):/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="51(HplRF230C.AlarmC.NAlarm):/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TOne" ref="0x2b42214ce9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="37:/home/tinyos/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/home/tinyos/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/home/tinyos/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="42(CounterOne16C.NCounter):/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TOne" ref="0x2b42214ce9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="54(LocalTimeMicroC.TransformCounterC):/home/tinyos/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b4221496788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b4221496788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="46(LocalTimeMicroC.CounterToLocalTimeC):/home/tinyos/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/tinyos/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b4221496788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="34:/home/tinyos/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="RadioCountToLedsAppC.AMReceiverC" loc="43(RadioCountToLedsAppC.AMReceiverC):/home/tinyos/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/tinyos/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RadioCountToLedsAppC.TimerMilliC" loc="44(RadioCountToLedsAppC.TimerMilliC):/home/tinyos/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/tinyos/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b4221580d08" loc="40:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b422157d0c8" loc="40:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b422157d410" loc="40:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b4221592610" loc="41:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b4221592978" loc="42:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b4221592ce0" loc="43:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b422158f060" loc="44:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x2b4221622508" loc="42:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x2b4221622870" loc="43:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x2b4221622bd8" loc="44:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x2b4221621020" loc="45:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/tinyos/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/tinyos/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b42217cb480" loc="47:/home/tinyos/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/tinyos/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/tinyos/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x2b42217e0348" loc="47:/home/tinyos/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/tinyos/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/tinyos/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b42217dce28" loc="43:/home/tinyos/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/tinyos/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/tinyos/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x2b42218042a8" loc="45:/home/tinyos/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x2b4221a97ab8" loc="83:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/home/tinyos/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x2b4221aab170" loc="42:/home/tinyos/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/home/tinyos/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/home/tinyos/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b4221e37780" loc="58:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b4221e37780"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b4221e37a70" loc="58:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x2b4221e2cc80" loc="58:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x2b4221e2cc80"/></type-var>
        </typedef>
        <constant name="divider" ref="0x2b4221e29020" loc="58:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/tinyos/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/tinyos/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4221e13c60" loc="46:/home/tinyos/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4221e13c60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/tinyos/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4221f4ecd0" loc="46:/home/tinyos/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4221f4ecd0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x2b4221f4b020" loc="46:/home/tinyos/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/tinyos/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/tinyos/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4221fa79f8" loc="46:/home/tinyos/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4221fa79f8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/home/tinyos/tinyos-main/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/home/tinyos/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="44:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b42222c3e08" loc="44:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b42222c3e08"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x2b42222c01a0" loc="44:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="51:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b42222c4750" loc="51:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b42222c4750"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b42222f1020" loc="52:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b42222f1020"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x2b42222f1320" loc="53:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="42:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x2b422233c580" loc="42:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x2b422233c580"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x2b422233ccd0" loc="43:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b422233ccd0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/home/tinyos/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x2b4222321920" loc="55:/home/tinyos/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x2b4222321920"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x2b422231e110" loc="56:/home/tinyos/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x2b422231e110"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x2b422231e4d8" loc="57:/home/tinyos/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x2b422231e4d8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x2b422231ec50" loc="58:/home/tinyos/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x2b422231ec50"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x2b422231d020" loc="59:/home/tinyos/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x2b422231d7b0" loc="60:/home/tinyos/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x2b422231d7b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/tinyos/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/tinyos/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x2b42223b60c8" loc="43:/home/tinyos/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/tinyos/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/tinyos/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x2b4221513d50" loc="58:/home/tinyos/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b4221513d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b42215200d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b422151f940" loc="57:/home/tinyos/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b422151f940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b422151fc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b422151b9a0" loc="52:/home/tinyos/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b422151b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b422151bcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4221520cd0" loc="46:/home/tinyos/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4221520cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b422151c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b4221526b98" loc="50:/home/tinyos/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b4221526b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b422151b020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b422151b1a8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b422151b330"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b422151b4b8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b422151b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x2b4221523b90" loc="45:/home/tinyos/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x2b4221523b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4221530020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b42215234f0" loc="44:/home/tinyos/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b42215234f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4221523840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x2b4221530398" loc="46:/home/tinyos/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x2b4221530398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b42215306e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b422152b108" loc="41:/home/tinyos/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b422152b108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b422152b458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b4221525a10" loc="40:/home/tinyos/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b4221525a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4221525d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x2b42215357f8" loc="45:/home/tinyos/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x2b42215357f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4221535b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x2b422153d5f8" loc="44:/home/tinyos/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x2b422153d5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422153d948"/>
        <function-ref name="isInput" scoped="" ref="0x2b422153dad0"/>
        <function-ref name="toggle" scoped="" ref="0x2b422153dc58"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422153dde0"/>
        <function-ref name="get" scoped="" ref="0x2b4221535020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215351a8"/>
        <function-ref name="set" scoped="" ref="0x2b4221535330"/>
        <function-ref name="clr" scoped="" ref="0x2b42215354b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b4221536460" loc="43:/home/tinyos/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b4221536460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b42215367b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x2b422157ac78" loc="98:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x2b422157ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215795e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221579770"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215798f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221579a80"/>
        <function-ref name="get" scoped="" ref="0x2b4221579c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221579d90"/>
        <function-ref name="set" scoped="" ref="0x2b4221578020"/>
        <function-ref name="clr" scoped="" ref="0x2b42215781a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x2b42215547e0" loc="72:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x2b42215547e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221554b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221554cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221554e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221563020"/>
        <function-ref name="get" scoped="" ref="0x2b42215631a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221563330"/>
        <function-ref name="set" scoped="" ref="0x2b42215634b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4221563640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x2b42215687e0" loc="83:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x2b42215687e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221568b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221568cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221568e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221567020"/>
        <function-ref name="get" scoped="" ref="0x2b42215671a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221567330"/>
        <function-ref name="set" scoped="" ref="0x2b42215674b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4221567640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x2b422156f4d0" loc="92:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x2b422156f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422156f820"/>
        <function-ref name="isInput" scoped="" ref="0x2b422156f9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b422156fb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422156fcb8"/>
        <function-ref name="get" scoped="" ref="0x2b422156fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422156e020"/>
        <function-ref name="set" scoped="" ref="0x2b422156e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b422156e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x2b4221583af0" loc="103:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x2b4221583af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221583e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221582020"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215821a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221582330"/>
        <function-ref name="get" scoped="" ref="0x2b42215824b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221582640"/>
        <function-ref name="set" scoped="" ref="0x2b42215827c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4221582950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x2b422153f4d0" loc="50:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x2b422153f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422153f820"/>
        <function-ref name="isInput" scoped="" ref="0x2b422153f9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b422153fb30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422153fcb8"/>
        <function-ref name="get" scoped="" ref="0x2b422153fe40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422154b020"/>
        <function-ref name="set" scoped="" ref="0x2b422154b1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b422154b330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x2b42215711a0" loc="90:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x2b42215711a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215714f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221571678"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221571800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221571988"/>
        <function-ref name="get" scoped="" ref="0x2b4221571b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221571c98"/>
        <function-ref name="set" scoped="" ref="0x2b4221571e20"/>
        <function-ref name="clr" scoped="" ref="0x2b4221570020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x2b422154a7e0" loc="53:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x2b422154a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422154ab30"/>
        <function-ref name="isInput" scoped="" ref="0x2b422154acb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b422154ae40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221549020"/>
        <function-ref name="get" scoped="" ref="0x2b42215491a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221549330"/>
        <function-ref name="set" scoped="" ref="0x2b42215494b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4221549640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x2b422154d968" loc="64:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x2b422154d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422154dcb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b422154de40"/>
        <function-ref name="toggle" scoped="" ref="0x2b422155b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422155b1a8"/>
        <function-ref name="get" scoped="" ref="0x2b422155b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422155b4b8"/>
        <function-ref name="set" scoped="" ref="0x2b422155b640"/>
        <function-ref name="clr" scoped="" ref="0x2b422155b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x2b4221561c78" loc="75:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x2b4221561c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221560020"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215601a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221560330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215604b8"/>
        <function-ref name="get" scoped="" ref="0x2b4221560640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215607c8"/>
        <function-ref name="set" scoped="" ref="0x2b4221560950"/>
        <function-ref name="clr" scoped="" ref="0x2b4221560ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x2b4221565c78" loc="86:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x2b4221565c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221564020"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215641a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221564330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215644b8"/>
        <function-ref name="get" scoped="" ref="0x2b4221564640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215647c8"/>
        <function-ref name="set" scoped="" ref="0x2b4221564950"/>
        <function-ref name="clr" scoped="" ref="0x2b4221564ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x2b4221545c78" loc="45:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x2b4221545c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221544020"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215441a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221544330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215444b8"/>
        <function-ref name="get" scoped="" ref="0x2b4221544640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215447c8"/>
        <function-ref name="set" scoped="" ref="0x2b4221544950"/>
        <function-ref name="clr" scoped="" ref="0x2b4221544ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x2b4221547c78" loc="56:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x2b4221547c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221546020"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215461a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221546330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215464b8"/>
        <function-ref name="get" scoped="" ref="0x2b4221546640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215467c8"/>
        <function-ref name="set" scoped="" ref="0x2b4221546950"/>
        <function-ref name="clr" scoped="" ref="0x2b4221546ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x2b4221559e00" loc="67:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x2b4221559e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215581a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221558330"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215584b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221558640"/>
        <function-ref name="get" scoped="" ref="0x2b42215587c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221558950"/>
        <function-ref name="set" scoped="" ref="0x2b4221558ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b4221558c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x2b422155c1a0" loc="78:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x2b422155c1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422155c4f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b422155c678"/>
        <function-ref name="toggle" scoped="" ref="0x2b422155c800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422155c988"/>
        <function-ref name="get" scoped="" ref="0x2b422155cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422155cc98"/>
        <function-ref name="set" scoped="" ref="0x2b422155ce20"/>
        <function-ref name="clr" scoped="" ref="0x2b422156b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x2b422156c968" loc="95:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x2b422156c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422156ccb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b422156ce40"/>
        <function-ref name="toggle" scoped="" ref="0x2b422157b020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422157b1a8"/>
        <function-ref name="get" scoped="" ref="0x2b422157b330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422157b4b8"/>
        <function-ref name="set" scoped="" ref="0x2b422157b640"/>
        <function-ref name="clr" scoped="" ref="0x2b422157b7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x2b42215767e0" loc="101:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x2b42215767e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221576b30"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221576cb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221576e40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221575020"/>
        <function-ref name="get" scoped="" ref="0x2b42215751a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221575330"/>
        <function-ref name="set" scoped="" ref="0x2b42215754b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4221575640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x2b422156a4d0" loc="81:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x2b422156a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422156a820"/>
        <function-ref name="isInput" scoped="" ref="0x2b422156a9a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b422156ab30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422156acb8"/>
        <function-ref name="get" scoped="" ref="0x2b422156ae40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221569020"/>
        <function-ref name="set" scoped="" ref="0x2b42215691a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4221569330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x2b42215411a0" loc="48:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x2b42215411a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215414f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221541678"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221541800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221541988"/>
        <function-ref name="get" scoped="" ref="0x2b4221541b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221541c98"/>
        <function-ref name="set" scoped="" ref="0x2b4221541e20"/>
        <function-ref name="clr" scoped="" ref="0x2b4221540020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x2b4221551348" loc="59:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x2b4221551348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221551698"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221551820"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215519a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221551b30"/>
        <function-ref name="get" scoped="" ref="0x2b4221551cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221551e40"/>
        <function-ref name="set" scoped="" ref="0x2b4221550020"/>
        <function-ref name="clr" scoped="" ref="0x2b42215501a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x2b42215784d0" loc="99:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x2b42215784d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221578820"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215789a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221578b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221578cb8"/>
        <function-ref name="get" scoped="" ref="0x2b4221578e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221577020"/>
        <function-ref name="set" scoped="" ref="0x2b42215771a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4221577330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x2b422154f658" loc="62:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x2b422154f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422154f9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b422154fb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b422154fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422154fe40"/>
        <function-ref name="get" scoped="" ref="0x2b422154e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422154e1a8"/>
        <function-ref name="set" scoped="" ref="0x2b422154e330"/>
        <function-ref name="clr" scoped="" ref="0x2b422154e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x2b4221563968" loc="73:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x2b4221563968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221563cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221563e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221562020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215621a8"/>
        <function-ref name="get" scoped="" ref="0x2b4221562330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215624b8"/>
        <function-ref name="set" scoped="" ref="0x2b4221562640"/>
        <function-ref name="clr" scoped="" ref="0x2b42215627c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x2b4221567968" loc="84:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x2b4221567968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221567cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221567e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221566020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215661a8"/>
        <function-ref name="get" scoped="" ref="0x2b4221566330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215664b8"/>
        <function-ref name="set" scoped="" ref="0x2b4221566640"/>
        <function-ref name="clr" scoped="" ref="0x2b42215667c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x2b422156e658" loc="93:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x2b422156e658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422156e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b422156eb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b422156ecb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422156ee40"/>
        <function-ref name="get" scoped="" ref="0x2b422156d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422156d1a8"/>
        <function-ref name="set" scoped="" ref="0x2b422156d330"/>
        <function-ref name="clr" scoped="" ref="0x2b422156d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x2b422154b658" loc="51:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x2b422154b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422154b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b422154bb30"/>
        <function-ref name="toggle" scoped="" ref="0x2b422154bcb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422154be40"/>
        <function-ref name="get" scoped="" ref="0x2b422154a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422154a1a8"/>
        <function-ref name="set" scoped="" ref="0x2b422154a330"/>
        <function-ref name="clr" scoped="" ref="0x2b422154a4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x2b4221549968" loc="54:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x2b4221549968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221549cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221549e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221548020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215481a8"/>
        <function-ref name="get" scoped="" ref="0x2b4221548330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215484b8"/>
        <function-ref name="set" scoped="" ref="0x2b4221548640"/>
        <function-ref name="clr" scoped="" ref="0x2b42215487c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x2b422155baf0" loc="65:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x2b422155baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422155be40"/>
        <function-ref name="isInput" scoped="" ref="0x2b422155a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b422155a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422155a330"/>
        <function-ref name="get" scoped="" ref="0x2b422155a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422155a640"/>
        <function-ref name="set" scoped="" ref="0x2b422155a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b422155a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x2b4221560e00" loc="76:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x2b4221560e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422155e1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b422155e330"/>
        <function-ref name="toggle" scoped="" ref="0x2b422155e4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422155e640"/>
        <function-ref name="get" scoped="" ref="0x2b422155e7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422155e950"/>
        <function-ref name="set" scoped="" ref="0x2b422155ead8"/>
        <function-ref name="clr" scoped="" ref="0x2b422155ec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x2b4221564e00" loc="87:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x2b4221564e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215731a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221573330"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215734b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221573640"/>
        <function-ref name="get" scoped="" ref="0x2b42215737c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221573950"/>
        <function-ref name="set" scoped="" ref="0x2b4221573ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b4221573c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x2b4221544e00" loc="46:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x2b4221544e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215431a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221543330"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215434b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221543640"/>
        <function-ref name="get" scoped="" ref="0x2b42215437c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221543950"/>
        <function-ref name="set" scoped="" ref="0x2b4221543ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b4221543c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x2b4221546e00" loc="57:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x2b4221546e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215532e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221553470"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215535f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221553780"/>
        <function-ref name="get" scoped="" ref="0x2b4221553908"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221553a90"/>
        <function-ref name="set" scoped="" ref="0x2b4221553c18"/>
        <function-ref name="clr" scoped="" ref="0x2b4221553da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x2b4221557020" loc="68:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x2b4221557020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221557370"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215574f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221557680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221557808"/>
        <function-ref name="get" scoped="" ref="0x2b4221557990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221557b18"/>
        <function-ref name="set" scoped="" ref="0x2b4221557ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4221557e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x2b422157baf0" loc="96:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x2b422157baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422157be40"/>
        <function-ref name="isInput" scoped="" ref="0x2b422157a020"/>
        <function-ref name="toggle" scoped="" ref="0x2b422157a1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422157a330"/>
        <function-ref name="get" scoped="" ref="0x2b422157a4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422157a640"/>
        <function-ref name="set" scoped="" ref="0x2b422157a7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b422157a950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x2b4221555348" loc="71:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x2b4221555348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221555898"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221555a20"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221555ba8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221555d30"/>
        <function-ref name="get" scoped="" ref="0x2b4221554020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215541a8"/>
        <function-ref name="set" scoped="" ref="0x2b4221554330"/>
        <function-ref name="clr" scoped="" ref="0x2b42215544b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x2b4221569658" loc="82:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x2b4221569658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215699a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221569b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221569cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221569e40"/>
        <function-ref name="get" scoped="" ref="0x2b4221568020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215681a8"/>
        <function-ref name="set" scoped="" ref="0x2b4221568330"/>
        <function-ref name="clr" scoped="" ref="0x2b42215684b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x2b4221570348" loc="91:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x2b4221570348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221570698"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221570820"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215709a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221570b30"/>
        <function-ref name="get" scoped="" ref="0x2b4221570cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221570e40"/>
        <function-ref name="set" scoped="" ref="0x2b422156f020"/>
        <function-ref name="clr" scoped="" ref="0x2b422156f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x2b4221575968" loc="102:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x2b4221575968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221575cb8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221575e40"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221583020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215831a8"/>
        <function-ref name="get" scoped="" ref="0x2b4221583330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215834b8"/>
        <function-ref name="set" scoped="" ref="0x2b4221583640"/>
        <function-ref name="clr" scoped="" ref="0x2b42215837c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x2b4221540348" loc="49:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x2b4221540348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221540698"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221540820"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215409a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221540b30"/>
        <function-ref name="get" scoped="" ref="0x2b4221540cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221540e40"/>
        <function-ref name="set" scoped="" ref="0x2b422153f020"/>
        <function-ref name="clr" scoped="" ref="0x2b422153f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x2b42215504d0" loc="60:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x2b42215504d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221550820"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215509a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221550b30"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221550cb8"/>
        <function-ref name="get" scoped="" ref="0x2b4221550e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422154f020"/>
        <function-ref name="set" scoped="" ref="0x2b422154f1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b422154f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x2b4221572020" loc="89:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x2b4221572020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221572370"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215724f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221572680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221572808"/>
        <function-ref name="get" scoped="" ref="0x2b4221572990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221572b18"/>
        <function-ref name="set" scoped="" ref="0x2b4221572ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4221572e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x2b422154e7e0" loc="63:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x2b422154e7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422154eb30"/>
        <function-ref name="isInput" scoped="" ref="0x2b422154ecb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b422154ee40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422154d020"/>
        <function-ref name="get" scoped="" ref="0x2b422154d1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422154d330"/>
        <function-ref name="set" scoped="" ref="0x2b422154d4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b422154d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x2b4221562af0" loc="74:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x2b4221562af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221562e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221561020"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215611a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221561330"/>
        <function-ref name="get" scoped="" ref="0x2b42215614b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221561640"/>
        <function-ref name="set" scoped="" ref="0x2b42215617c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4221561950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x2b4221566af0" loc="85:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x2b4221566af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221566e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221565020"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215651a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221565330"/>
        <function-ref name="get" scoped="" ref="0x2b42215654b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221565640"/>
        <function-ref name="set" scoped="" ref="0x2b42215657c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4221565950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x2b422156d7e0" loc="94:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x2b422156d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422156db30"/>
        <function-ref name="isInput" scoped="" ref="0x2b422156dcb8"/>
        <function-ref name="toggle" scoped="" ref="0x2b422156de40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422156c020"/>
        <function-ref name="get" scoped="" ref="0x2b422156c1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422156c330"/>
        <function-ref name="set" scoped="" ref="0x2b422156c4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b422156c640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x2b422152aa78" loc="44:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x2b422152aa78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422152adc8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221545020"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215451a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221545330"/>
        <function-ref name="get" scoped="" ref="0x2b42215454b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221545640"/>
        <function-ref name="set" scoped="" ref="0x2b42215457c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4221545950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x2b4221548af0" loc="55:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x2b4221548af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221548e40"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221547020"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215471a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221547330"/>
        <function-ref name="get" scoped="" ref="0x2b42215474b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221547640"/>
        <function-ref name="set" scoped="" ref="0x2b42215477c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4221547950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x2b422155ac78" loc="66:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x2b422155ac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221559020"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215591a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221559330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215594b8"/>
        <function-ref name="get" scoped="" ref="0x2b4221559640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215597c8"/>
        <function-ref name="set" scoped="" ref="0x2b4221559950"/>
        <function-ref name="clr" scoped="" ref="0x2b4221559ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x2b422155d020" loc="77:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x2b422155d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422155d370"/>
        <function-ref name="isInput" scoped="" ref="0x2b422155d4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b422155d680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422155d808"/>
        <function-ref name="get" scoped="" ref="0x2b422155d990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422155db18"/>
        <function-ref name="set" scoped="" ref="0x2b422155dca0"/>
        <function-ref name="clr" scoped="" ref="0x2b422155de28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x2b4221577658" loc="100:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x2b4221577658"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215779a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221577b30"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221577cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221577e40"/>
        <function-ref name="get" scoped="" ref="0x2b4221576020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215761a8"/>
        <function-ref name="set" scoped="" ref="0x2b4221576330"/>
        <function-ref name="clr" scoped="" ref="0x2b42215764b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x2b422156b348" loc="80:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x2b422156b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422156b698"/>
        <function-ref name="isInput" scoped="" ref="0x2b422156b820"/>
        <function-ref name="toggle" scoped="" ref="0x2b422156b9a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422156bb30"/>
        <function-ref name="get" scoped="" ref="0x2b422156bcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422156be40"/>
        <function-ref name="set" scoped="" ref="0x2b422156a020"/>
        <function-ref name="clr" scoped="" ref="0x2b422156a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x2b42215561a0" loc="69:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x2b42215561a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215564f0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221556678"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221556800"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221556988"/>
        <function-ref name="get" scoped="" ref="0x2b4221556b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221556c98"/>
        <function-ref name="set" scoped="" ref="0x2b4221556e20"/>
        <function-ref name="clr" scoped="" ref="0x2b4221555020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x2b4221542020" loc="47:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x2b4221542020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221542370"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215424f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221542680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221542808"/>
        <function-ref name="get" scoped="" ref="0x2b4221542990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221542b18"/>
        <function-ref name="set" scoped="" ref="0x2b4221542ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4221542e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x2b4221552100" loc="58:/home/tinyos/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x2b4221552100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221552450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215525d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221552760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215528e8"/>
        <function-ref name="get" scoped="" ref="0x2b4221552a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221552bf8"/>
        <function-ref name="set" scoped="" ref="0x2b4221552d80"/>
        <function-ref name="clr" scoped="" ref="0x2b4221551020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b42215ca120" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b42215ca120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215ca470"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215ca5f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215ca780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215ca908"/>
        <function-ref name="get" scoped="" ref="0x2b42215caa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215cac18"/>
        <function-ref name="set" scoped="" ref="0x2b42215cada0"/>
        <function-ref name="clr" scoped="" ref="0x2b42215c8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b42215c65b8" loc="49:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b42215c65b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215c6908"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215c6a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215c6c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215c6da0"/>
        <function-ref name="get" scoped="" ref="0x2b42215c5020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215c51a8"/>
        <function-ref name="set" scoped="" ref="0x2b42215c5330"/>
        <function-ref name="clr" scoped="" ref="0x2b42215c54b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b42215bddc0" loc="44:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b42215bddc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215bc170"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215bc2f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215bc480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215bc608"/>
        <function-ref name="get" scoped="" ref="0x2b42215bc790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215bc918"/>
        <function-ref name="set" scoped="" ref="0x2b42215bcaa0"/>
        <function-ref name="clr" scoped="" ref="0x2b42215bcc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b42215c82a8" loc="47:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b42215c82a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215c85f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215c8780"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215c8908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215c8a90"/>
        <function-ref name="get" scoped="" ref="0x2b42215c8c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215c8da0"/>
        <function-ref name="set" scoped="" ref="0x2b42215c7020"/>
        <function-ref name="clr" scoped="" ref="0x2b42215c71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b42215c5740" loc="50:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b42215c5740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215c5a90"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215c5c18"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215c5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215c4020"/>
        <function-ref name="get" scoped="" ref="0x2b42215c41a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215c4330"/>
        <function-ref name="set" scoped="" ref="0x2b42215c44b8"/>
        <function-ref name="clr" scoped="" ref="0x2b42215c4640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b42215cb020" loc="45:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b42215cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215cb370"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215cb4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215cb680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215cb808"/>
        <function-ref name="get" scoped="" ref="0x2b42215cb990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215cbb18"/>
        <function-ref name="set" scoped="" ref="0x2b42215cbca0"/>
        <function-ref name="clr" scoped="" ref="0x2b42215cbe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b42215c7430" loc="48:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b42215c7430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215c7780"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215c7908"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215c7a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215c7c18"/>
        <function-ref name="get" scoped="" ref="0x2b42215c7da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215c6020"/>
        <function-ref name="set" scoped="" ref="0x2b42215c61a8"/>
        <function-ref name="clr" scoped="" ref="0x2b42215c6330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b42215c48c8" loc="51:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b42215c48c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215c4c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215c4da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215d3020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215d31a8"/>
        <function-ref name="get" scoped="" ref="0x2b42215d3330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215d34b8"/>
        <function-ref name="set" scoped="" ref="0x2b42215d3640"/>
        <function-ref name="clr" scoped="" ref="0x2b42215d37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b422240adb8" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b422240adb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222409170"/>
        <function-ref name="isInput" scoped="" ref="0x2b42224092f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222409480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4222409608"/>
        <function-ref name="get" scoped="" ref="0x2b4222409790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222409918"/>
        <function-ref name="set" scoped="" ref="0x2b4222409aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b4222409c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222406020" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222406020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222406370"/>
        <function-ref name="isInput" scoped="" ref="0x2b42224064f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222406680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4222406808"/>
        <function-ref name="get" scoped="" ref="0x2b4222406990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222406b18"/>
        <function-ref name="set" scoped="" ref="0x2b4222406ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4222406e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222403020" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222403020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222403370"/>
        <function-ref name="isInput" scoped="" ref="0x2b42224034f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222403680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4222403808"/>
        <function-ref name="get" scoped="" ref="0x2b4222403990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222403b18"/>
        <function-ref name="set" scoped="" ref="0x2b4222403ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4222403e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222400020" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222400020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222400370"/>
        <function-ref name="isInput" scoped="" ref="0x2b42224004f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222400680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4222400808"/>
        <function-ref name="get" scoped="" ref="0x2b4222400990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222400b18"/>
        <function-ref name="set" scoped="" ref="0x2b4222400ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4222400e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b422244b020" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b422244b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422244b370"/>
        <function-ref name="isInput" scoped="" ref="0x2b422244b4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b422244b680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422244b808"/>
        <function-ref name="get" scoped="" ref="0x2b422244b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422244bb18"/>
        <function-ref name="set" scoped="" ref="0x2b422244bca0"/>
        <function-ref name="clr" scoped="" ref="0x2b422244be28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222448020" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222448020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222448370"/>
        <function-ref name="isInput" scoped="" ref="0x2b42224484f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222448680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4222448808"/>
        <function-ref name="get" scoped="" ref="0x2b4222448990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222448b18"/>
        <function-ref name="set" scoped="" ref="0x2b4222448ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4222448e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222445020" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222445020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222445370"/>
        <function-ref name="isInput" scoped="" ref="0x2b42224454f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222445680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4222445808"/>
        <function-ref name="get" scoped="" ref="0x2b4222445990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222445b18"/>
        <function-ref name="set" scoped="" ref="0x2b4222445ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4222445e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222442020" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222442020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222442370"/>
        <function-ref name="isInput" scoped="" ref="0x2b42224424f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222442680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4222442808"/>
        <function-ref name="get" scoped="" ref="0x2b4222442990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222442b18"/>
        <function-ref name="set" scoped="" ref="0x2b4222442ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4222442e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b42215dcbd8" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b42215dcbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215db020"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215db1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215db330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215db4b8"/>
        <function-ref name="get" scoped="" ref="0x2b42215db640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215db7c8"/>
        <function-ref name="set" scoped="" ref="0x2b42215db950"/>
        <function-ref name="clr" scoped="" ref="0x2b42215dbad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b42215d8020" loc="49:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b42215d8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215d8370"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215d84f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215d8680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215d8808"/>
        <function-ref name="get" scoped="" ref="0x2b42215d8990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215d8b18"/>
        <function-ref name="set" scoped="" ref="0x2b42215d8ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b42215d8e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b42215cd930" loc="44:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b42215cd930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215cdc80"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215cde08"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215cc020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215cc1a8"/>
        <function-ref name="get" scoped="" ref="0x2b42215cc330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215cc4b8"/>
        <function-ref name="set" scoped="" ref="0x2b42215cc640"/>
        <function-ref name="clr" scoped="" ref="0x2b42215cc7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b42215dbd60" loc="47:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b42215dbd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215da0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215da260"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215da3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215da570"/>
        <function-ref name="get" scoped="" ref="0x2b42215da6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215da880"/>
        <function-ref name="set" scoped="" ref="0x2b42215daa08"/>
        <function-ref name="clr" scoped="" ref="0x2b42215dab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b42215d7120" loc="50:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b42215d7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215d7470"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215d75f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215d7780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215d7908"/>
        <function-ref name="get" scoped="" ref="0x2b42215d7a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215d7c18"/>
        <function-ref name="set" scoped="" ref="0x2b42215d7da0"/>
        <function-ref name="clr" scoped="" ref="0x2b42215d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b42215cca50" loc="45:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b42215cca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215ccda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215dc020"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215dc1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215dc330"/>
        <function-ref name="get" scoped="" ref="0x2b42215dc4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215dc640"/>
        <function-ref name="set" scoped="" ref="0x2b42215dc7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b42215dc950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b42215dae18" loc="48:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b42215dae18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215d91a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215d9330"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215d94b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215d9640"/>
        <function-ref name="get" scoped="" ref="0x2b42215d97c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215d9950"/>
        <function-ref name="set" scoped="" ref="0x2b42215d9ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b42215d9c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b42215d62a8" loc="51:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b42215d62a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215d65f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215d6780"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215d6908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215d6a90"/>
        <function-ref name="get" scoped="" ref="0x2b42215d6c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215d6da0"/>
        <function-ref name="set" scoped="" ref="0x2b42215d5020"/>
        <function-ref name="clr" scoped="" ref="0x2b42215d51a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222486180" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222486180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42224864d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4222486658"/>
        <function-ref name="toggle" scoped="" ref="0x2b42224867e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4222486968"/>
        <function-ref name="get" scoped="" ref="0x2b4222486af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222486c78"/>
        <function-ref name="set" scoped="" ref="0x2b4222486e00"/>
        <function-ref name="clr" scoped="" ref="0x2b4222485020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222483100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222483100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222483450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42224835d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222483760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42224838e8"/>
        <function-ref name="get" scoped="" ref="0x2b4222483a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222483bf8"/>
        <function-ref name="set" scoped="" ref="0x2b4222483d80"/>
        <function-ref name="clr" scoped="" ref="0x2b4222482020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222480100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222480100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222480450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42224805d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222480760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42224808e8"/>
        <function-ref name="get" scoped="" ref="0x2b4222480a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222480bf8"/>
        <function-ref name="set" scoped="" ref="0x2b4222480d80"/>
        <function-ref name="clr" scoped="" ref="0x2b422247f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b422247d100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b422247d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422247d450"/>
        <function-ref name="isInput" scoped="" ref="0x2b422247d5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b422247d760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422247d8e8"/>
        <function-ref name="get" scoped="" ref="0x2b422247da70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422247dbf8"/>
        <function-ref name="set" scoped="" ref="0x2b422247dd80"/>
        <function-ref name="clr" scoped="" ref="0x2b422247b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222479100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222479100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222479450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42224795d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222479760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42224798e8"/>
        <function-ref name="get" scoped="" ref="0x2b4222479a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222479bf8"/>
        <function-ref name="set" scoped="" ref="0x2b4222479d80"/>
        <function-ref name="clr" scoped="" ref="0x2b4222478020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222476100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222476100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222476450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42224765d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222476760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42224768e8"/>
        <function-ref name="get" scoped="" ref="0x2b4222476a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222476bf8"/>
        <function-ref name="set" scoped="" ref="0x2b4222476d80"/>
        <function-ref name="clr" scoped="" ref="0x2b4222475020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b42224bf100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b42224bf100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42224bf450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42224bf5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42224bf760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42224bf8e8"/>
        <function-ref name="get" scoped="" ref="0x2b42224bfa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42224bfbf8"/>
        <function-ref name="set" scoped="" ref="0x2b42224bfd80"/>
        <function-ref name="clr" scoped="" ref="0x2b42224be020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b42224bc100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b42224bc100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42224bc450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42224bc5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42224bc760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42224bc8e8"/>
        <function-ref name="get" scoped="" ref="0x2b42224bca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42224bcbf8"/>
        <function-ref name="set" scoped="" ref="0x2b42224bcd80"/>
        <function-ref name="clr" scoped="" ref="0x2b42224bb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b42215df740" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b42215df740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215dfa90"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215dfc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215dfda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215de020"/>
        <function-ref name="get" scoped="" ref="0x2b42215de1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215de330"/>
        <function-ref name="set" scoped="" ref="0x2b42215de4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b42215de640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b42215eebd8" loc="49:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b42215eebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215ed020"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215ed1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215ed330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215ed4b8"/>
        <function-ref name="get" scoped="" ref="0x2b42215ed640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215ed7c8"/>
        <function-ref name="set" scoped="" ref="0x2b42215ed950"/>
        <function-ref name="clr" scoped="" ref="0x2b42215edad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b42215e1500" loc="44:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b42215e1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215e1850"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215e19d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215e1b60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215e1ce8"/>
        <function-ref name="get" scoped="" ref="0x2b42215e1e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215e0020"/>
        <function-ref name="set" scoped="" ref="0x2b42215e01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b42215e0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b42215de8c8" loc="47:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b42215de8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215dec18"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215deda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215dd020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215dd1a8"/>
        <function-ref name="get" scoped="" ref="0x2b42215dd330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215dd4b8"/>
        <function-ref name="set" scoped="" ref="0x2b42215dd640"/>
        <function-ref name="clr" scoped="" ref="0x2b42215dd7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b42215edd60" loc="50:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b42215edd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215ec0d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215ec260"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215ec3e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215ec570"/>
        <function-ref name="get" scoped="" ref="0x2b42215ec6f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215ec880"/>
        <function-ref name="set" scoped="" ref="0x2b42215eca08"/>
        <function-ref name="clr" scoped="" ref="0x2b42215ecb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b42215e05b8" loc="45:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b42215e05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215e0908"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215e0a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215e0c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215e0da0"/>
        <function-ref name="get" scoped="" ref="0x2b42215df020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215df1a8"/>
        <function-ref name="set" scoped="" ref="0x2b42215df330"/>
        <function-ref name="clr" scoped="" ref="0x2b42215df4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b42215dda50" loc="48:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b42215dda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215ddda0"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215ee020"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215ee1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215ee330"/>
        <function-ref name="get" scoped="" ref="0x2b42215ee4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215ee640"/>
        <function-ref name="set" scoped="" ref="0x2b42215ee7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b42215ee950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b42215ece18" loc="51:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b42215ece18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215ea1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215ea330"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215ea4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215ea640"/>
        <function-ref name="get" scoped="" ref="0x2b42215ea7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215ea950"/>
        <function-ref name="set" scoped="" ref="0x2b42215eaad8"/>
        <function-ref name="clr" scoped="" ref="0x2b42215eac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222504180" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222504180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42225044d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4222504658"/>
        <function-ref name="toggle" scoped="" ref="0x2b42225047e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4222504968"/>
        <function-ref name="get" scoped="" ref="0x2b4222504af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222504c78"/>
        <function-ref name="set" scoped="" ref="0x2b4222504e00"/>
        <function-ref name="clr" scoped="" ref="0x2b4222503020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222501100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222501100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222501450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42225015d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222501760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42225018e8"/>
        <function-ref name="get" scoped="" ref="0x2b4222501a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222501bf8"/>
        <function-ref name="set" scoped="" ref="0x2b4222501d80"/>
        <function-ref name="clr" scoped="" ref="0x2b4222500020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b42224fe100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b42224fe100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42224fe450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42224fe5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42224fe760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42224fe8e8"/>
        <function-ref name="get" scoped="" ref="0x2b42224fea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42224febf8"/>
        <function-ref name="set" scoped="" ref="0x2b42224fed80"/>
        <function-ref name="clr" scoped="" ref="0x2b42224fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b42224fb100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b42224fb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42224fb450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42224fb5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42224fb760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42224fb8e8"/>
        <function-ref name="get" scoped="" ref="0x2b42224fba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42224fbbf8"/>
        <function-ref name="set" scoped="" ref="0x2b42224fbd80"/>
        <function-ref name="clr" scoped="" ref="0x2b42224fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b42224f8100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b42224f8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42224f8450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42224f85d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42224f8760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42224f88e8"/>
        <function-ref name="get" scoped="" ref="0x2b42224f8a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42224f8bf8"/>
        <function-ref name="set" scoped="" ref="0x2b42224f8d80"/>
        <function-ref name="clr" scoped="" ref="0x2b42224f6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b42224f4100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b42224f4100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42224f4450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42224f45d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42224f4760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42224f48e8"/>
        <function-ref name="get" scoped="" ref="0x2b42224f4a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42224f4bf8"/>
        <function-ref name="set" scoped="" ref="0x2b42224f4d80"/>
        <function-ref name="clr" scoped="" ref="0x2b42224f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b42224f1100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b42224f1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42224f1450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42224f15d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42224f1760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42224f18e8"/>
        <function-ref name="get" scoped="" ref="0x2b42224f1a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42224f1bf8"/>
        <function-ref name="set" scoped="" ref="0x2b42224f1d80"/>
        <function-ref name="clr" scoped="" ref="0x2b42224f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b42224ee100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b42224ee100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42224ee450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42224ee5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42224ee760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42224ee8e8"/>
        <function-ref name="get" scoped="" ref="0x2b42224eea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42224eebf8"/>
        <function-ref name="set" scoped="" ref="0x2b42224eed80"/>
        <function-ref name="clr" scoped="" ref="0x2b42224ed020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b42215f4120" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b42215f4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215f4470"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215f45f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215f4780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215f4908"/>
        <function-ref name="get" scoped="" ref="0x2b42215f4a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215f4c18"/>
        <function-ref name="set" scoped="" ref="0x2b42215f4da0"/>
        <function-ref name="clr" scoped="" ref="0x2b42215f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b42215f05b8" loc="49:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b42215f05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215f0908"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215f0a90"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215f0c18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215f0da0"/>
        <function-ref name="get" scoped="" ref="0x2b42215ef020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215ef1a8"/>
        <function-ref name="set" scoped="" ref="0x2b42215ef330"/>
        <function-ref name="clr" scoped="" ref="0x2b42215ef4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b42215f7e40" loc="44:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b42215f7e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215f61c0"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215f6348"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215f64d0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215f6658"/>
        <function-ref name="get" scoped="" ref="0x2b42215f67e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215f6968"/>
        <function-ref name="set" scoped="" ref="0x2b42215f6af0"/>
        <function-ref name="clr" scoped="" ref="0x2b42215f6c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b42215f32a8" loc="47:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b42215f32a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215f35f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215f3780"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215f3908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215f3a90"/>
        <function-ref name="get" scoped="" ref="0x2b42215f3c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215f3da0"/>
        <function-ref name="set" scoped="" ref="0x2b42215f2020"/>
        <function-ref name="clr" scoped="" ref="0x2b42215f21a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b42215ef740" loc="50:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b42215ef740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215efa90"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215efc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215efda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221600020"/>
        <function-ref name="get" scoped="" ref="0x2b42216001a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221600330"/>
        <function-ref name="set" scoped="" ref="0x2b42216004b8"/>
        <function-ref name="clr" scoped="" ref="0x2b4221600640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b42215f5020" loc="45:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b42215f5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215f5370"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215f54f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215f5680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215f5808"/>
        <function-ref name="get" scoped="" ref="0x2b42215f5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215f5b18"/>
        <function-ref name="set" scoped="" ref="0x2b42215f5ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b42215f5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b42215f2430" loc="48:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b42215f2430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215f2780"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215f2908"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215f2a90"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215f2c18"/>
        <function-ref name="get" scoped="" ref="0x2b42215f2da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215f0020"/>
        <function-ref name="set" scoped="" ref="0x2b42215f01a8"/>
        <function-ref name="clr" scoped="" ref="0x2b42215f0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b42216008c8" loc="51:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b42216008c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221600c18"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221600da0"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215ff020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215ff1a8"/>
        <function-ref name="get" scoped="" ref="0x2b42215ff330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215ff4b8"/>
        <function-ref name="set" scoped="" ref="0x2b42215ff640"/>
        <function-ref name="clr" scoped="" ref="0x2b42215ff7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222539180" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222539180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42225394d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4222539658"/>
        <function-ref name="toggle" scoped="" ref="0x2b42225397e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4222539968"/>
        <function-ref name="get" scoped="" ref="0x2b4222539af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222539c78"/>
        <function-ref name="set" scoped="" ref="0x2b4222539e00"/>
        <function-ref name="clr" scoped="" ref="0x2b4222538020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222536100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222536100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222536450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42225365d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222536760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42225368e8"/>
        <function-ref name="get" scoped="" ref="0x2b4222536a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222536bf8"/>
        <function-ref name="set" scoped="" ref="0x2b4222536d80"/>
        <function-ref name="clr" scoped="" ref="0x2b4222535020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222582100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222582100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222582450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42225825d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222582760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42225828e8"/>
        <function-ref name="get" scoped="" ref="0x2b4222582a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222582bf8"/>
        <function-ref name="set" scoped="" ref="0x2b4222582d80"/>
        <function-ref name="clr" scoped="" ref="0x2b4222581020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b422257f100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b422257f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422257f450"/>
        <function-ref name="isInput" scoped="" ref="0x2b422257f5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b422257f760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422257f8e8"/>
        <function-ref name="get" scoped="" ref="0x2b422257fa70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422257fbf8"/>
        <function-ref name="set" scoped="" ref="0x2b422257fd80"/>
        <function-ref name="clr" scoped="" ref="0x2b422257e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b422257c100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b422257c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422257c450"/>
        <function-ref name="isInput" scoped="" ref="0x2b422257c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b422257c760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422257c8e8"/>
        <function-ref name="get" scoped="" ref="0x2b422257ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422257cbf8"/>
        <function-ref name="set" scoped="" ref="0x2b422257cd80"/>
        <function-ref name="clr" scoped="" ref="0x2b422257a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222578100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222578100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222578450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42225785d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222578760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42225788e8"/>
        <function-ref name="get" scoped="" ref="0x2b4222578a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222578bf8"/>
        <function-ref name="set" scoped="" ref="0x2b4222578d80"/>
        <function-ref name="clr" scoped="" ref="0x2b4222577020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222575100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222575100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222575450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42225755d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222575760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42225758e8"/>
        <function-ref name="get" scoped="" ref="0x2b4222575a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222575bf8"/>
        <function-ref name="set" scoped="" ref="0x2b4222575d80"/>
        <function-ref name="clr" scoped="" ref="0x2b4222574020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222572100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222572100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222572450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42225725d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222572760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42225728e8"/>
        <function-ref name="get" scoped="" ref="0x2b4222572a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222572bf8"/>
        <function-ref name="set" scoped="" ref="0x2b4222572d80"/>
        <function-ref name="clr" scoped="" ref="0x2b4222571020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b4221609bd8" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b4221609bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221608020"/>
        <function-ref name="isInput" scoped="" ref="0x2b42216081a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221608330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42216084b8"/>
        <function-ref name="get" scoped="" ref="0x2b4221608640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42216087c8"/>
        <function-ref name="set" scoped="" ref="0x2b4221608950"/>
        <function-ref name="clr" scoped="" ref="0x2b4221608ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b4221605020" loc="49:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b4221605020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221605370"/>
        <function-ref name="isInput" scoped="" ref="0x2b42216054f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221605680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221605808"/>
        <function-ref name="get" scoped="" ref="0x2b4221605990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221605b18"/>
        <function-ref name="set" scoped="" ref="0x2b4221605ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4221605e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b42215fa930" loc="44:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b42215fa930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215fac80"/>
        <function-ref name="isInput" scoped="" ref="0x2b42215fae08"/>
        <function-ref name="toggle" scoped="" ref="0x2b42215f9020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42215f91a8"/>
        <function-ref name="get" scoped="" ref="0x2b42215f9330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42215f94b8"/>
        <function-ref name="set" scoped="" ref="0x2b42215f9640"/>
        <function-ref name="clr" scoped="" ref="0x2b42215f97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b4221608d60" loc="47:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b4221608d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42216070d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221607260"/>
        <function-ref name="toggle" scoped="" ref="0x2b42216073e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221607570"/>
        <function-ref name="get" scoped="" ref="0x2b42216076f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221607880"/>
        <function-ref name="set" scoped="" ref="0x2b4221607a08"/>
        <function-ref name="clr" scoped="" ref="0x2b4221607b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b4221604120" loc="50:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b4221604120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221604470"/>
        <function-ref name="isInput" scoped="" ref="0x2b42216045f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221604780"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221604908"/>
        <function-ref name="get" scoped="" ref="0x2b4221604a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221604c18"/>
        <function-ref name="set" scoped="" ref="0x2b4221604da0"/>
        <function-ref name="clr" scoped="" ref="0x2b4221603020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b42215f9a50" loc="45:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b42215f9a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42215f9da0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221609020"/>
        <function-ref name="toggle" scoped="" ref="0x2b42216091a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221609330"/>
        <function-ref name="get" scoped="" ref="0x2b42216094b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221609640"/>
        <function-ref name="set" scoped="" ref="0x2b42216097c8"/>
        <function-ref name="clr" scoped="" ref="0x2b4221609950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b4221607e18" loc="48:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b4221607e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42216061a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221606330"/>
        <function-ref name="toggle" scoped="" ref="0x2b42216064b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221606640"/>
        <function-ref name="get" scoped="" ref="0x2b42216067c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221606950"/>
        <function-ref name="set" scoped="" ref="0x2b4221606ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b4221606c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b42216032a8" loc="51:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b42216032a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42216035f8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221603780"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221603908"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221603a90"/>
        <function-ref name="get" scoped="" ref="0x2b4221603c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221603da0"/>
        <function-ref name="set" scoped="" ref="0x2b4221602020"/>
        <function-ref name="clr" scoped="" ref="0x2b42216021a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b42225c1180" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b42225c1180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42225c14d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b42225c1658"/>
        <function-ref name="toggle" scoped="" ref="0x2b42225c17e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42225c1968"/>
        <function-ref name="get" scoped="" ref="0x2b42225c1af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42225c1c78"/>
        <function-ref name="set" scoped="" ref="0x2b42225c1e00"/>
        <function-ref name="clr" scoped="" ref="0x2b42225c0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b42225be100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b42225be100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42225be450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42225be5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42225be760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42225be8e8"/>
        <function-ref name="get" scoped="" ref="0x2b42225bea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42225bebf8"/>
        <function-ref name="set" scoped="" ref="0x2b42225bed80"/>
        <function-ref name="clr" scoped="" ref="0x2b42225bd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b42225bb100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b42225bb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42225bb450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42225bb5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42225bb760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42225bb8e8"/>
        <function-ref name="get" scoped="" ref="0x2b42225bba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42225bbbf8"/>
        <function-ref name="set" scoped="" ref="0x2b42225bbd80"/>
        <function-ref name="clr" scoped="" ref="0x2b42225ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b42225b8100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b42225b8100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42225b8450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42225b85d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42225b8760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42225b88e8"/>
        <function-ref name="get" scoped="" ref="0x2b42225b8a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42225b8bf8"/>
        <function-ref name="set" scoped="" ref="0x2b42225b8d80"/>
        <function-ref name="clr" scoped="" ref="0x2b42225b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b42225b5100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b42225b5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42225b5450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42225b55d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42225b5760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42225b58e8"/>
        <function-ref name="get" scoped="" ref="0x2b42225b5a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42225b5bf8"/>
        <function-ref name="set" scoped="" ref="0x2b42225b5d80"/>
        <function-ref name="clr" scoped="" ref="0x2b42225b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b42225b2100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b42225b2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42225b2450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42225b25d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42225b2760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42225b28e8"/>
        <function-ref name="get" scoped="" ref="0x2b42225b2a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42225b2bf8"/>
        <function-ref name="set" scoped="" ref="0x2b42225b2d80"/>
        <function-ref name="clr" scoped="" ref="0x2b42225b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b42225ae100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b42225ae100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42225ae450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42225ae5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42225ae760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42225ae8e8"/>
        <function-ref name="get" scoped="" ref="0x2b42225aea70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42225aebf8"/>
        <function-ref name="set" scoped="" ref="0x2b42225aed80"/>
        <function-ref name="clr" scoped="" ref="0x2b42225ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b42225ab100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b42225ab100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42225ab450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42225ab5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42225ab760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42225ab8e8"/>
        <function-ref name="get" scoped="" ref="0x2b42225aba70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42225abbf8"/>
        <function-ref name="set" scoped="" ref="0x2b42225abd80"/>
        <function-ref name="clr" scoped="" ref="0x2b42225fb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x2b422160c740" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x2b422160c740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422160ca90"/>
        <function-ref name="isInput" scoped="" ref="0x2b422160cc18"/>
        <function-ref name="toggle" scoped="" ref="0x2b422160cda0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422160b020"/>
        <function-ref name="get" scoped="" ref="0x2b422160b1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422160b330"/>
        <function-ref name="set" scoped="" ref="0x2b422160b4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b422160b640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x2b422161bbd8" loc="49:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x2b422161bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422161a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b422161a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b422161a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422161a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b422161a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422161a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b422161a950"/>
        <function-ref name="clr" scoped="" ref="0x2b422161aad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x2b422160e500" loc="44:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x2b422160e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422160e850"/>
        <function-ref name="isInput" scoped="" ref="0x2b422160e9d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b422160eb60"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422160ece8"/>
        <function-ref name="get" scoped="" ref="0x2b422160ee70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422160d020"/>
        <function-ref name="set" scoped="" ref="0x2b422160d1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b422160d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x2b422160b8c8" loc="47:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x2b422160b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422160bc18"/>
        <function-ref name="isInput" scoped="" ref="0x2b422160bda0"/>
        <function-ref name="toggle" scoped="" ref="0x2b422160a020"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422160a1a8"/>
        <function-ref name="get" scoped="" ref="0x2b422160a330"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422160a4b8"/>
        <function-ref name="set" scoped="" ref="0x2b422160a640"/>
        <function-ref name="clr" scoped="" ref="0x2b422160a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x2b422161ad60" loc="50:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x2b422161ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42216190d8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221619260"/>
        <function-ref name="toggle" scoped="" ref="0x2b42216193e8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221619570"/>
        <function-ref name="get" scoped="" ref="0x2b42216196f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221619880"/>
        <function-ref name="set" scoped="" ref="0x2b4221619a08"/>
        <function-ref name="clr" scoped="" ref="0x2b4221619b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x2b422160d5b8" loc="45:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x2b422160d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422160d908"/>
        <function-ref name="isInput" scoped="" ref="0x2b422160da90"/>
        <function-ref name="toggle" scoped="" ref="0x2b422160dc18"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422160dda0"/>
        <function-ref name="get" scoped="" ref="0x2b422160c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422160c1a8"/>
        <function-ref name="set" scoped="" ref="0x2b422160c330"/>
        <function-ref name="clr" scoped="" ref="0x2b422160c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x2b422160aa50" loc="48:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x2b422160aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422160ada0"/>
        <function-ref name="isInput" scoped="" ref="0x2b422161b020"/>
        <function-ref name="toggle" scoped="" ref="0x2b422161b1a8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422161b330"/>
        <function-ref name="get" scoped="" ref="0x2b422161b4b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422161b640"/>
        <function-ref name="set" scoped="" ref="0x2b422161b7c8"/>
        <function-ref name="clr" scoped="" ref="0x2b422161b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x2b4221619e18" loc="51:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x2b4221619e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42216181a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221618330"/>
        <function-ref name="toggle" scoped="" ref="0x2b42216184b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221618640"/>
        <function-ref name="get" scoped="" ref="0x2b42216187c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221618950"/>
        <function-ref name="set" scoped="" ref="0x2b4221618ad8"/>
        <function-ref name="clr" scoped="" ref="0x2b4221618c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b42225fd180" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b42225fd180"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42225fd4d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b42225fd658"/>
        <function-ref name="toggle" scoped="" ref="0x2b42225fd7e0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42225fd968"/>
        <function-ref name="get" scoped="" ref="0x2b42225fdaf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42225fdc78"/>
        <function-ref name="set" scoped="" ref="0x2b42225fde00"/>
        <function-ref name="clr" scoped="" ref="0x2b42225fc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b422264c100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b422264c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422264c450"/>
        <function-ref name="isInput" scoped="" ref="0x2b422264c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b422264c760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422264c8e8"/>
        <function-ref name="get" scoped="" ref="0x2b422264ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422264cbf8"/>
        <function-ref name="set" scoped="" ref="0x2b422264cd80"/>
        <function-ref name="clr" scoped="" ref="0x2b422264b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222649100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222649100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222649450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42226495d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222649760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42226498e8"/>
        <function-ref name="get" scoped="" ref="0x2b4222649a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222649bf8"/>
        <function-ref name="set" scoped="" ref="0x2b4222649d80"/>
        <function-ref name="clr" scoped="" ref="0x2b4222648020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222646100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222646100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222646450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42226465d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222646760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42226468e8"/>
        <function-ref name="get" scoped="" ref="0x2b4222646a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222646bf8"/>
        <function-ref name="set" scoped="" ref="0x2b4222646d80"/>
        <function-ref name="clr" scoped="" ref="0x2b4222645020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222643100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222643100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222643450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42226435d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222643760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42226438e8"/>
        <function-ref name="get" scoped="" ref="0x2b4222643a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222643bf8"/>
        <function-ref name="set" scoped="" ref="0x2b4222643d80"/>
        <function-ref name="clr" scoped="" ref="0x2b4222642020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222640100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222640100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222640450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42226405d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222640760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42226408e8"/>
        <function-ref name="get" scoped="" ref="0x2b4222640a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222640bf8"/>
        <function-ref name="set" scoped="" ref="0x2b4222640d80"/>
        <function-ref name="clr" scoped="" ref="0x2b422263e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b422263c100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b422263c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422263c450"/>
        <function-ref name="isInput" scoped="" ref="0x2b422263c5d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b422263c760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422263c8e8"/>
        <function-ref name="get" scoped="" ref="0x2b422263ca70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422263cbf8"/>
        <function-ref name="set" scoped="" ref="0x2b422263cd80"/>
        <function-ref name="clr" scoped="" ref="0x2b422263b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4222639100" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4222639100"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222639450"/>
        <function-ref name="isInput" scoped="" ref="0x2b42226395d8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222639760"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42226398e8"/>
        <function-ref name="get" scoped="" ref="0x2b4222639a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222639bf8"/>
        <function-ref name="set" scoped="" ref="0x2b4222639d80"/>
        <function-ref name="clr" scoped="" ref="0x2b4222638020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b42216233e0" loc="47:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b42216233e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221623730"/>
        <function-ref name="isInput" scoped="" ref="0x2b42216238b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221623a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221623bc8"/>
        <function-ref name="get" scoped="" ref="0x2b4221623d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221630020"/>
        <function-ref name="set" scoped="" ref="0x2b42216301a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4221630330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b422163fc38" loc="47:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b422163fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422163e020"/>
        <function-ref name="isInput" scoped="" ref="0x2b422163e1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b422163e330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422163e4b8"/>
        <function-ref name="get" scoped="" ref="0x2b422163e640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422163e7c8"/>
        <function-ref name="set" scoped="" ref="0x2b422163e950"/>
        <function-ref name="clr" scoped="" ref="0x2b422163ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b42216393e0" loc="47:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b42216393e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221639730"/>
        <function-ref name="isInput" scoped="" ref="0x2b42216398b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221639a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221639bc8"/>
        <function-ref name="get" scoped="" ref="0x2b4221639d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221638020"/>
        <function-ref name="set" scoped="" ref="0x2b42216381a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4221638330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4221647c38" loc="47:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4221647c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221645020"/>
        <function-ref name="isInput" scoped="" ref="0x2b42216451a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221645330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42216454b8"/>
        <function-ref name="get" scoped="" ref="0x2b4221645640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42216457c8"/>
        <function-ref name="set" scoped="" ref="0x2b4221645950"/>
        <function-ref name="clr" scoped="" ref="0x2b4221645ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b42216413e0" loc="47:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b42216413e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221641730"/>
        <function-ref name="isInput" scoped="" ref="0x2b42216418b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221641a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221641bc8"/>
        <function-ref name="get" scoped="" ref="0x2b4221641d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221640020"/>
        <function-ref name="set" scoped="" ref="0x2b42216401a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4221640330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b422164ec38" loc="47:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b422164ec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422164d020"/>
        <function-ref name="isInput" scoped="" ref="0x2b422164d1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b422164d330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422164d4b8"/>
        <function-ref name="get" scoped="" ref="0x2b422164d640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422164d7c8"/>
        <function-ref name="set" scoped="" ref="0x2b422164d950"/>
        <function-ref name="clr" scoped="" ref="0x2b422164dad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4221649480" loc="47:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4221649480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42216497d0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221649958"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221649ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221649c68"/>
        <function-ref name="get" scoped="" ref="0x2b4221649df0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422165a020"/>
        <function-ref name="set" scoped="" ref="0x2b422165a1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b422165a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4221657c38" loc="47:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4221657c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221656020"/>
        <function-ref name="isInput" scoped="" ref="0x2b42216561a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221656330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42216564b8"/>
        <function-ref name="get" scoped="" ref="0x2b4221656640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42216567c8"/>
        <function-ref name="set" scoped="" ref="0x2b4221656950"/>
        <function-ref name="clr" scoped="" ref="0x2b4221656ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4221665520" loc="47:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4221665520"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221665870"/>
        <function-ref name="isInput" scoped="" ref="0x2b42216659f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221665b80"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221665d08"/>
        <function-ref name="get" scoped="" ref="0x2b4221664020"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42216641a8"/>
        <function-ref name="set" scoped="" ref="0x2b4221664330"/>
        <function-ref name="clr" scoped="" ref="0x2b42216644b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4221661cd8" loc="47:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4221661cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42216600a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221660228"/>
        <function-ref name="toggle" scoped="" ref="0x2b42216603b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221660538"/>
        <function-ref name="get" scoped="" ref="0x2b42216606c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221660848"/>
        <function-ref name="set" scoped="" ref="0x2b42216609d0"/>
        <function-ref name="clr" scoped="" ref="0x2b4221660b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b422166f3e0" loc="47:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b422166f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422166f730"/>
        <function-ref name="isInput" scoped="" ref="0x2b422166f8b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b422166fa40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422166fbc8"/>
        <function-ref name="get" scoped="" ref="0x2b422166fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422166e020"/>
        <function-ref name="set" scoped="" ref="0x2b422166e1a8"/>
        <function-ref name="clr" scoped="" ref="0x2b422166e330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b422166ac38" loc="47:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b422166ac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221669020"/>
        <function-ref name="isInput" scoped="" ref="0x2b42216691a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221669330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42216694b8"/>
        <function-ref name="get" scoped="" ref="0x2b4221669640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42216697c8"/>
        <function-ref name="set" scoped="" ref="0x2b4221669950"/>
        <function-ref name="clr" scoped="" ref="0x2b4221669ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b42216793e0" loc="47:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b42216793e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221679730"/>
        <function-ref name="isInput" scoped="" ref="0x2b42216798b8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221679a40"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221679bc8"/>
        <function-ref name="get" scoped="" ref="0x2b4221679d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221678020"/>
        <function-ref name="set" scoped="" ref="0x2b42216781a8"/>
        <function-ref name="clr" scoped="" ref="0x2b4221678330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x2b4221674c38" loc="47:/home/tinyos/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x2b4221674c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221673020"/>
        <function-ref name="isInput" scoped="" ref="0x2b42216731a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221673330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42216734b8"/>
        <function-ref name="get" scoped="" ref="0x2b4221673640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42216737c8"/>
        <function-ref name="set" scoped="" ref="0x2b4221673950"/>
        <function-ref name="clr" scoped="" ref="0x2b4221673ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b42216b04b0" loc="61:/home/tinyos/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b42216b04b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b42214096f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b42214096f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b42216b0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x2b42216b0ae0" loc="62:/home/tinyos/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x2b42216b0ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x2b42216b0e30"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x2b42216af020"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x2b42216af1a8"/>
        <function-ref name="actualMicro" scoped="" ref="0x2b42216af330"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x2b42216af4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x2b42216cc418" loc="60:/home/tinyos/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b42216cc418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b42216cc768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x2b422151dc40" loc="57:/home/tinyos/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b422151dc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b42216cd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x2b42216cdce0" loc="59:/home/tinyos/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b42216cdce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b42216cc0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x2b42216cd308" loc="58:/home/tinyos/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b42216cd308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b42216cd658"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b42216cd7e0"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b42216cd968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b42214041c8" loc="48:/home/tinyos/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b42214041c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4221404518"/>
        <function-ref name="runTask" scoped="" ref="0x2b42214046a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b4221421600" loc="47:/home/tinyos/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b4221421600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4221421950"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b4221421ad8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b4221421c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x2b42214d5c58" loc="56:/home/tinyos/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x2b42214d5c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b42214d4020"/>
        <function-ref name="runTask" scoped="" ref="0x2b42214d41a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x2b42214df168" loc="57:/home/tinyos/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b42214df168"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b42214df4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x2b42214d6d88" loc="55:/home/tinyos/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x2b42214d6d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b42214d5170"/>
        <function-ref name="taskLoop" scoped="" ref="0x2b42214d52f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x2b42214d5480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x2b42214f9988" loc="88:/home/tinyos/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b42214f9988"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b42214f9cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x2b422142ae28" loc="84:/home/tinyos/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x2b422142ae28"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x2b42214f01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x2b42214fb3c8" loc="85:/home/tinyos/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b42214fb3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b42214fb718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x2b42217706d0" loc="64:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMControl" scoped="" ref="0x2b42217706d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4221770a20"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4221770ba8"/>
        <function-ref name="start" scoped="" ref="0x2b4221770d30"/>
        <function-ref name="stop" scoped="" ref="0x2b4221775020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x2b42216d2730" loc="60:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x2b42216d2730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x2b42216d2a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b422176a278" loc="62:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b422176a278"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b422176a5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b422176a750"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b422176a8d8"/>
        <function-ref name="cancel" scoped="" ref="0x2b422176aa60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b422176abe8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b422177f0d0" loc="65:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b422177f0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b422177f420"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b422177f5a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b422177f730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b422177f8b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b422177fa40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x2b422175b6a8" loc="61:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b422175b6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b422175b9f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MilliTimer" ref="0x2b42217615a0" loc="63:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MilliTimer" scoped="" ref="0x2b42217615a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b42217778f0"/>
        <function-ref name="fired" scoped="" ref="0x2b4221760020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4221760d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b42217608c0"/>
        <function-ref name="getdt" scoped="" ref="0x2b42217761c0"/>
        <function-ref name="gett0" scoped="" ref="0x2b4221777d40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4221760470"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b422175c118"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4221777320"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b422175c5b8"/>
        <function-ref name="stop" scoped="" ref="0x2b422175ca58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x2b42216d3080" loc="59:RadioCountToLedsC.nc">
      <component-ref qname="RadioCountToLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b42216d3080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b42216d33d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b42216d3558"/>
        <function-ref name="led1On" scoped="" ref="0x2b42216d36e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b42216d3868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b42216d39f0"/>
        <function-ref name="get" scoped="" ref="0x2b42216d3b78"/>
        <function-ref name="led1Off" scoped="" ref="0x2b42216d3d00"/>
        <function-ref name="led2Off" scoped="" ref="0x2b42216d24b8"/>
        <function-ref name="set" scoped="" ref="0x2b42216d2020"/>
        <function-ref name="led0On" scoped="" ref="0x2b42216d21a8"/>
        <function-ref name="led2On" scoped="" ref="0x2b42216d2330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b42216d4d80" loc="46:/home/tinyos/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b42216d4d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b4221799170"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b42217992f8"/>
        <function-ref name="led1On" scoped="" ref="0x2b4221799480"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b4221799608"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b4221799790"/>
        <function-ref name="get" scoped="" ref="0x2b4221799918"/>
        <function-ref name="led1Off" scoped="" ref="0x2b4221799aa0"/>
        <function-ref name="led2Off" scoped="" ref="0x2b42217981a8"/>
        <function-ref name="set" scoped="" ref="0x2b4221799c28"/>
        <function-ref name="led0On" scoped="" ref="0x2b4221799db0"/>
        <function-ref name="led2On" scoped="" ref="0x2b4221798020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x2b4221794ce8" loc="50:/home/tinyos/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b4221794ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42217930a0"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221793228"/>
        <function-ref name="toggle" scoped="" ref="0x2b42217933b0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221793538"/>
        <function-ref name="get" scoped="" ref="0x2b42217936c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221793848"/>
        <function-ref name="set" scoped="" ref="0x2b42217939d0"/>
        <function-ref name="clr" scoped="" ref="0x2b4221793b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4221795080" loc="46:/home/tinyos/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4221795080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b42217953d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x2b4221793e70" loc="51:/home/tinyos/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b4221793e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42217921e8"/>
        <function-ref name="isInput" scoped="" ref="0x2b4221792370"/>
        <function-ref name="toggle" scoped="" ref="0x2b42217924f8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221792680"/>
        <function-ref name="get" scoped="" ref="0x2b4221792808"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221792990"/>
        <function-ref name="set" scoped="" ref="0x2b4221792b18"/>
        <function-ref name="clr" scoped="" ref="0x2b4221792ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x2b4221795648" loc="47:/home/tinyos/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x2b4221795648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x2b4221795998"/>
        <function-ref name="led0Toggle" scoped="" ref="0x2b4221795b20"/>
        <function-ref name="led1On" scoped="" ref="0x2b4221795ca8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x2b4221795e30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x2b4221794020"/>
        <function-ref name="get" scoped="" ref="0x2b42217941a8"/>
        <function-ref name="led1Off" scoped="" ref="0x2b4221794330"/>
        <function-ref name="led2Off" scoped="" ref="0x2b4221794950"/>
        <function-ref name="set" scoped="" ref="0x2b42217944b8"/>
        <function-ref name="led0On" scoped="" ref="0x2b4221794640"/>
        <function-ref name="led2On" scoped="" ref="0x2b42217947c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x2b4221791020" loc="52:/home/tinyos/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b4221791020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4221791370"/>
        <function-ref name="isInput" scoped="" ref="0x2b42217914f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4221791680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4221791808"/>
        <function-ref name="get" scoped="" ref="0x2b4221791990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4221791b18"/>
        <function-ref name="set" scoped="" ref="0x2b4221791ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b4221791e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x2b4221796e18" loc="44:/home/tinyos/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x2b4221796e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42217bd1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b42217bd330"/>
        <function-ref name="toggle" scoped="" ref="0x2b42217bd4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42217bd640"/>
        <function-ref name="get" scoped="" ref="0x2b42217bd7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42217bd950"/>
        <function-ref name="set" scoped="" ref="0x2b42217bdad8"/>
        <function-ref name="clr" scoped="" ref="0x2b42217bdc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x2b42217bc020" loc="45:/home/tinyos/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x2b42217bc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42217bc370"/>
        <function-ref name="isInput" scoped="" ref="0x2b42217bc4f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42217bc680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42217bc808"/>
        <function-ref name="get" scoped="" ref="0x2b42217bc990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42217bcb18"/>
        <function-ref name="set" scoped="" ref="0x2b42217bcca0"/>
        <function-ref name="clr" scoped="" ref="0x2b42217bce28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x2b42217ba2d8" loc="47:/home/tinyos/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b42217ba2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b42217ba628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x2b42217bb1b0" loc="46:/home/tinyos/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x2b42217bb1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42217bb500"/>
        <function-ref name="isInput" scoped="" ref="0x2b42217bb688"/>
        <function-ref name="toggle" scoped="" ref="0x2b42217bb810"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42217bb998"/>
        <function-ref name="get" scoped="" ref="0x2b42217bbb20"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42217bbca8"/>
        <function-ref name="set" scoped="" ref="0x2b42217bbe30"/>
        <function-ref name="clr" scoped="" ref="0x2b42217ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b42223bd080" loc="49:/home/tinyos/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b42223bd080"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b42223bd3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b42223bd558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b42223bd6e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b42223bd868"/>
        <function-ref name="sendDone" scoped="" ref="0x2b42223bd9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b42223bdc38" loc="50:/home/tinyos/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b42223bdc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b42223bc020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b42223bc1a8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b42223bc330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b42223bc4b8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b42223bc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b42223bc888" loc="51:/home/tinyos/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b42223bc888"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b42223bcbd8"/>
        <function-ref name="source" scoped="" ref="0x2b42223bcd60"/>
        <function-ref name="address" scoped="" ref="0x2b42223bb020"/>
        <function-ref name="destination" scoped="" ref="0x2b42223bb1a8"/>
        <function-ref name="setSource" scoped="" ref="0x2b42223bb330"/>
        <function-ref name="setDestination" scoped="" ref="0x2b42223bb4b8"/>
        <function-ref name="type" scoped="" ref="0x2b42223bb640"/>
        <function-ref name="setType" scoped="" ref="0x2b42223bb7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b42223bb950"/>
        <function-ref name="setGroup" scoped="" ref="0x2b42223bbad8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b42223bbc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b42223ba020" loc="52:/home/tinyos/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b42223ba020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b42223ba370"/>
        <function-ref name="noAck" scoped="" ref="0x2b42223ba4f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b42223ba680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b4222715398" loc="49:/home/tinyos/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b4222715398"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b42227156e8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4222715870"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b42227159f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b4222715b80"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4222715d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b4222714020" loc="50:/home/tinyos/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b4222714020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4222714370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b42227144f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4222714680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4222714808"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4222714990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b4222714bd8" loc="51:/home/tinyos/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b4222714bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4222713020"/>
        <function-ref name="source" scoped="" ref="0x2b42227131a8"/>
        <function-ref name="address" scoped="" ref="0x2b4222713330"/>
        <function-ref name="destination" scoped="" ref="0x2b42227134b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b4222713640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b42227137c8"/>
        <function-ref name="type" scoped="" ref="0x2b4222713950"/>
        <function-ref name="setType" scoped="" ref="0x2b4222713ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4222713c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4222713de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4222712020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x2b42227122a8" loc="52:/home/tinyos/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x2b42227122a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b42227125f8"/>
        <function-ref name="noAck" scoped="" ref="0x2b4222712780"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b4222712908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b42227099a8" loc="44:/home/tinyos/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b42227099a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4222709cf8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4222709e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4222708030"/>
        <function-ref name="cancel" scoped="" ref="0x2b42227081b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4222708340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x2b42227085e8" loc="46:/home/tinyos/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b42227085e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4222708938"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4222708ac0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4222708c48"/>
        <function-ref name="cancel" scoped="" ref="0x2b4222708dd0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4222707020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b4222707268" loc="47:/home/tinyos/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="RadioCountToLedsAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b4222707268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b42227075b8"/>
        <function-ref name="source" scoped="" ref="0x2b4222707740"/>
        <function-ref name="address" scoped="" ref="0x2b42227078c8"/>
        <function-ref name="destination" scoped="" ref="0x2b4222707a50"/>
        <function-ref name="setSource" scoped="" ref="0x2b4222707bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4222707d60"/>
        <function-ref name="type" scoped="" ref="0x2b4222706020"/>
        <function-ref name="setType" scoped="" ref="0x2b42227061a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4222706330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b42227064b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4222706640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b4221808020" loc="43:/home/tinyos/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b4221808020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221808370"/>
        <function-ref name="getPayload" scoped="" ref="0x2b42218084f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221808680"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221808808"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221808990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x2b4221842060" loc="48:/home/tinyos/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b4221842060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b42218423d0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4221842558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b42218426e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221842868"/>
        <function-ref name="sendDone" scoped="" ref="0x2b42218429f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b42218432c8" loc="46:/home/tinyos/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b42218432c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221843638"/>
        <function-ref name="getPayload" scoped="" ref="0x2b42218437c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221843948"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221843ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221843c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x2b4221840268" loc="50:/home/tinyos/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b4221840268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b42218405b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221840740"/>
        <function-ref name="getPayload" scoped="" ref="0x2b42218408c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221840a50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221840bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x2b4221859020" loc="169:/home/tinyos/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x2b4221859020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4221859370"/>
        <function-ref name="runTask" scoped="" ref="0x2b42218594f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x2b42218597c0" loc="126:/home/tinyos/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x2b42218597c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4221859b10"/>
        <function-ref name="runTask" scoped="" ref="0x2b4221859c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x2b4221842c38" loc="49:/home/tinyos/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b4221842c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4221841020"/>
        <function-ref name="source" scoped="" ref="0x2b42218411a8"/>
        <function-ref name="address" scoped="" ref="0x2b4221841330"/>
        <function-ref name="destination" scoped="" ref="0x2b42218414b8"/>
        <function-ref name="setSource" scoped="" ref="0x2b4221841640"/>
        <function-ref name="setDestination" scoped="" ref="0x2b42218417c8"/>
        <function-ref name="type" scoped="" ref="0x2b4221841950"/>
        <function-ref name="setType" scoped="" ref="0x2b4221841ad8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4221841c60"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4221841de8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4221840020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b4221856940" loc="41:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b4221856940"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4221856c90"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4221856e18"/>
        <function-ref name="start" scoped="" ref="0x2b4221853020"/>
        <function-ref name="stop" scoped="" ref="0x2b42218531a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b4221866b38" loc="46:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b4221866b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b4221850020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b42218502a8" loc="48:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b42218502a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b42218505f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221850780"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4221850908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221850a90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221850c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b4221853920" loc="43:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b4221853920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221853c70"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4221853df8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221852020"/>
        <function-ref name="cancel" scoped="" ref="0x2b42218521a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221852330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b4221851628" loc="45:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b4221851628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221851978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b4221864020" loc="52:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b4221864020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b4221864370"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b42218644f8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b4221864680"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b4221864808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4221852ab0" loc="44:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b4221852ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221852e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b4221867658" loc="51:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4221867658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b42218679a8"/>
        <function-ref name="noAck" scoped="" ref="0x2b4221867b30"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b4221867cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b4221874dc0" loc="53:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b4221874dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b4221863170"/>
        <function-ref name="setRetries" scoped="" ref="0x2b42218632f8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b4221863480"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b4221863608"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b4221863790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b422184f020" loc="49:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b422184f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b422184f370"/>
        <function-ref name="source" scoped="" ref="0x2b422184f4f8"/>
        <function-ref name="address" scoped="" ref="0x2b422184f680"/>
        <function-ref name="destination" scoped="" ref="0x2b422184f808"/>
        <function-ref name="setSource" scoped="" ref="0x2b422184f990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b422184fb18"/>
        <function-ref name="type" scoped="" ref="0x2b422184fca0"/>
        <function-ref name="setType" scoped="" ref="0x2b422184fe28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4221867020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b42218671a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4221867330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b42218707f8" loc="54:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b42218707f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b4221870b48"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4221870cd0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4221870e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x2b42218684a8" loc="56:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x2b42218684a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b4221496788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b422186f900"/>
        <function-ref name="clear" scoped="" ref="0x2b4221883020"/>
        <function-ref name="isValid" scoped="" ref="0x2b422186f220"/>
        <function-ref name="set" scoped="" ref="0x2b4221883700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b4221882378" loc="57:/home/tinyos/tinyos-main/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4221882378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4221881900"/>
        <function-ref name="clear" scoped="" ref="0x2b422187f020"/>
        <function-ref name="isValid" scoped="" ref="0x2b4221881220"/>
        <function-ref name="set" scoped="" ref="0x2b422187f700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b422187ecd0" loc="45:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b422187ecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b422187b0a0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b422187b228"/>
        <function-ref name="start" scoped="" ref="0x2b422187b3b0"/>
        <function-ref name="stop" scoped="" ref="0x2b422187b538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b422189d0c8" loc="66:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b422189d0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b422189b6a0"/>
        <function-ref name="get" scoped="" ref="0x2b422189b190"/>
        <function-ref name="isSet" scoped="" ref="0x2b422189dc48"/>
        <function-ref name="set" scoped="" ref="0x2b422189bbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b42218ad860" loc="71:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b42218ad860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b42218accc0"/>
        <function-ref name="clear" scoped="" ref="0x2b42218aa420"/>
        <function-ref name="isValid" scoped="" ref="0x2b42218ac5e0"/>
        <function-ref name="set" scoped="" ref="0x2b42218aab00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b42218774e8" loc="50:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b42218774e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b4221877838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b4221891360" loc="56:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b4221891360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b42218916b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221891838"/>
        <function-ref name="getPayload" scoped="" ref="0x2b42218919c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221891b48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221891cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b422187bcb0" loc="47:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b422187bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b422187a0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b422187a228"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b422187a3b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b422187a538"/>
        <function-ref name="sendDone" scoped="" ref="0x2b422187a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b42218789b8" loc="49:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b42218789b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221878d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b4221885d80" loc="65:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b4221885d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b422189e388"/>
        <function-ref name="get" scoped="" ref="0x2b4221884e38"/>
        <function-ref name="isSet" scoped="" ref="0x2b4221884928"/>
        <function-ref name="set" scoped="" ref="0x2b422189e898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b422188e020" loc="60:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b422188e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b422188e370"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b422188e4f8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b422188e680"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b422188e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b422187ae40" loc="48:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b422187ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b42218781c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b4221898978" loc="70:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4221898978"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4221724708"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4221896e10"/>
        <function-ref name="clear" scoped="" ref="0x2b4221892558"/>
        <function-ref name="isValid" scoped="" ref="0x2b4221896730"/>
        <function-ref name="set" scoped="" ref="0x2b4221892c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b42218945a8" loc="69:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b42218945a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4221724708"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4221898150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b42218868d8" loc="64:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b42218868d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221885020"/>
        <function-ref name="get" scoped="" ref="0x2b422188b9a0"/>
        <function-ref name="isSet" scoped="" ref="0x2b422188b490"/>
        <function-ref name="set" scoped="" ref="0x2b4221885530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b422188f658" loc="59:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b422188f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b422188f9a8"/>
        <function-ref name="noAck" scoped="" ref="0x2b422188fb30"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b422188fcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b42218761c8" loc="53:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b42218761c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221876518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b422188eab8" loc="61:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b422188eab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b422188ee08"/>
        <function-ref name="setRetries" scoped="" ref="0x2b422188d020"/>
        <function-ref name="getRetries" scoped="" ref="0x2b422188d1a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b422188d330"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b422188d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b4221890020" loc="57:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b4221890020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4221890370"/>
        <function-ref name="source" scoped="" ref="0x2b42218904f8"/>
        <function-ref name="address" scoped="" ref="0x2b4221890680"/>
        <function-ref name="destination" scoped="" ref="0x2b4221890808"/>
        <function-ref name="setSource" scoped="" ref="0x2b4221890990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4221890b18"/>
        <function-ref name="type" scoped="" ref="0x2b4221890ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b4221890e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b422188f020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b422188f1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b422188f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b422188d780" loc="62:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b422188d780"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b422188dbd0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b422188dd58"/>
        <function-ref name="getChannel" scoped="" ref="0x2b422188c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b4221897990" loc="67:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b4221897990"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b4221897ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b4221876d58" loc="54:/home/tinyos/tinyos-main/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b4221876d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b42218910d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b42218a9c50" loc="41:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b42218a9c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b42218a6020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b42218a61a8"/>
        <function-ref name="start" scoped="" ref="0x2b42218a6330"/>
        <function-ref name="stop" scoped="" ref="0x2b42218a64b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b42218d28b8" loc="80:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b42218d28b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b42218cf020"/>
        <function-ref name="get" scoped="" ref="0x2b42218d19a0"/>
        <function-ref name="isSet" scoped="" ref="0x2b42218d1490"/>
        <function-ref name="set" scoped="" ref="0x2b42218cf530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x2b42218b9710" loc="60:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x2b42218b9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b42218b9a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x2b42218b84b8" loc="62:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x2b42218b84b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b42218b8908"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b42218b8a90"/>
        <function-ref name="request" scoped="" ref="0x2b42218b8c18"/>
        <function-ref name="granted" scoped="" ref="0x2b42218b8da0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b42218b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b42218a2498" loc="47:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b42218a2498"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b42218a27e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b42218a6c30" loc="44:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b42218a6c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b42218a5020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b42218a51a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b42218a5330"/>
        <function-ref name="cancel" scoped="" ref="0x2b42218a54b8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b42218a5640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b42218a4968" loc="46:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b42218a4968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b42218a4cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b42218bf308" loc="64:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b42218bf308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b42218bf658"/>
        <function-ref name="address" scoped="" ref="0x2b42218bf7e0"/>
        <function-ref name="destination" scoped="" ref="0x2b42218bf968"/>
        <function-ref name="setSource" scoped="" ref="0x2b42218bfaf0"/>
        <function-ref name="setDestination" scoped="" ref="0x2b42218bfc78"/>
        <function-ref name="pan" scoped="" ref="0x2b42218bfe00"/>
        <function-ref name="setPan" scoped="" ref="0x2b42218c8020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b42218c81a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b42218c8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x2b42218c86e0" loc="65:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x2b42218c86e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b42218c8a30"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b42218c8bb8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b42218c8d40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b42218c7020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b42218c71a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b42218d55a0" loc="79:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b42218d55a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b42218d3b70"/>
        <function-ref name="get" scoped="" ref="0x2b42218d3660"/>
        <function-ref name="isSet" scoped="" ref="0x2b42218d3150"/>
        <function-ref name="set" scoped="" ref="0x2b42218d20c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b42218c7e28" loc="69:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b42218c7e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b42218be1a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b42218be330"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b42218be4b8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b42218be640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x2b42218bb9e8" loc="54:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x2b42218bb9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b42218bbd38"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b42218ba020"/>
        <function-ref name="getPayload" scoped="" ref="0x2b42218ba1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b42218ba330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b42218ba4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b42218a5dc0" loc="45:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b42218a5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b42218a4170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b42218cd8b0" loc="84:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b42218cd8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4221724708"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b42218ca020"/>
        <function-ref name="clear" scoped="" ref="0x2b42218ca700"/>
        <function-ref name="isValid" scoped="" ref="0x2b42218cb828"/>
        <function-ref name="set" scoped="" ref="0x2b42218cade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b42218ce4e0" loc="83:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b42218ce4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4221724708"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b42218cd088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b42218d71f8" loc="78:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b42218d71f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b42218d67f8"/>
        <function-ref name="get" scoped="" ref="0x2b42218d62e8"/>
        <function-ref name="isSet" scoped="" ref="0x2b42218d7d78"/>
        <function-ref name="set" scoped="" ref="0x2b42218d6d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b42218c74d0" loc="68:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b42218c74d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b42218c7820"/>
        <function-ref name="noAck" scoped="" ref="0x2b42218c79a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b42218c7b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b42218b2250" loc="58:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b42218b2250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b42218b25a0"/>
        <function-ref name="getPayload" scoped="" ref="0x2b42218b2728"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b42218b28b0"/>
        <function-ref name="cancel" scoped="" ref="0x2b42218b2a38"/>
        <function-ref name="sendDone" scoped="" ref="0x2b42218b2bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b42218a11c8" loc="50:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b42218a11c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b42218a1518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b42218be8f0" loc="70:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b42218be8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b42218bec40"/>
        <function-ref name="setRetries" scoped="" ref="0x2b42218bedc8"/>
        <function-ref name="getRetries" scoped="" ref="0x2b42218bd020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b42218bd1a8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b42218bd330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b42218bd5f8" loc="76:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b42218bd5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b42218bd948"/>
        <function-ref name="setChannel" scoped="" ref="0x2b42218bdad0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b42218bdc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b42218a0378" loc="53:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b42218a0378"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b42218a06c8"/>
        <function-ref name="source" scoped="" ref="0x2b42218a0850"/>
        <function-ref name="address" scoped="" ref="0x2b42218a09d8"/>
        <function-ref name="destination" scoped="" ref="0x2b42218a0b60"/>
        <function-ref name="setSource" scoped="" ref="0x2b42218a0ce8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b42218a0e70"/>
        <function-ref name="type" scoped="" ref="0x2b42218bb020"/>
        <function-ref name="setType" scoped="" ref="0x2b42218bb1a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b42218bb330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b42218bb4b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b42218bb640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b42218e59d8" loc="85:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b42218e59d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b42218e4e48"/>
        <function-ref name="clear" scoped="" ref="0x2b42218e3558"/>
        <function-ref name="isValid" scoped="" ref="0x2b42218e4768"/>
        <function-ref name="set" scoped="" ref="0x2b42218e3c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b42218b9020" loc="59:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b42218b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b42218b9370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b42218cfb78" loc="81:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b42218cfb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b42218ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b42218a1d58" loc="51:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioC.nc">
      <component-ref qname="RF230RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b42218a1d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b42218a00d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x2b422190e608" loc="51:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x2b422190e608"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b422190e958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x2b42219022e8" loc="47:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x2b42219022e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x2b4221902638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x2b4221910a60" loc="50:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x2b4221910a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4221910db0"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b42218f9020"/>
        <function-ref name="source" scoped="" ref="0x2b42218f91a8"/>
        <function-ref name="destination" scoped="" ref="0x2b42218f9330"/>
        <function-ref name="setSource" scoped="" ref="0x2b42218f94b8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b42218f9640"/>
        <function-ref name="setGroup" scoped="" ref="0x2b42218f97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x2b42218fa898" loc="49:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x2b42218fa898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x2b42218fabe8"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x2b42218fad70"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x2b4221904020"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x2b42219041a8"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x2b4221904330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b422192a388" loc="61:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b422192a388"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b422192a6d8"/>
        <function-ref name="wait" scoped="" ref="0x2b422192a860"/>
        <function-ref name="cancel" scoped="" ref="0x2b422192a9e8"/>
        <function-ref name="isFree" scoped="" ref="0x2b422192ab70"/>
        <function-ref name="getNow" scoped="" ref="0x2b422192acf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Packet" ref="0x2b4221924640" loc="62:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Packet" scoped="" ref="0x2b4221924640"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221924990"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221924b18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221924ca0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221924e28"/>
        <function-ref name="headerLength" scoped="" ref="0x2b422192e020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b422192e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b422192e730" loc="64:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b422192e730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4221724708"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4221929cc0"/>
        <function-ref name="clear" scoped="" ref="0x2b4221940420"/>
        <function-ref name="isValid" scoped="" ref="0x2b42219295e0"/>
        <function-ref name="set" scoped="" ref="0x2b4221940b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230DriverConfig" ref="0x2b42218d8428" loc="43:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230DriverConfig" scoped="" ref="0x2b42218d8428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b42218d8778"/>
        <function-ref name="headerLength" scoped="" ref="0x2b42218d8900"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b42218d8a88"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b42218d8c10"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b42218d8d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x2b42218edd30" loc="46:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x2b42218edd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x2b42218ec0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x2b42218f5080" loc="44:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x2b42218f5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2b42218f53d0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2b42218f5558"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b42218f56e0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2b42218f5868"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2b42218f59f0"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2b42218f5b78"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b42218f5d00"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b42218f4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b42219315e8" loc="60:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b42219315e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b4221931938"/>
        <function-ref name="getDSN" scoped="" ref="0x2b4221931ac0"/>
        <function-ref name="setFCF" scoped="" ref="0x2b4221931c48"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b4221931dd0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b42218f8020"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b42218f81a8"/>
        <function-ref name="setDSN" scoped="" ref="0x2b42218f8330"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b42218f84b8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b42218f8640"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b42218f87c8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b42218f8950"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b42218f8ad8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b42218f8c60"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b422190f020"/>
        <function-ref name="localPan" scoped="" ref="0x2b422190f1a8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b422190f330"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b422190f4b8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b422190f640"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b422190f7c8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b422190f950"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b422190fad8"/>
        <function-ref name="getFCF" scoped="" ref="0x2b422190fc60"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b422190fde8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b4221930020"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b42219301a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x2b42218e83b8" loc="45:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2b42218e83b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b42218e8708"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b42218e8890"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b42218e8a18"/>
        <function-ref name="getSender" scoped="" ref="0x2b42218e8ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x2b42218ff650" loc="48:/home/tinyos/tinyos-main/tos/chips/rf230/RF230RadioP.nc">
      <component-ref qname="RF230RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x2b42218ff650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b42218ff9a0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b42218ffb28"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b42218ffcb0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b42218ffe38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b4221983910" loc="41:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b4221983910"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b4221983c80"/>
        <function-ref name="wait" scoped="" ref="0x2b4221983e08"/>
        <function-ref name="cancel" scoped="" ref="0x2b42219b1020"/>
        <function-ref name="isFree" scoped="" ref="0x2b42219b11a8"/>
        <function-ref name="getNow" scoped="" ref="0x2b42219b1330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b42219b1958" loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b42219b1958"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b42214096f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b42214096f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4221724708"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b4221724b08"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b42219c2020"/>
        <function-ref name="fired" scoped="" ref="0x2b42219c40c0"/>
        <function-ref name="startAt" scoped="" ref="0x2b42219c49d0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b42219c4548"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b42219c24a8"/>
        <function-ref name="start" scoped="" ref="0x2b42219c5730"/>
        <function-ref name="stop" scoped="" ref="0x2b42219c5c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x2b4222759bc8" loc="43:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b4222759bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b4222757020"/>
        <function-ref name="wait" scoped="" ref="0x2b42227571a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b4222757330"/>
        <function-ref name="isFree" scoped="" ref="0x2b42227574b8"/>
        <function-ref name="getNow" scoped="" ref="0x2b4222757640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b4222757af8" loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4222757af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4221724708"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b4221724b08"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b42227af190"/>
        <function-ref name="fired" scoped="" ref="0x2b42227b0230"/>
        <function-ref name="startAt" scoped="" ref="0x2b42227b0b40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b42227b06b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b42227af618"/>
        <function-ref name="start" scoped="" ref="0x2b4222756878"/>
        <function-ref name="stop" scoped="" ref="0x2b4222756d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b42227af9f0" loc="49:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RF230RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b42227af9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b42227afd40"/>
        <function-ref name="suspend" scoped="" ref="0x2b42227ae020"/>
        <function-ref name="resume" scoped="" ref="0x2b42227ae1a8"/>
        <function-ref name="run" scoped="" ref="0x2b42227ae330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x2b42219b0220" loc="40:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b42219b0220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b42219b0570"/>
        <function-ref name="suspend" scoped="" ref="0x2b42219b06f8"/>
        <function-ref name="resume" scoped="" ref="0x2b42219b0880"/>
        <function-ref name="run" scoped="" ref="0x2b42219b0a08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4221a692a8" loc="54:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4221a692a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221a695f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221a69780"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221a69908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4221a69b90" loc="55:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4221a69b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221a68020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b4221a6b020" loc="44:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b4221a6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b4221a6b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b4221a6f578" loc="40:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b4221a6f578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221a6f8c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221a6fa50"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4221a6fbd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221a6fd60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221a6e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b4221a6e388" loc="41:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b4221a6e388"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221a6e6f8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4221a6e880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221a6ea08"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221a6eb90"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221a6ed18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b4221a6d7e0" loc="43:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b4221a6d7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221a6db50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4221a6a4d0" loc="53:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4221a6a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221a6a820"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221a6a9a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221a6ab30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221a6acb8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4221a6ae40"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4221a69020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b4221a682a8" loc="56:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b4221a682a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4221a685f8"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b4221a68780"/>
        <function-ref name="source" scoped="" ref="0x2b4221a68908"/>
        <function-ref name="destination" scoped="" ref="0x2b4221a68a90"/>
        <function-ref name="setSource" scoped="" ref="0x2b4221a68c18"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4221a68da0"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4221a8b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4221a6d0c8" loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b4221a6d0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221a6d438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b4221a6b738" loc="47:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b4221a6b738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221a6baa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b4221a70020" loc="39:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b4221a70020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b4221a70370"/>
        <function-ref name="source" scoped="" ref="0x2b4221a704f8"/>
        <function-ref name="address" scoped="" ref="0x2b4221a70680"/>
        <function-ref name="destination" scoped="" ref="0x2b4221a70808"/>
        <function-ref name="setSource" scoped="" ref="0x2b4221a70990"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4221a70b18"/>
        <function-ref name="type" scoped="" ref="0x2b4221a70ca0"/>
        <function-ref name="setType" scoped="" ref="0x2b4221a70e28"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4221a6f020"/>
        <function-ref name="setGroup" scoped="" ref="0x2b4221a6f1a8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4221a6f330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b4221a6be50" loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b4221a6be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221a6a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b422278f060" loc="59:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b422278f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b422278f3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4222790740" loc="58:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4222790740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4222790a90"/>
        <function-ref name="cancel" scoped="" ref="0x2b4222790c18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4222790da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b4222792388" loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b4222792388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b42227926f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b4222796888" loc="44:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b4222796888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4222796bd8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4222796d60"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4222795020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b42227951a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4222795330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x2b4222795698" loc="45:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x2b4222795698"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4222795a08"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4222795b90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4222795d18"/>
        <function-ref name="cancel" scoped="" ref="0x2b4222793020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b42227931a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x2b4222793c28" loc="47:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x2b4222793c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4222792020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4222798470" loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4222798470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b42227987c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4222798948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4222798ad0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4222798c58"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4222798de0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4222797020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b422278f638" loc="60:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b422278f638"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b422278fa88"/>
        <function-ref name="checkFrame" scoped="" ref="0x2b422278fc10"/>
        <function-ref name="source" scoped="" ref="0x2b422278fd98"/>
        <function-ref name="destination" scoped="" ref="0x2b422278e020"/>
        <function-ref name="setSource" scoped="" ref="0x2b422278e1a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b422278e330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b422278e4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b422278e700" loc="61:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b422278e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b422278ea50"/>
        <function-ref name="changed" scoped="" ref="0x2b422278ebd8"/>
        <function-ref name="amGroup" scoped="" ref="0x2b422278ed60"/>
        <function-ref name="setAddress" scoped="" ref="0x2b422278d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4222791838" loc="57:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4222791838"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4222791b88"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4222791d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4222790020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b42227901a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4222790330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b42227904b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4222793510" loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b4222793510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4222793880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x2b4222792aa0" loc="51:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x2b4222792aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4222792e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b4222797268" loc="43:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b4222797268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b42227975b8"/>
        <function-ref name="source" scoped="" ref="0x2b4222797740"/>
        <function-ref name="address" scoped="" ref="0x2b42227978c8"/>
        <function-ref name="destination" scoped="" ref="0x2b4222797a50"/>
        <function-ref name="setSource" scoped="" ref="0x2b4222797bd8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4222797d60"/>
        <function-ref name="type" scoped="" ref="0x2b4222796020"/>
        <function-ref name="setType" scoped="" ref="0x2b42227961a8"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4222796330"/>
        <function-ref name="setGroup" scoped="" ref="0x2b42227964b8"/>
        <function-ref name="localGroup" scoped="" ref="0x2b4222796640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x2b42227911e0" loc="52:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RF230RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x2b42227911e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4222791550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x2b4221a62560" loc="54:/home/tinyos/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b4221a62560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b4221a628b0"/>
        <function-ref name="changed" scoped="" ref="0x2b4221a62a38"/>
        <function-ref name="amGroup" scoped="" ref="0x2b4221a62bc0"/>
        <function-ref name="setAddress" scoped="" ref="0x2b4221a62d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4221a85a48" loc="44:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4221a85a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221a85d98"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221a9a020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221a9a1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x2b4221a9a3f0" loc="45:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b4221a9a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b4221a9a740"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b4221a9a8c8"/>
        <function-ref name="request" scoped="" ref="0x2b4221a9aa50"/>
        <function-ref name="granted" scoped="" ref="0x2b4221a9abd8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b4221a9ad60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b4221a85100" loc="39:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RF230RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b4221a85100"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221a85450"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221a855d8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221a85760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b4221aef020" loc="86:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b4221aef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b4221aef390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b4221aef518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b4221aed020" loc="89:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b4221aed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b4221aed390"/>
        <function-ref name="configure" scoped="" ref="0x2b4221aed518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b4221af0200" loc="85:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b4221af0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b4221af0570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b4221af06f8"/>
        <function-ref name="request" scoped="" ref="0x2b4221af0880"/>
        <function-ref name="granted" scoped="" ref="0x2b4221af0a08"/>
        <function-ref name="isOwner" scoped="" ref="0x2b4221af0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b4221aef760" loc="87:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RF230RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b4221aef760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b4221aefab0"/>
        <function-ref name="userId" scoped="" ref="0x2b4221aefc38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b42227ee398" loc="44:/home/tinyos/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b42227ee398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b42227ee6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b42227ee970" loc="45:/home/tinyos/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b42227ee970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b42227eecc0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b42227eee48"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b42227ed020"/>
        <function-ref name="dequeue" scoped="" ref="0x2b42227ed1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b42227ea510" loc="52:/home/tinyos/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b42227ea510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b42227ea880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b42227eaa08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b42227e9570" loc="56:/home/tinyos/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b42227e9570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b42227e98e0"/>
        <function-ref name="configure" scoped="" ref="0x2b42227e9a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b42227e9cf0" loc="57:/home/tinyos/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b42227e9cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b42227e80a0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b42227e8228"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b42227e83b0"/>
        <function-ref name="dequeue" scoped="" ref="0x2b42227e8538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b42227eb720" loc="51:/home/tinyos/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b42227eb720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b42227eba90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b42227ebc18"/>
        <function-ref name="request" scoped="" ref="0x2b42227ebda0"/>
        <function-ref name="granted" scoped="" ref="0x2b42227ea020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b42227ea1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b42227eac50" loc="53:/home/tinyos/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b42227eac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b42227e9020"/>
        <function-ref name="userId" scoped="" ref="0x2b42227e91a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b42227e8800" loc="69:/home/tinyos/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RF230RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b42227e8800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b42227e8b50"/>
        <function-ref name="runTask" scoped="" ref="0x2b42227e8cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4221b2aba0" loc="49:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4221b2aba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221b28020"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221b281a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221b28330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4221b285b8" loc="50:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4221b285b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221b28908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x2b4221b2e840" loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x2b4221b2e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x2b4221b2eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b4221aea980" loc="39:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b4221aea980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221aeacd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221aeae58"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4221b2f020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221b2f1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221b2f330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x2b4221b2bd98" loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4221b2bd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221b2a170"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221b2a2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221b2a480"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221b2a608"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4221b2a790"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4221b2a918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x2b4221b2ee38" loc="47:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b4221b2ee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b4221b2d1c0"/>
        <function-ref name="getDSN" scoped="" ref="0x2b4221b2d348"/>
        <function-ref name="setFCF" scoped="" ref="0x2b4221b2d4d0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b4221b2d658"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b4221b2d7e0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b4221b2d968"/>
        <function-ref name="setDSN" scoped="" ref="0x2b4221b2daf0"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b4221b2dc78"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b4221b2de00"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b4221b2c020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b4221b2c1a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b4221b2c330"/>
        <function-ref name="localAddr" scoped="" ref="0x2b4221b2c4b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b4221b2c740"/>
        <function-ref name="localPan" scoped="" ref="0x2b4221b2c8c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b4221b2ca50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b4221b2cbd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b4221b2cd60"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b4221b2b020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4221b2b1a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b4221b2b330"/>
        <function-ref name="getFCF" scoped="" ref="0x2b4221b2b4b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b4221b2b640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b4221b2b7c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b4221b2b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b4221b2f578" loc="40:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b4221b2f578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221b2f8c8"/>
        <function-ref name="getPayload" scoped="" ref="0x2b4221b2fa50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221b2fbd8"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221b2fd60"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221b2e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b4221b2e2a8" loc="41:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b4221b2e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221b2e5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4221b61490" loc="69:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4221b61490"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221b617e0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221b61968"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221b61af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4221b61d78" loc="70:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4221b61d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221b600f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b4221b65880" loc="57:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b4221b65880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221b65bd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221b65d58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221b63020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221b631a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4221b63330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4221b634b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x2b4221b62060" loc="62:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x2b4221b62060"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221b623b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4221b60378" loc="71:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4221b60378"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221b606c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221b60850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221b609d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221b60b60"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4221b60ce8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4221b60e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x2b4221b63740" loc="61:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x2b4221b63740"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221b63a90"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221b63c18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221b63da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x2b4221b22838" loc="55:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x2b4221b22838"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221b22b88"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221b22d10"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221b65020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x2b4221b652a8" loc="56:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x2b4221b652a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221b655f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x2b4221b62638" loc="63:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RF230RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x2b4221b62638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221b62988"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221b62b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221b62c98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221b62e20"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4221b61020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4221b611a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b4221beb900" loc="40:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b4221beb900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b4221bebc50"/>
        <function-ref name="address" scoped="" ref="0x2b4221bebdd8"/>
        <function-ref name="destination" scoped="" ref="0x2b4221be9020"/>
        <function-ref name="setSource" scoped="" ref="0x2b4221be91a8"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4221be9330"/>
        <function-ref name="pan" scoped="" ref="0x2b4221be94b8"/>
        <function-ref name="setPan" scoped="" ref="0x2b4221be9640"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4221be97c8"/>
        <function-ref name="localPan" scoped="" ref="0x2b4221be9950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4221be9b98" loc="41:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4221be9b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221be8020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221be81a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221be8330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221be84b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4221be8640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4221be87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2b4221bee980" loc="39:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b4221bee980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b4221beecd0"/>
        <function-ref name="getDSN" scoped="" ref="0x2b4221beee58"/>
        <function-ref name="setFCF" scoped="" ref="0x2b4221bed020"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b4221bed1a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b4221bed330"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b4221bed4b8"/>
        <function-ref name="setDSN" scoped="" ref="0x2b4221bed640"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b4221bed7c8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b4221bed950"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b4221bedad8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b4221bedc60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b4221bedde8"/>
        <function-ref name="localAddr" scoped="" ref="0x2b4221bec020"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b4221bec2a8"/>
        <function-ref name="localPan" scoped="" ref="0x2b4221bec430"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b4221bec5b8"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b4221bec740"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b4221bec8c8"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b4221beca50"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4221becbd8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b4221becd60"/>
        <function-ref name="getFCF" scoped="" ref="0x2b4221beb020"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b4221beb1a8"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b4221beb330"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b4221beb4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4221be8ab0" loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4221be8ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221be8e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221be7020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221be71a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221be7330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4221be74b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4221be7640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x2b4222891d98" loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x2b4222891d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x2b4222890170"/>
        <function-ref name="address" scoped="" ref="0x2b42228902f8"/>
        <function-ref name="destination" scoped="" ref="0x2b4222890480"/>
        <function-ref name="setSource" scoped="" ref="0x2b4222890608"/>
        <function-ref name="setDestination" scoped="" ref="0x2b4222890790"/>
        <function-ref name="pan" scoped="" ref="0x2b4222890918"/>
        <function-ref name="setPan" scoped="" ref="0x2b4222890aa0"/>
        <function-ref name="isForMe" scoped="" ref="0x2b4222890c28"/>
        <function-ref name="localPan" scoped="" ref="0x2b4222890db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b422288f020" loc="43:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b422288f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b422288f370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b422288f4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b422288f680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b422288f808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b422288f990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b422288fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x2b422283cd50" loc="41:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x2b422283cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x2b42228380d8"/>
        <function-ref name="getDSN" scoped="" ref="0x2b4222838260"/>
        <function-ref name="setFCF" scoped="" ref="0x2b42228383e8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x2b4222838570"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x2b42228386f8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x2b4222838880"/>
        <function-ref name="setDSN" scoped="" ref="0x2b4222838a08"/>
        <function-ref name="createAckReply" scoped="" ref="0x2b4222838b90"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x2b4222838d18"/>
        <function-ref name="isDataFrame" scoped="" ref="0x2b4222837020"/>
        <function-ref name="getAckRequired" scoped="" ref="0x2b42228371a8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x2b4222837330"/>
        <function-ref name="localAddr" scoped="" ref="0x2b42228374b8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b4222837740"/>
        <function-ref name="localPan" scoped="" ref="0x2b42228378c8"/>
        <function-ref name="setDestAddr" scoped="" ref="0x2b4222837a50"/>
        <function-ref name="createAckFrame" scoped="" ref="0x2b4222837bd8"/>
        <function-ref name="setFramePending" scoped="" ref="0x2b4222837d60"/>
        <function-ref name="setDestPan" scoped="" ref="0x2b4222891020"/>
        <function-ref name="isForMe" scoped="" ref="0x2b42228911a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b4222891330"/>
        <function-ref name="getFCF" scoped="" ref="0x2b42228914b8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b4222891640"/>
        <function-ref name="getDestAddr" scoped="" ref="0x2b42228917c8"/>
        <function-ref name="getFramePending" scoped="" ref="0x2b4222891950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x2b422288fdc0" loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x2b422288fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x2b422288e170"/>
        <function-ref name="changed" scoped="" ref="0x2b422288e2f8"/>
        <function-ref name="amGroup" scoped="" ref="0x2b422288e480"/>
        <function-ref name="setAddress" scoped="" ref="0x2b422288e608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b422288e890" loc="49:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RF230RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b422288e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b422288ebe0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b422288ed68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b422288d020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b422288d1a8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b422288d330"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b422288d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4221c53db8" loc="45:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4221c53db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221c52170"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221c522f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221c52480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4221c52708" loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4221c52708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221c52a58"/>
        <function-ref name="header" scoped="" ref="0x2b4221c52be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b4221c54d18" loc="40:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b4221c54d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221c530a0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221c53228"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221c533b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b4221c52e68" loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b4221c52e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b4221c511e8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b4221c51370"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b4221c514f8"/>
        <function-ref name="getSender" scoped="" ref="0x2b4221c51680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b4221c535f8" loc="41:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b4221c535f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221c53948"/>
        <function-ref name="header" scoped="" ref="0x2b4221c53ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b422289d458" loc="50:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b422289d458"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b422289d7a8"/>
        <function-ref name="cancel" scoped="" ref="0x2b422289d930"/>
        <function-ref name="sendDone" scoped="" ref="0x2b422289dab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b422289dd40" loc="51:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b422289dd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b422289c0d8"/>
        <function-ref name="header" scoped="" ref="0x2b422289c260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x2b422289abd8" loc="55:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b422289abd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4222899020"/>
        <function-ref name="clearAll" scoped="" ref="0x2b42228991a8"/>
        <function-ref name="get" scoped="" ref="0x2b4222899330"/>
        <function-ref name="set" scoped="" ref="0x2b42228994b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b42228a2da0" loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b42228a2da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b422289e170"/>
        <function-ref name="cancel" scoped="" ref="0x2b422289e2f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b422289e480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x2b422289a020" loc="54:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b422289a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b422289a370"/>
        <function-ref name="insertNode" scoped="" ref="0x2b422289a4f8"/>
        <function-ref name="getNode" scoped="" ref="0x2b422289a680"/>
        <function-ref name="evicted" scoped="" ref="0x2b422289a808"/>
        <function-ref name="getIndex" scoped="" ref="0x2b422289a990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b422289e6c8" loc="43:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b422289e6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b422289ea18"/>
        <function-ref name="header" scoped="" ref="0x2b422289eba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b422289ede8" loc="45:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b422289ede8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b422289d170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x2b422289c4a8" loc="53:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x2b422289c4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x2b422289c7f8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x2b422289c980"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x2b422289cb08"/>
        <function-ref name="getSender" scoped="" ref="0x2b422289cc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2b4221c327f8" loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b4221c327f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b4221c32b48"/>
        <function-ref name="insertNode" scoped="" ref="0x2b4221c32cd0"/>
        <function-ref name="getNode" scoped="" ref="0x2b4221c32e58"/>
        <function-ref name="evicted" scoped="" ref="0x2b4221c2f020"/>
        <function-ref name="getIndex" scoped="" ref="0x2b4221c2f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2b4221c2b4a0" loc="43:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b4221c2b4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221c2b7f0"/>
        <function-ref name="clearAll" scoped="" ref="0x2b4221c2b978"/>
        <function-ref name="get" scoped="" ref="0x2b4221c2bb00"/>
        <function-ref name="set" scoped="" ref="0x2b4221c2bc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x2b4221c2c2e8" loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x2b4221c2c2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x2b4221c2c638"/>
        <function-ref name="insertNode" scoped="" ref="0x2b4221c2c7c0"/>
        <function-ref name="getNode" scoped="" ref="0x2b4221c2c948"/>
        <function-ref name="evicted" scoped="" ref="0x2b4221c2cad0"/>
        <function-ref name="getIndex" scoped="" ref="0x2b4221c2cc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4221c2fc80" loc="41:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4221c2fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4221c2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x2b4222897140" loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RF230RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x2b4222897140"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4222897490"/>
        <function-ref name="clearAll" scoped="" ref="0x2b4222897618"/>
        <function-ref name="get" scoped="" ref="0x2b42228977a0"/>
        <function-ref name="set" scoped="" ref="0x2b4222897928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4221c6c618" loc="85:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4221c6c618"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221c6c968"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221c6caf0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221c6cc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4221c6b020" loc="86:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4221c6b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221c6b370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedPacketAcks" ref="0x2b4221c68988" loc="93:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketAcks" scoped="" ref="0x2b4221c68988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b4221c68cd8"/>
        <function-ref name="noAck" scoped="" ref="0x2b4221c68e60"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b4221c67020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b4221c78ac0" loc="77:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b4221c78ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221c78e10"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221c6e020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221c6e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4221c6d700" loc="80:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4221c6d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221c6da50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221c6dbd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221c6dd60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221c6c020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4221c6c1a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4221c6c330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4221c6b5f8" loc="87:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4221c6b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221c6b948"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221c6bad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221c6bc58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221c6bde0"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4221c69020"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4221c691a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnconnectedPacketLink" ref="0x2b4221c69d18" loc="92:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedPacketLink" scoped="" ref="0x2b4221c69d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b4221c680a0"/>
        <function-ref name="setRetries" scoped="" ref="0x2b4221c68228"/>
        <function-ref name="getRetries" scoped="" ref="0x2b4221c683b0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b4221c68538"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b4221c686c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4221c6e430" loc="78:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b4221c6e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221c6e780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x2b4221c693f0" loc="88:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4221c693f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b4221c69740"/>
        <function-ref name="noAck" scoped="" ref="0x2b4221c698c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b4221c69a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x2b4221c6e9c8" loc="79:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RF230RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x2b4221c6e9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x2b4221c6ed18"/>
        <function-ref name="setRetries" scoped="" ref="0x2b4221c6d020"/>
        <function-ref name="getRetries" scoped="" ref="0x2b4221c6d1a8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x2b4221c6d330"/>
        <function-ref name="wasDelivered" scoped="" ref="0x2b4221c6d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b4221c7c1c8" loc="39:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b4221c7c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4221c7c518"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4221c7c6a0"/>
        <function-ref name="start" scoped="" ref="0x2b4221c7c828"/>
        <function-ref name="stop" scoped="" ref="0x2b4221c7c9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4221ca30c0" loc="49:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4221ca30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221ca3410"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221ca3598"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221ca3720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4221ca39a8" loc="50:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4221ca39a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221ca3cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b4221c7cc38" loc="40:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b4221c7cc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221c7a020"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221c7a1a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221c7a330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4221c7ab50" loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4221c7ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221ca5020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221ca51a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221ca5330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221ca54b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4221ca5640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4221ca57c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b4221ca5a10" loc="44:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b4221ca5a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b4221ca5d60"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b4221ca4020"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b4221ca41a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b4221ca4330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b4221ca4618" loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b4221ca4618"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4221ca4968"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4221ca4af0"/>
        <function-ref name="start" scoped="" ref="0x2b4221ca4c78"/>
        <function-ref name="stop" scoped="" ref="0x2b4221ca4e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4221c7a5b8" loc="41:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b4221c7a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221c7a908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4221ca2020" loc="51:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4221ca2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221ca2370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221ca24f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221ca2680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221ca2808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4221ca2990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4221ca2b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x2b42228d0458" loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RF230RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x2b42228d0458"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x2b42228d07a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x2b42228d0930"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x2b42228d0ab8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x2b42228d0c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b4221cea708" loc="39:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b4221cea708"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4221ceaa58"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4221ceabe0"/>
        <function-ref name="start" scoped="" ref="0x2b4221cead68"/>
        <function-ref name="stop" scoped="" ref="0x2b4221ce9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2b4221d16b70" loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b4221d16b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b4221d15020"/>
        <function-ref name="turnOn" scoped="" ref="0x2b4221d151a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4221d15330"/>
        <function-ref name="done" scoped="" ref="0x2b4221d154b8"/>
        <function-ref name="standby" scoped="" ref="0x2b4221d15640"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4221d157c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b4221ce92a8" loc="40:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b4221ce92a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221ce95f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221ce9780"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221ce9908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b4221d143f0" loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b4221d143f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221d14740"/>
        <function-ref name="header" scoped="" ref="0x2b4221d148c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b4221ce9b90" loc="41:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b4221ce9b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221d16020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b4221d15a10" loc="47:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b4221d15a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221d15d60"/>
        <function-ref name="ready" scoped="" ref="0x2b4221d14020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221d141a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b4221d16268" loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b4221d16268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b4221d165b8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4221d16740"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4221d168c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b42228c9870" loc="43:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b42228c9870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b42228c9bc0"/>
        <function-ref name="stopDone" scoped="" ref="0x2b42228c9d48"/>
        <function-ref name="start" scoped="" ref="0x2b42228c8020"/>
        <function-ref name="stop" scoped="" ref="0x2b42228c81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b42228c8430" loc="44:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b42228c8430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b42228c8780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x2b42228c5450" loc="52:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b42228c5450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b42228c57a0"/>
        <function-ref name="turnOn" scoped="" ref="0x2b42228c5928"/>
        <function-ref name="setChannel" scoped="" ref="0x2b42228c5ab0"/>
        <function-ref name="done" scoped="" ref="0x2b42228c5c38"/>
        <function-ref name="standby" scoped="" ref="0x2b42228c5dc0"/>
        <function-ref name="getChannel" scoped="" ref="0x2b42228c4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x2b42228c8a08" loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x2b42228c8a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b42228c8d58"/>
        <function-ref name="cancel" scoped="" ref="0x2b42228c6020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b42228c61a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x2b42228c24f0" loc="189:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x2b42228c24f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b42228c2840"/>
        <function-ref name="runTask" scoped="" ref="0x2b42228c29c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x2b42228c3578" loc="55:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b42228c3578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b42228c38c8"/>
        <function-ref name="header" scoped="" ref="0x2b42228c3a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x2b42228c2c90" loc="144:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x2b42228c2c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b42228c1020"/>
        <function-ref name="runTask" scoped="" ref="0x2b42228c11a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b42228c6430" loc="47:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b42228c6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b42228c6780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x2b42228c3d18" loc="322:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x2b42228c3d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b42228c20a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b42228c2228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x2b42228c4c98" loc="54:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b42228c4c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b42228c3020"/>
        <function-ref name="ready" scoped="" ref="0x2b42228c31a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b42228c3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x2b42228c69c8" loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x2b42228c69c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x2b42228c6d18"/>
        <function-ref name="setChannel" scoped="" ref="0x2b42228c5020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b42228c51a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b42228c4268" loc="53:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RF230RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b42228c4268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b42228c45b8"/>
        <function-ref name="suspend" scoped="" ref="0x2b42228c4740"/>
        <function-ref name="resume" scoped="" ref="0x2b42228c48c8"/>
        <function-ref name="run" scoped="" ref="0x2b42228c4a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4221d4a7e0" loc="44:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4221d4a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221d4ab30"/>
        <function-ref name="ready" scoped="" ref="0x2b4221d4acb8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221d4ae40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4221d49120" loc="45:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4221d49120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221d49470"/>
        <function-ref name="header" scoped="" ref="0x2b4221d495f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b4221d49840" loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b4221d49840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b4221d49b90"/>
        <function-ref name="wait" scoped="" ref="0x2b4221d49d18"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221d48020"/>
        <function-ref name="isFree" scoped="" ref="0x2b4221d481a8"/>
        <function-ref name="getNow" scoped="" ref="0x2b4221d48330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b4221d485b8" loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b4221d485b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b4221d48908"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b4221d48a90"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b4221d48c18"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b4221d48da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b4221d4a020" loc="40:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b4221d4a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221d4a370"/>
        <function-ref name="header" scoped="" ref="0x2b4221d4a4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b4221d4b640" loc="39:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b4221d4b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221d4b990"/>
        <function-ref name="ready" scoped="" ref="0x2b4221d4bb18"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221d4bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4222945d38" loc="47:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4222945d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b42229440d8"/>
        <function-ref name="ready" scoped="" ref="0x2b4222944260"/>
        <function-ref name="sendDone" scoped="" ref="0x2b42229443e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4222944670" loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4222944670"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b42229449c0"/>
        <function-ref name="header" scoped="" ref="0x2b4222944b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b4222944d90" loc="49:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b4222944d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b4222943170"/>
        <function-ref name="wait" scoped="" ref="0x2b42229432f8"/>
        <function-ref name="cancel" scoped="" ref="0x2b4222943480"/>
        <function-ref name="isFree" scoped="" ref="0x2b4222943608"/>
        <function-ref name="getNow" scoped="" ref="0x2b4222943790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x2b42229439d8" loc="50:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b42229439d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b4222943d28"/>
        <function-ref name="rand32" scoped="" ref="0x2b4222942020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b42229422a8" loc="51:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b42229422a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x2b42229425f8"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x2b4222942780"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x2b4222942908"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x2b4222942a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b4222945578" loc="43:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b4222945578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b42229458c8"/>
        <function-ref name="header" scoped="" ref="0x2b4222945a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b4222948b58" loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b4222948b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4222945020"/>
        <function-ref name="ready" scoped="" ref="0x2b42229451a8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4222945330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x2b4222942d58" loc="78:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RF230RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x2b4222942d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b42229410d8"/>
        <function-ref name="runTask" scoped="" ref="0x2b4222941260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b4221d31b98" loc="46:/home/tinyos/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b4221d31b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b4221d30020"/>
        <function-ref name="rand32" scoped="" ref="0x2b4221d301a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b4221d2fb10" loc="45:/home/tinyos/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b4221d2fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4221d316f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4221d35e18" loc="44:/home/tinyos/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4221d35e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4221d321a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x2b4221d59a08" loc="48:/home/tinyos/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x2b4221d59a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x2b4221d59d58"/>
        <function-ref name="rand32" scoped="" ref="0x2b4221d57020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x2b4221d5a9f0" loc="47:/home/tinyos/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x2b4221d5a9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4221d59560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4221d5a198" loc="46:/home/tinyos/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4221d5a198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4221d5a4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4221d787b8" loc="49:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4221d787b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221d78b08"/>
        <function-ref name="ready" scoped="" ref="0x2b4221d78c90"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221d78e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4221d76120" loc="50:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4221d76120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221d76470"/>
        <function-ref name="header" scoped="" ref="0x2b4221d765f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b4221d76840" loc="51:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b4221d76840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b4221d76b90"/>
        <function-ref name="wait" scoped="" ref="0x2b4221d76d18"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221d75020"/>
        <function-ref name="isFree" scoped="" ref="0x2b4221d751a8"/>
        <function-ref name="getNow" scoped="" ref="0x2b4221d75330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x2b4221d74740" loc="54:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x2b4221d74740"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221d74a90"/>
        <function-ref name="get" scoped="" ref="0x2b4221d74c18"/>
        <function-ref name="setValue" scoped="" ref="0x2b4221d74da0"/>
        <function-ref name="set" scoped="" ref="0x2b4221da3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b4221d755b8" loc="53:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b4221d755b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x2b4221d75908"/>
        <function-ref name="createAckPacket" scoped="" ref="0x2b4221d75a90"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x2b4221d75c18"/>
        <function-ref name="isAckPacket" scoped="" ref="0x2b4221d75da0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x2b4221d74020"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x2b4221d741a8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x2b4221d74330"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x2b4221d744b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b4221d71718" loc="43:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b4221d71718"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221d71a68"/>
        <function-ref name="header" scoped="" ref="0x2b4221d71bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b4221d72e38" loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b4221d72e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221d711c0"/>
        <function-ref name="ready" scoped="" ref="0x2b4221d71348"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221d714d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x2b4221d71e38" loc="44:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RF230RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x2b4221d71e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x2b4221d781c0"/>
        <function-ref name="noAck" scoped="" ref="0x2b4221d78348"/>
        <function-ref name="wasAcked" scoped="" ref="0x2b4221d784d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b4221d8c338" loc="39:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b4221d8c338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4221d8c688"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4221d8c810"/>
        <function-ref name="start" scoped="" ref="0x2b4221d8c998"/>
        <function-ref name="stop" scoped="" ref="0x2b4221d8cb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b4221db8b10" loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b4221db8b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b4221db8e60"/>
        <function-ref name="request" scoped="" ref="0x2b4221db7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4221db3020" loc="59:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4221db3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221db3370"/>
        <function-ref name="ready" scoped="" ref="0x2b4221db34f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221db3680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4221db3908" loc="60:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4221db3908"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221db3c58"/>
        <function-ref name="header" scoped="" ref="0x2b4221db3de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b4221dbbbe0" loc="43:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b4221dbbbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b4221db9020"/>
        <function-ref name="turnOn" scoped="" ref="0x2b4221db91a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4221db9330"/>
        <function-ref name="done" scoped="" ref="0x2b4221db94b8"/>
        <function-ref name="standby" scoped="" ref="0x2b4221db9640"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4221db97c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4221db7268" loc="47:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4221db7268"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221db75b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221db7740"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221db78c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221db7a50"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4221db7bd8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4221db7d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2b4221db4020" loc="58:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2b4221db4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b4221db4470"/>
        <function-ref name="turnOn" scoped="" ref="0x2b4221db45f8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4221db4780"/>
        <function-ref name="done" scoped="" ref="0x2b4221db4908"/>
        <function-ref name="standby" scoped="" ref="0x2b4221db4a90"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4221db4c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2b4221db6020" loc="49:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b4221db6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b4221db6370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b4221db83f0" loc="45:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b4221db83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221db8740"/>
        <function-ref name="header" scoped="" ref="0x2b4221db88c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2b4221db5a08" loc="56:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2b4221db5a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221db5d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b4221db6658" loc="54:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b4221db6658"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4221db69a8"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4221db6b30"/>
        <function-ref name="start" scoped="" ref="0x2b4221db6cb8"/>
        <function-ref name="stop" scoped="" ref="0x2b4221db6e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4221db1800" loc="62:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4221db1800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221db1b50"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221db1cd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221db1e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221db0020"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4221db01a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4221db0330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b4221dbb648" loc="41:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b4221dbb648"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221dbb998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b4221db05b8" loc="64:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b4221db05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b4221db0908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2b4221db5120" loc="55:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2b4221db5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221db5470"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221db55f8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221db5780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b4221db9a10" loc="44:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b4221db9a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221db9d60"/>
        <function-ref name="ready" scoped="" ref="0x2b4221db8020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221db81a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2b4221db10a0" loc="61:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2b4221db10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b4221db13f0"/>
        <function-ref name="request" scoped="" ref="0x2b4221db1578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b4221d8cd68" loc="40:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b4221d8cd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221dbb0f0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221dbb278"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221dbb400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2b4221fb98c8" loc="50:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2b4221fb98c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221fb9c18"/>
        <function-ref name="get" scoped="" ref="0x2b4221fb9da0"/>
        <function-ref name="setValue" scoped="" ref="0x2b4221fb8020"/>
        <function-ref name="set" scoped="" ref="0x2b4221fb81a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4221fbd9f8" loc="43:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4221fbd9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221fbdd48"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221fbb020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221fbb1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221fbb330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4221fbb4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4221fbb640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4221fba9f0" loc="49:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4221fba9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221fbad40"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221fb9020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221fb91a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221fb9330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4221fb94b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4221fb9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b4221fbf020" loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4221fbf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4221724708"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4221fbe478"/>
        <function-ref name="clear" scoped="" ref="0x2b4221fbeb58"/>
        <function-ref name="isValid" scoped="" ref="0x2b4221fbfd70"/>
        <function-ref name="set" scoped="" ref="0x2b4221fbd278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b4221fbba30" loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4221fbba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4221724708"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4221fba5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b4221fc3270" loc="41:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4221fc3270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4221fc2700"/>
        <function-ref name="clear" scoped="" ref="0x2b4221fc2de0"/>
        <function-ref name="isValid" scoped="" ref="0x2b4221fc2020"/>
        <function-ref name="set" scoped="" ref="0x2b4221fc14f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x2b4222951e60" loc="49:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x2b4222951e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b42229501e8"/>
        <function-ref name="get" scoped="" ref="0x2b4222950370"/>
        <function-ref name="setValue" scoped="" ref="0x2b42229504f8"/>
        <function-ref name="set" scoped="" ref="0x2b4222950680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4222951080" loc="44:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4222951080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b42229513d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4222951558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b42229516e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4222951868"/>
        <function-ref name="headerLength" scoped="" ref="0x2b42229519f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4222951b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b422294eac0" loc="54:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b422294eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b422294ee10"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b422294d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b422294d1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b422294d330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b422294d4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b422294d640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x2b4222955660" loc="43:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x2b4222955660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4221724708"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4222954ad0"/>
        <function-ref name="clear" scoped="" ref="0x2b42229531f0"/>
        <function-ref name="isValid" scoped="" ref="0x2b42229543f0"/>
        <function-ref name="set" scoped="" ref="0x2b42229538d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x2b4222950a10" loc="51:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4222950a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4221724708"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b422294f5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x2b422294faf8" loc="52:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x2b422294faf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b422294e6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x2b4222959958" loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RF230RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x2b4222959958"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4222958e10"/>
        <function-ref name="clear" scoped="" ref="0x2b4222956558"/>
        <function-ref name="isValid" scoped="" ref="0x2b4222958730"/>
        <function-ref name="set" scoped="" ref="0x2b4222956c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b4221df2a30" loc="20:/home/tinyos/tinyos-main/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b4221df2a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4221def5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b4221e1c1c8" loc="46:/home/tinyos/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b4221e1c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4221e195f0"/>
        <function-ref name="fired" scoped="" ref="0x2b4221e1baf0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4221e1a8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4221e1a470"/>
        <function-ref name="getdt" scoped="" ref="0x2b4221e17020"/>
        <function-ref name="gett0" scoped="" ref="0x2b4221e19a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4221e1a020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4221e1cd10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4221e19020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4221e1b200"/>
        <function-ref name="stop" scoped="" ref="0x2b4221e1b6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b4221e175e0" loc="47:/home/tinyos/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b4221e175e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4221e16190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4221e1e3e0" loc="45:/home/tinyos/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4221e1e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4221e1e730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x2b4221e077b8" loc="29:/home/tinyos/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x2b4221e077b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4221e0c578"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4221e06020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4221e0ca00"/>
        <function-ref name="overflow" scoped="" ref="0x2b4221e064a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4221e15c20" loc="27:/home/tinyos/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4221e15c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4221e12020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x2b4221e12648" loc="28:/home/tinyos/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x2b4221e12648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4221e0fcc0"/>
        <function-ref name="fired" scoped="" ref="0x2b4221e10d50"/>
        <function-ref name="startAt" scoped="" ref="0x2b4221e0f6b8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4221e0f230"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4221e0e190"/>
        <function-ref name="start" scoped="" ref="0x2b4221e103f0"/>
        <function-ref name="stop" scoped="" ref="0x2b4221e108c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4221f1a7c8" loc="61:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4221f1a7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4221f17020"/>
        <function-ref name="fired" scoped="" ref="0x2b4221f18020"/>
        <function-ref name="startAt" scoped="" ref="0x2b4221f18930"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4221f184a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4221f174a8"/>
        <function-ref name="start" scoped="" ref="0x2b4221f19578"/>
        <function-ref name="stop" scoped="" ref="0x2b4221f19a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4221f1a020" loc="60:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4221f1a020"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b4221409388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b4221409388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4221f1a370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b4221f17a90" loc="62:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4221f17a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4221f15828"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4221f14190"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4221f15cb0"/>
        <function-ref name="overflow" scoped="" ref="0x2b4221f14618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x2b4222981e70" loc="66:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b4222981e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b422297f1e8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b422297f370"/>
        <function-ref name="getControlA" scoped="" ref="0x2b422297f4f8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b422297f680"/>
        <function-ref name="setControlB" scoped="" ref="0x2b422297f808"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b422297f990"/>
        <function-ref name="getControlB" scoped="" ref="0x2b422297fb18"/>
        <function-ref name="setControlA" scoped="" ref="0x2b422297fca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b422298cb40" loc="61:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b422298cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4222988238"/>
        <function-ref name="fired" scoped="" ref="0x2b422298a2b0"/>
        <function-ref name="startAt" scoped="" ref="0x2b422298abc0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b422298a738"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b42229886c0"/>
        <function-ref name="start" scoped="" ref="0x2b422298b8f8"/>
        <function-ref name="stop" scoped="" ref="0x2b422298bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b422298c398" loc="60:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b422298c398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b422298c6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b4222988ca8" loc="62:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4222988ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4222987a28"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b42229864a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4222986020"/>
        <function-ref name="overflow" scoped="" ref="0x2b4222986930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x2b422297b200" loc="68:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b422297b200"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b422297b550"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b422297b6d8"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b422297b860"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b422297b9e8"/>
        <function-ref name="countBusy" scoped="" ref="0x2b422297bb70"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b422297bcf8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b422297be80"/>
        <function-ref name="setAssr" scoped="" ref="0x2b42229da030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x2b422297e060" loc="67:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b422297e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b422297c930"/>
        <function-ref name="fired" scoped="" ref="0x2b422297d598"/>
        <function-ref name="get" scoped="" ref="0x2b422297ebe0"/>
        <function-ref name="reset" scoped="" ref="0x2b422297da20"/>
        <function-ref name="isOn" scoped="" ref="0x2b422297cdb8"/>
        <function-ref name="set" scoped="" ref="0x2b422297d0c0"/>
        <function-ref name="start" scoped="" ref="0x2b422297c020"/>
        <function-ref name="stop" scoped="" ref="0x2b422297c4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b4222985020" loc="65:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b4222985020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b42229810f8"/>
        <function-ref name="test" scoped="" ref="0x2b42229827a8"/>
        <function-ref name="get" scoped="" ref="0x2b4222985ba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b4222981580"/>
        <function-ref name="getScale" scoped="" ref="0x2b4222981a58"/>
        <function-ref name="reset" scoped="" ref="0x2b42229839e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b4222983560"/>
        <function-ref name="isOn" scoped="" ref="0x2b4222982c30"/>
        <function-ref name="set" scoped="" ref="0x2b4222983088"/>
        <function-ref name="start" scoped="" ref="0x2b4222983e70"/>
        <function-ref name="stop" scoped="" ref="0x2b4222982320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b4221eb43c0" loc="82:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b4221eb43c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b4221eb4710"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b4221eb4898"/>
        <function-ref name="getControlA" scoped="" ref="0x2b4221eb4a20"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b4221eb4ba8"/>
        <function-ref name="setControlB" scoped="" ref="0x2b4221eb4d30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b4221eb3020"/>
        <function-ref name="getControlB" scoped="" ref="0x2b4221eb31a8"/>
        <function-ref name="setControlA" scoped="" ref="0x2b4221eb3330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b4221eaf9e8" loc="84:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b4221eaf9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b4221eafd38"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b4221eae020"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b4221eae1a8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b4221eae330"/>
        <function-ref name="countBusy" scoped="" ref="0x2b4221eae4b8"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b4221eae640"/>
        <function-ref name="getAssr" scoped="" ref="0x2b4221eae7c8"/>
        <function-ref name="setAssr" scoped="" ref="0x2b4221eae950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b4221eb37f8" loc="83:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b4221eb37f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b4221eaf020"/>
        <function-ref name="fired" scoped="" ref="0x2b4221eb2d08"/>
        <function-ref name="get" scoped="" ref="0x2b4221eb23a8"/>
        <function-ref name="reset" scoped="" ref="0x2b4221eb01f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b4221eaf4a8"/>
        <function-ref name="set" scoped="" ref="0x2b4221eb2830"/>
        <function-ref name="start" scoped="" ref="0x2b4221eb0680"/>
        <function-ref name="stop" scoped="" ref="0x2b4221eb0b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b4221e85288" loc="81:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b4221e85288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b4221eb54a8"/>
        <function-ref name="test" scoped="" ref="0x2b4221eb6a40"/>
        <function-ref name="get" scoped="" ref="0x2b4221e85e08"/>
        <function-ref name="setScale" scoped="" ref="0x2b4221eb5930"/>
        <function-ref name="getScale" scoped="" ref="0x2b4221eb5e08"/>
        <function-ref name="reset" scoped="" ref="0x2b4221eb8c70"/>
        <function-ref name="overflow" scoped="" ref="0x2b4221eb87e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b4221eb5020"/>
        <function-ref name="set" scoped="" ref="0x2b4221eb8310"/>
        <function-ref name="start" scoped="" ref="0x2b4221eb6130"/>
        <function-ref name="stop" scoped="" ref="0x2b4221eb65b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b4221ea4020" loc="83:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b4221ea4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b4221ea4370"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b4221ea44f8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b4221ea4680"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b4221ea4808"/>
        <function-ref name="setControlB" scoped="" ref="0x2b4221ea4990"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b4221ea4b18"/>
        <function-ref name="getControlB" scoped="" ref="0x2b4221ea4ca0"/>
        <function-ref name="setControlA" scoped="" ref="0x2b4221ea4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x2b4221ea0578" loc="85:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x2b4221ea0578"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x2b4221ea08c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x2b4221ea0c78" loc="86:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x2b4221ea0c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x2b4221ed2020"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x2b4221ed21a8"/>
        <function-ref name="controlABusy" scoped="" ref="0x2b4221ed2330"/>
        <function-ref name="controlBBusy" scoped="" ref="0x2b4221ed24b8"/>
        <function-ref name="countBusy" scoped="" ref="0x2b4221ed2640"/>
        <function-ref name="compareABusy" scoped="" ref="0x2b4221ed27c8"/>
        <function-ref name="getAssr" scoped="" ref="0x2b4221ed2950"/>
        <function-ref name="setAssr" scoped="" ref="0x2b4221ed2ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b4221ea3340" loc="84:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b4221ea3340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b4221ea1c20"/>
        <function-ref name="fired" scoped="" ref="0x2b4221ea2980"/>
        <function-ref name="get" scoped="" ref="0x2b4221ea2020"/>
        <function-ref name="reset" scoped="" ref="0x2b4221ea2e08"/>
        <function-ref name="isOn" scoped="" ref="0x2b4221ea00f8"/>
        <function-ref name="set" scoped="" ref="0x2b4221ea24a8"/>
        <function-ref name="start" scoped="" ref="0x2b4221ea1310"/>
        <function-ref name="stop" scoped="" ref="0x2b4221ea1798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b4221eade08" loc="82:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b4221eade08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b4221ea60f8"/>
        <function-ref name="test" scoped="" ref="0x2b4221ea7798"/>
        <function-ref name="get" scoped="" ref="0x2b4221eaaa18"/>
        <function-ref name="setScale" scoped="" ref="0x2b4221ea6580"/>
        <function-ref name="getScale" scoped="" ref="0x2b4221ea6a58"/>
        <function-ref name="reset" scoped="" ref="0x2b4221ea8980"/>
        <function-ref name="overflow" scoped="" ref="0x2b4221ea84f8"/>
        <function-ref name="isOn" scoped="" ref="0x2b4221ea7c20"/>
        <function-ref name="set" scoped="" ref="0x2b4221ea8020"/>
        <function-ref name="start" scoped="" ref="0x2b4221ea8e08"/>
        <function-ref name="stop" scoped="" ref="0x2b4221ea7310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x2b4221f51cf0" loc="74:/home/tinyos/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x2b4221f51cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4221f4f0a0"/>
        <function-ref name="runTask" scoped="" ref="0x2b4221f4f228"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x2b4221f54c70" loc="49:/home/tinyos/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4221f54c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4221f51410"/>
        <function-ref name="fired" scoped="" ref="0x2b4221f524a8"/>
        <function-ref name="startAt" scoped="" ref="0x2b4221f52db8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4221f52930"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4221f51898"/>
        <function-ref name="start" scoped="" ref="0x2b4221f539f0"/>
        <function-ref name="stop" scoped="" ref="0x2b4221f52020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b4221f59ab0" loc="48:/home/tinyos/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b4221f59ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4221f56d60"/>
        <function-ref name="fired" scoped="" ref="0x2b4221f57470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4221f561c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4221f57d10"/>
        <function-ref name="getdt" scoped="" ref="0x2b4221f54648"/>
        <function-ref name="gett0" scoped="" ref="0x2b4221f541f8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4221f578c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4221f58620"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4221f56790"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4221f58ac0"/>
        <function-ref name="stop" scoped="" ref="0x2b4221f57020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x2b4221fa9930" loc="71:/home/tinyos/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x2b4221fa9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4221fa9c80"/>
        <function-ref name="runTask" scoped="" ref="0x2b4221fa9e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x2b4221f76858" loc="49:/home/tinyos/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x2b4221f76858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4221fabbc0"/>
        <function-ref name="fired" scoped="" ref="0x2b4221fac1c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4221fab020"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4221faca60"/>
        <function-ref name="getdt" scoped="" ref="0x2b4221fa94d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b4221fa9088"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4221fac610"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4221fad3d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4221fab5f0"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4221fad878"/>
        <function-ref name="stop" scoped="" ref="0x2b4221fadd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b4221f7c5e0" loc="48:/home/tinyos/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b4221f7c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4221f78988"/>
        <function-ref name="fired" scoped="" ref="0x2b4221f7a020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4221f7ad70"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4221f7a900"/>
        <function-ref name="getdt" scoped="" ref="0x2b4221f762d8"/>
        <function-ref name="gett0" scoped="" ref="0x2b4221f78df8"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4221f7a490"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4221f7b198"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4221f78398"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4221f7b658"/>
        <function-ref name="stop" scoped="" ref="0x2b4221f7bb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b4221fa5128" loc="48:/home/tinyos/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b4221fa5128"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4221fa5ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b4221f9c330" loc="49:/home/tinyos/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4221f9c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4221f9b0c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4221f9b9d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4221f9b548"/>
        <function-ref name="overflow" scoped="" ref="0x2b4221f9be58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x2b4221f931c8" loc="49:/home/tinyos/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x2b4221f931c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4221fc75f0"/>
        <function-ref name="fired" scoped="" ref="0x2b4221f92af0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b4221fc98c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b4221fc9470"/>
        <function-ref name="getdt" scoped="" ref="0x2b4221fc6020"/>
        <function-ref name="gett0" scoped="" ref="0x2b4221fc7a40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4221fc9020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b4221f93d10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b4221fc7020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b4221f92200"/>
        <function-ref name="stop" scoped="" ref="0x2b4221f926a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4221fcd0e0" loc="43:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4221fcd0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221fcd430"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221fcd5b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221fcd740"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221fcd8c8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4221fcda50"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4221fcdbd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4221fcc020" loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4221fcc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221fcc370"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221fcc4f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221fcc680"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221fcc808"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4221fcc990"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4221fccb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x2b4221fb3660" loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RF230RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x2b4221fb3660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221fb39d0"/>
        <function-ref name="get" scoped="" ref="0x2b4221fb3b58"/>
        <function-ref name="setValue" scoped="" ref="0x2b4221fb3ce0"/>
        <function-ref name="set" scoped="" ref="0x2b4221fb3e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x2b4221fcab78" loc="39:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x2b4221fcab78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4222001020"/>
        <function-ref name="stopDone" scoped="" ref="0x2b42220011a8"/>
        <function-ref name="start" scoped="" ref="0x2b4222001330"/>
        <function-ref name="stop" scoped="" ref="0x2b42220014b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b4221ffe3f0" loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b4221ffe3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b4221ffe740"/>
        <function-ref name="request" scoped="" ref="0x2b4221ffe8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x2b4221ff98c8" loc="59:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x2b4221ff98c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221ff9c18"/>
        <function-ref name="ready" scoped="" ref="0x2b4221ff9da0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221ff8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x2b4221ff82a8" loc="60:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x2b4221ff82a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221ff85f8"/>
        <function-ref name="header" scoped="" ref="0x2b4221ff8780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b42220005b8" loc="43:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b42220005b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b4222000908"/>
        <function-ref name="turnOn" scoped="" ref="0x2b4222000a90"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4222000c18"/>
        <function-ref name="done" scoped="" ref="0x2b4222000da0"/>
        <function-ref name="standby" scoped="" ref="0x2b4221fff020"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4221fff1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4221ffeb10" loc="47:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4221ffeb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221ffee60"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221ffd020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221ffd1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221ffd330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4221ffd4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4221ffd640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x2b4221ffba08" loc="58:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x2b4221ffba08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b4221ffbe58"/>
        <function-ref name="turnOn" scoped="" ref="0x2b4221ff9020"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4221ff91a8"/>
        <function-ref name="done" scoped="" ref="0x2b4221ff9330"/>
        <function-ref name="standby" scoped="" ref="0x2b4221ff94b8"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4221ff9640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x2b4221ffd8c8" loc="49:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x2b4221ffd8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b4221ffdc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b4221fffc98" loc="45:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b4221fffc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221ffe020"/>
        <function-ref name="header" scoped="" ref="0x2b4221ffe1a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x2b4221ffb430" loc="56:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x2b4221ffb430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221ffb780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x2b4221ffc020" loc="54:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x2b4221ffc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x2b4221ffc370"/>
        <function-ref name="stopDone" scoped="" ref="0x2b4221ffc4f8"/>
        <function-ref name="start" scoped="" ref="0x2b4221ffc680"/>
        <function-ref name="stop" scoped="" ref="0x2b4221ffc808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x2b4221ff72a8" loc="62:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x2b4221ff72a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221ff75f8"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221ff7780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221ff7908"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221ff7a90"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4221ff7c18"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4221ff7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x2b4222000020" loc="41:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x2b4222000020"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4222000370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b4221ff6060" loc="64:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b4221ff6060"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x2b4221ff63b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x2b4221ffca90" loc="55:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x2b4221ffca90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221ffcde0"/>
        <function-ref name="cancel" scoped="" ref="0x2b4221ffb020"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221ffb1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b4221fff3f0" loc="44:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b4221fff3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221fff740"/>
        <function-ref name="ready" scoped="" ref="0x2b4221fff8c8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221fffa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x2b4221ff8a08" loc="61:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x2b4221ff8a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b4221ff8d58"/>
        <function-ref name="request" scoped="" ref="0x2b4221ff7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x2b4222001700" loc="40:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RF230RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x2b4222001700"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4222001a50"/>
        <function-ref name="cancel" scoped="" ref="0x2b4222001bd8"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4222001d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b4221fee448" loc="45:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b4221fee448"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b4221fee798"/>
        <function-ref name="request" scoped="" ref="0x2b4221fee920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b4221fe90c8" loc="49:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b4221fe90c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221fe86a0"/>
        <function-ref name="get" scoped="" ref="0x2b4221fe8190"/>
        <function-ref name="isSet" scoped="" ref="0x2b4221fe9c48"/>
        <function-ref name="set" scoped="" ref="0x2b4221fe8bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2b422200e020" loc="64:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2b422200e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b422200e370"/>
        <function-ref name="get" scoped="" ref="0x2b422200e4f8"/>
        <function-ref name="setValue" scoped="" ref="0x2b422200e680"/>
        <function-ref name="set" scoped="" ref="0x2b422200e808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b4222013730" loc="61:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b4222013730"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4221724708"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4222012c58"/>
        <function-ref name="clear" scoped="" ref="0x2b4222010380"/>
        <function-ref name="isValid" scoped="" ref="0x2b4222012578"/>
        <function-ref name="set" scoped="" ref="0x2b4222010a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b4221ff23e8" loc="42:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b4221ff23e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b4221ff2738"/>
        <function-ref name="turnOn" scoped="" ref="0x2b4221ff28c0"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4221ff2a48"/>
        <function-ref name="done" scoped="" ref="0x2b4221ff2bd0"/>
        <function-ref name="standby" scoped="" ref="0x2b4221ff2d58"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4221fef020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b422200d768" loc="66:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b422200d768"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b422200dab8"/>
        <function-ref name="wait" scoped="" ref="0x2b422200dc40"/>
        <function-ref name="cancel" scoped="" ref="0x2b422200ddc8"/>
        <function-ref name="isFree" scoped="" ref="0x2b422200c020"/>
        <function-ref name="getNow" scoped="" ref="0x2b422200c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b4221fedcd0" loc="48:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b4221fedcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221fea388"/>
        <function-ref name="get" scoped="" ref="0x2b4221fece00"/>
        <function-ref name="isSet" scoped="" ref="0x2b4221fec8f0"/>
        <function-ref name="set" scoped="" ref="0x2b4221fea898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b4221feebd8" loc="46:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b4221feebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4221fed020"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b4221fed1a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4221fed330"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b4221fed4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4221fed640"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4221fed7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b42220145c8" loc="60:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b42220145c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4222014a18"/>
        <function-ref name="headerLength" scoped="" ref="0x2b4222014ba0"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4222014d28"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b4222013020"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b42220131a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b4221fefbf0" loc="44:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b4221fefbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4221fee020"/>
        <function-ref name="header" scoped="" ref="0x2b4221fee1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b42220184b8" loc="55:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b42220184b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4221724708"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b4221724b08"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4222015b18"/>
        <function-ref name="fired" scoped="" ref="0x2b4222017b90"/>
        <function-ref name="startAt" scoped="" ref="0x2b4222015510"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4222015088"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4222014020"/>
        <function-ref name="start" scoped="" ref="0x2b4222017230"/>
        <function-ref name="stop" scoped="" ref="0x2b4222017708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b4221fe6458" loc="50:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b4221fe6458"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b422201fa40"/>
        <function-ref name="get" scoped="" ref="0x2b422201f530"/>
        <function-ref name="isSet" scoped="" ref="0x2b422201f020"/>
        <function-ref name="set" scoped="" ref="0x2b422201d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b4222019220" loc="54:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4222019220"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4221724708"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4222019da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b4221fef2c8" loc="43:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b4221fef2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4221fef618"/>
        <function-ref name="ready" scoped="" ref="0x2b4221fef7a0"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4221fef928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b422201d860" loc="51:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b422201d860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b422201ce30"/>
        <function-ref name="get" scoped="" ref="0x2b422201c920"/>
        <function-ref name="isSet" scoped="" ref="0x2b422201c410"/>
        <function-ref name="set" scoped="" ref="0x2b422201a388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2b422200eb78" loc="65:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b422200eb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b422200d020"/>
        <function-ref name="get" scoped="" ref="0x2b422200d1a8"/>
        <function-ref name="setValue" scoped="" ref="0x2b422200d330"/>
        <function-ref name="set" scoped="" ref="0x2b422200d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2b422200f378" loc="63:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b422200f378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b422200f6c8"/>
        <function-ref name="get" scoped="" ref="0x2b422200f850"/>
        <function-ref name="setValue" scoped="" ref="0x2b422200f9d8"/>
        <function-ref name="set" scoped="" ref="0x2b422200fb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b422201a9d0" loc="52:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerC.nc">
      <component-ref qname="RF230DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b422201a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b422201ad20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x2b422203c2c0" loc="52:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x2b422203c2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x2b422203c610"/>
        <function-ref name="request" scoped="" ref="0x2b422203c798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x2b4222057c60" loc="74:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b4222057c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b4221496788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b42220599f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x2b4222037020" loc="56:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x2b4222037020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4222035608"/>
        <function-ref name="get" scoped="" ref="0x2b42220350f8"/>
        <function-ref name="isSet" scoped="" ref="0x2b4222037ba0"/>
        <function-ref name="set" scoped="" ref="0x2b4222035b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x2b4222055988" loc="80:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x2b4222055988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4222055cd8"/>
        <function-ref name="get" scoped="" ref="0x2b4222055e60"/>
        <function-ref name="setValue" scoped="" ref="0x2b4222054020"/>
        <function-ref name="set" scoped="" ref="0x2b42220541a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x2b4222005bf0" loc="47:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x2b4222005bf0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b42214096f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b42214096f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4222004020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x2b42220522b0" loc="83:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x2b42220522b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4221724708"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x2b4222051910"/>
        <function-ref name="clear" scoped="" ref="0x2b4222050020"/>
        <function-ref name="isValid" scoped="" ref="0x2b4222051230"/>
        <function-ref name="set" scoped="" ref="0x2b4222050700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x2b422202adf0" loc="70:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b422202adf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222029170"/>
        <function-ref name="isInput" scoped="" ref="0x2b42220292f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222029480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4222029608"/>
        <function-ref name="get" scoped="" ref="0x2b4222029790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222029918"/>
        <function-ref name="set" scoped="" ref="0x2b4222029aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b4222029c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x2b422204eab8" loc="86:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x2b422204eab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x2b422204ee08"/>
        <function-ref name="wait" scoped="" ref="0x2b422204d020"/>
        <function-ref name="cancel" scoped="" ref="0x2b422204d1a8"/>
        <function-ref name="isFree" scoped="" ref="0x2b422204d330"/>
        <function-ref name="getNow" scoped="" ref="0x2b422204d4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x2b42220042d0" loc="49:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x2b42220042d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x2b4222004620"/>
        <function-ref name="turnOn" scoped="" ref="0x2b42220047a8"/>
        <function-ref name="setChannel" scoped="" ref="0x2b4222004930"/>
        <function-ref name="done" scoped="" ref="0x2b4222004ab8"/>
        <function-ref name="standby" scoped="" ref="0x2b4222004c40"/>
        <function-ref name="getChannel" scoped="" ref="0x2b4222004dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x2b4222058020" loc="75:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b4222058020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4221724708"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4222058ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x2b422203bb48" loc="55:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x2b422203bb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4222038190"/>
        <function-ref name="get" scoped="" ref="0x2b422203ac38"/>
        <function-ref name="isSet" scoped="" ref="0x2b422203a728"/>
        <function-ref name="set" scoped="" ref="0x2b42220386a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x2b422203ca50" loc="53:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x2b422203ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b422203cda0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b422203b020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b422203b1a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b422203b330"/>
        <function-ref name="headerLength" scoped="" ref="0x2b422203b4b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b422203b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x2b4222025c00" loc="69:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x2b4222025c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422202a020"/>
        <function-ref name="isInput" scoped="" ref="0x2b422202a1a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b422202a330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422202a4b8"/>
        <function-ref name="get" scoped="" ref="0x2b422202a640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422202a7c8"/>
        <function-ref name="set" scoped="" ref="0x2b422202a950"/>
        <function-ref name="clr" scoped="" ref="0x2b422202aad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x2b4222056100" loc="77:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x2b4222056100"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b4222056450"/>
        <function-ref name="headerLength" scoped="" ref="0x2b42220565d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x2b4222056760"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x2b42220568e8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x2b4222056a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x2b42220039e8" loc="51:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x2b42220039e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b4222003d38"/>
        <function-ref name="header" scoped="" ref="0x2b422203c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="releaseSpi" ref="0x2b42220efd98" loc="847:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="releaseSpi" scoped="" ref="0x2b42220efd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b42220ee170"/>
        <function-ref name="runTask" scoped="" ref="0x2b42220ee2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x2b42220343b0" loc="57:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x2b42220343b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4222033a40"/>
        <function-ref name="get" scoped="" ref="0x2b4222033530"/>
        <function-ref name="isSet" scoped="" ref="0x2b4222033020"/>
        <function-ref name="set" scoped="" ref="0x2b4222031020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b4222005138" loc="46:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b4222005138"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x2b42214096f0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x2b42214096f0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4222005488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x2b422202c4f8" loc="65:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b422202c4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b422202c848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b422202c9d0"/>
        <function-ref name="request" scoped="" ref="0x2b422202cb58"/>
        <function-ref name="granted" scoped="" ref="0x2b422202cce0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b422202ce68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x2b422202d130" loc="64:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x2b422202d130"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422202d580"/>
        <function-ref name="isInput" scoped="" ref="0x2b422202d708"/>
        <function-ref name="toggle" scoped="" ref="0x2b422202d890"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422202da18"/>
        <function-ref name="get" scoped="" ref="0x2b422202dba0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422202dd28"/>
        <function-ref name="set" scoped="" ref="0x2b422202c020"/>
        <function-ref name="clr" scoped="" ref="0x2b422202c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x2b4222031860" loc="58:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x2b4222031860"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4222030e30"/>
        <function-ref name="get" scoped="" ref="0x2b4222030920"/>
        <function-ref name="isSet" scoped="" ref="0x2b4222030410"/>
        <function-ref name="set" scoped="" ref="0x2b422202e388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x2b42220030c0" loc="50:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x2b42220030c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4222003410"/>
        <function-ref name="ready" scoped="" ref="0x2b4222003598"/>
        <function-ref name="sendDone" scoped="" ref="0x2b4222003720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x2b42220205e8" loc="72:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b42220205e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b4222020938"/>
        <function-ref name="disable" scoped="" ref="0x2b4222020ac0"/>
        <function-ref name="captured" scoped="" ref="0x2b4222020c48"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b4222020dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x2b42220250f0" loc="67:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b42220250f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b4222025440"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b42220255c8"/>
        <function-ref name="splitRead" scoped="" ref="0x2b4222025750"/>
        <function-ref name="write" scoped="" ref="0x2b42220258d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x2b4222054518" loc="81:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x2b4222054518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b4222054868"/>
        <function-ref name="get" scoped="" ref="0x2b42220549f0"/>
        <function-ref name="setValue" scoped="" ref="0x2b4222054b78"/>
        <function-ref name="set" scoped="" ref="0x2b4222054d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x2b4222056e10" loc="79:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x2b4222056e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b42220551a8"/>
        <function-ref name="get" scoped="" ref="0x2b4222055330"/>
        <function-ref name="setValue" scoped="" ref="0x2b42220554b8"/>
        <function-ref name="set" scoped="" ref="0x2b4222055640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x2b422202e9d0" loc="59:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x2b422202e9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x2b422202ed20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x2b422204e020" loc="85:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverLayerP.nc">
      <component-ref qname="RF230DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x2b422204e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x2b422204e370"/>
        <function-ref name="suspend" scoped="" ref="0x2b422204e4f8"/>
        <function-ref name="resume" scoped="" ref="0x2b422204e680"/>
        <function-ref name="run" scoped="" ref="0x2b422204e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x2b4222127338" loc="46:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x2b4222127338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222127688"/>
        <function-ref name="isInput" scoped="" ref="0x2b4222127810"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222127998"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4222127b20"/>
        <function-ref name="get" scoped="" ref="0x2b4222127ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222127e30"/>
        <function-ref name="set" scoped="" ref="0x2b4222126020"/>
        <function-ref name="clr" scoped="" ref="0x2b42221261a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x2b4222128140" loc="45:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x2b4222128140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222128490"/>
        <function-ref name="isInput" scoped="" ref="0x2b4222128618"/>
        <function-ref name="toggle" scoped="" ref="0x2b42221287a0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b4222128928"/>
        <function-ref name="get" scoped="" ref="0x2b4222128ab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b4222128c38"/>
        <function-ref name="set" scoped="" ref="0x2b4222128dc0"/>
        <function-ref name="clr" scoped="" ref="0x2b4222127020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b42221252e0" loc="49:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b42221252e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4221724708"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4222122928"/>
        <function-ref name="fired" scoped="" ref="0x2b42221249e8"/>
        <function-ref name="startAt" scoped="" ref="0x2b4222122320"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4222124e70"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4222122db0"/>
        <function-ref name="start" scoped="" ref="0x2b4222124088"/>
        <function-ref name="stop" scoped="" ref="0x2b4222124560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x2b422212a990" loc="42:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x2b422212a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b422212ace0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b422212ae68"/>
        <function-ref name="request" scoped="" ref="0x2b4222129020"/>
        <function-ref name="granted" scoped="" ref="0x2b42221291a8"/>
        <function-ref name="isOwner" scoped="" ref="0x2b4222129330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x2b422212d718" loc="41:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x2b422212d718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422212da68"/>
        <function-ref name="isInput" scoped="" ref="0x2b422212dbf0"/>
        <function-ref name="toggle" scoped="" ref="0x2b422212dd78"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422212a020"/>
        <function-ref name="get" scoped="" ref="0x2b422212a1a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422212a330"/>
        <function-ref name="set" scoped="" ref="0x2b422212a4b8"/>
        <function-ref name="clr" scoped="" ref="0x2b422212a640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x2b42221264c0" loc="48:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b42221264c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b4222126810"/>
        <function-ref name="disable" scoped="" ref="0x2b4222126998"/>
        <function-ref name="captured" scoped="" ref="0x2b4222126b20"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b4222126ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b42221295e8" loc="43:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b42221295e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b4222129938"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b4222129ac0"/>
        <function-ref name="splitRead" scoped="" ref="0x2b4222129c48"/>
        <function-ref name="write" scoped="" ref="0x2b4222129dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x2b4222121438" loc="50:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x2b4222121438"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TRadio" ref="0x2b4221724708"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4222120020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x2b4222111c18" loc="46:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x2b4222111c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b4222110020"/>
        <function-ref name="isInput" scoped="" ref="0x2b42221101a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b4222110330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42221104b8"/>
        <function-ref name="get" scoped="" ref="0x2b4222110640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42221107c8"/>
        <function-ref name="set" scoped="" ref="0x2b4222110950"/>
        <function-ref name="clr" scoped="" ref="0x2b4222110ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x2b4222113540" loc="45:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b4222113540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b42221116f8"/>
        <function-ref name="test" scoped="" ref="0x2b4222119db8"/>
        <function-ref name="get" scoped="" ref="0x2b422211a0f8"/>
        <function-ref name="captured" scoped="" ref="0x2b422211aa58"/>
        <function-ref name="reset" scoped="" ref="0x2b4222119020"/>
        <function-ref name="isOn" scoped="" ref="0x2b4222111270"/>
        <function-ref name="set" scoped="" ref="0x2b422211a580"/>
        <function-ref name="start" scoped="" ref="0x2b42221194a8"/>
        <function-ref name="stop" scoped="" ref="0x2b4222119930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x2b4222110e08" loc="47:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x2b4222110e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b422214d1a8"/>
        <function-ref name="isInput" scoped="" ref="0x2b422214d330"/>
        <function-ref name="toggle" scoped="" ref="0x2b422214d4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x2b422214d640"/>
        <function-ref name="get" scoped="" ref="0x2b422214d7c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b422214d950"/>
        <function-ref name="set" scoped="" ref="0x2b422214dad8"/>
        <function-ref name="clr" scoped="" ref="0x2b422214dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x2b422211c870" loc="40:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x2b422211c870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b422211cbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x2b4222120ce0" loc="39:/home/tinyos/tinyos-main/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x2b4222120ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x2b422211c0a0"/>
        <function-ref name="disable" scoped="" ref="0x2b422211c228"/>
        <function-ref name="captured" scoped="" ref="0x2b422211c3b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x2b422211c538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b42221331d8" loc="84:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b42221331d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b4222133528"/>
        <function-ref name="sendDone" scoped="" ref="0x2b42221336b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b422213b388" loc="82:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b422213b388"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b422213b6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b422211dcd8" loc="81:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b422211dcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b422213e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b422213b9d0" loc="83:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b422213b9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b422213bd20"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b422213d020"/>
        <function-ref name="splitRead" scoped="" ref="0x2b422213d1a8"/>
        <function-ref name="write" scoped="" ref="0x2b422213d330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b4222133e80" loc="85:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b4222133e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b422213c1f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b422213c380"/>
        <function-ref name="request" scoped="" ref="0x2b422213c508"/>
        <function-ref name="granted" scoped="" ref="0x2b422213c690"/>
        <function-ref name="isOwner" scoped="" ref="0x2b422213c818"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x2b422216eb58" loc="296:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x2b422216eb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b422216d020"/>
        <function-ref name="runTask" scoped="" ref="0x2b422216d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x2b422212f140" loc="94:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x2b422212f140"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x2b422212f490"/>
        <function-ref name="sendDone" scoped="" ref="0x2b422212f618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x2b42221503c8" loc="99:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x2b42221503c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b4222150718"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b42221508a0"/>
        <function-ref name="request" scoped="" ref="0x2b4222150a28"/>
        <function-ref name="granted" scoped="" ref="0x2b4222150bb0"/>
        <function-ref name="isOwner" scoped="" ref="0x2b4222150d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x2b4222130080" loc="92:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x2b4222130080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x2b42221303d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4222134a20" loc="91:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4222134a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4222134d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x2b4222151150" loc="98:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x2b4222151150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b42221514a0"/>
        <function-ref name="sleep" scoped="" ref="0x2b422216a950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b42221517b0"/>
        <function-ref name="dataReady" scoped="" ref="0x2b422216aad8"/>
        <function-ref name="initMaster" scoped="" ref="0x2b4222151ac0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b4222151c48"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b4222151dd0"/>
        <function-ref name="read" scoped="" ref="0x2b422216b020"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b422216b1a8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b422216b330"/>
        <function-ref name="setClock" scoped="" ref="0x2b422216b4b8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b422216b640"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b422216b7c8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b422216ba50"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b422216bbd8"/>
        <function-ref name="write" scoped="" ref="0x2b422216bd60"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b422216a020"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b422216a1a8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b422216a330"/>
        <function-ref name="getClock" scoped="" ref="0x2b422216a4b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b422216a640"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b4222151628"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b4222151938"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b422216a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x2b4222130688" loc="93:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x2b4222130688"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x2b42221309d8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x2b4222130b60"/>
        <function-ref name="splitRead" scoped="" ref="0x2b4222130ce8"/>
        <function-ref name="write" scoped="" ref="0x2b4222130e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b422212fda8" loc="95:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b422212fda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b422216c170"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b422216c2f8"/>
        <function-ref name="request" scoped="" ref="0x2b422216c480"/>
        <function-ref name="granted" scoped="" ref="0x2b422216c608"/>
        <function-ref name="isOwner" scoped="" ref="0x2b422216c790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x2b422214e020" loc="100:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b422214e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b422214e370"/>
        <function-ref name="userId" scoped="" ref="0x2b422214e4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x2b422214e7c8" loc="101:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x2b422214e7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b422214eb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x2b42221c3020" loc="76:/home/tinyos/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x2b42221c3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b42221c3370"/>
        <function-ref name="sleep" scoped="" ref="0x2b42221c17c8"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b42221c3680"/>
        <function-ref name="dataReady" scoped="" ref="0x2b42221c1950"/>
        <function-ref name="initMaster" scoped="" ref="0x2b42221c3990"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b42221c3b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b42221c3ca0"/>
        <function-ref name="read" scoped="" ref="0x2b42221c3e28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b42221c2020"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b42221c21a8"/>
        <function-ref name="setClock" scoped="" ref="0x2b42221c2330"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b42221c24b8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b42221c2640"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b42221c28c8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b42221c2a50"/>
        <function-ref name="write" scoped="" ref="0x2b42221c2bd8"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b42221c2d60"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b42221c1020"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b42221c11a8"/>
        <function-ref name="getClock" scoped="" ref="0x2b42221c1330"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b42221c14b8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b42221c34f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b42221c3808"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b42221c1640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x2b42221b4190" loc="81:/home/tinyos/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x2b42221b4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42221b44e0"/>
        <function-ref name="isInput" scoped="" ref="0x2b42221b4668"/>
        <function-ref name="toggle" scoped="" ref="0x2b42221b47f0"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42221b4978"/>
        <function-ref name="get" scoped="" ref="0x2b42221b4b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42221b4c88"/>
        <function-ref name="set" scoped="" ref="0x2b42221b4e10"/>
        <function-ref name="clr" scoped="" ref="0x2b42221b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x2b42221b9de0" loc="79:/home/tinyos/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x2b42221b9de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42221b8170"/>
        <function-ref name="isInput" scoped="" ref="0x2b42221b82f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42221b8480"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42221b8608"/>
        <function-ref name="get" scoped="" ref="0x2b42221b8790"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42221b8918"/>
        <function-ref name="set" scoped="" ref="0x2b42221b8aa0"/>
        <function-ref name="clr" scoped="" ref="0x2b42221b8c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x2b42221b6c70" loc="78:/home/tinyos/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x2b42221b6c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42221b9020"/>
        <function-ref name="isInput" scoped="" ref="0x2b42221b91a8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42221b9330"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42221b94b8"/>
        <function-ref name="get" scoped="" ref="0x2b42221b9640"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42221b97c8"/>
        <function-ref name="set" scoped="" ref="0x2b42221b9950"/>
        <function-ref name="clr" scoped="" ref="0x2b42221b9ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x2b42221b6438" loc="75:/home/tinyos/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x2b42221b6438"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x2b42221b6788"/>
        <function-ref name="stop" scoped="" ref="0x2b42221b6910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x2b42221b3350" loc="82:/home/tinyos/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x2b42221b3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x2b42221b36a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x2b42221c0dc8" loc="74:/home/tinyos/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x2b42221c0dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x2b42221bc170"/>
        <function-ref name="sleep" scoped="" ref="0x2b42221ba640"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x2b42221bc480"/>
        <function-ref name="dataReady" scoped="" ref="0x2b42221ba7c8"/>
        <function-ref name="initMaster" scoped="" ref="0x2b42221bc790"/>
        <function-ref name="setMasterBit" scoped="" ref="0x2b42221bc918"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x2b42221bcaa0"/>
        <function-ref name="read" scoped="" ref="0x2b42221bcc28"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x2b42221bcdb0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x2b42221bb020"/>
        <function-ref name="setClock" scoped="" ref="0x2b42221bb1a8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x2b42221bb330"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x2b42221bb4b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x2b42221bb740"/>
        <function-ref name="setDataOrder" scoped="" ref="0x2b42221bb8c8"/>
        <function-ref name="write" scoped="" ref="0x2b42221bba50"/>
        <function-ref name="enableSpi" scoped="" ref="0x2b42221bbbd8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x2b42221bbd60"/>
        <function-ref name="getClockPhase" scoped="" ref="0x2b42221ba020"/>
        <function-ref name="getClock" scoped="" ref="0x2b42221ba1a8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x2b42221ba330"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x2b42221bc2f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x2b42221bc608"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x2b42221ba4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x2b42221b5020" loc="80:/home/tinyos/tinyos-main/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x2b42221b5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x2b42221b5370"/>
        <function-ref name="isInput" scoped="" ref="0x2b42221b54f8"/>
        <function-ref name="toggle" scoped="" ref="0x2b42221b5680"/>
        <function-ref name="isOutput" scoped="" ref="0x2b42221b5808"/>
        <function-ref name="get" scoped="" ref="0x2b42221b5990"/>
        <function-ref name="makeOutput" scoped="" ref="0x2b42221b5b18"/>
        <function-ref name="set" scoped="" ref="0x2b42221b5ca0"/>
        <function-ref name="clr" scoped="" ref="0x2b42221b5e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b422222e510" loc="86:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b422222e510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b422222e880"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b422222ea08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b422222d550" loc="89:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b422222d550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b422222d8c0"/>
        <function-ref name="configure" scoped="" ref="0x2b422222da48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b42221ed748" loc="85:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b42221ed748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b42221edab8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b42221edc40"/>
        <function-ref name="request" scoped="" ref="0x2b42221eddc8"/>
        <function-ref name="granted" scoped="" ref="0x2b422222e020"/>
        <function-ref name="isOwner" scoped="" ref="0x2b422222e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b422222ec50" loc="87:/home/tinyos/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b422222ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b422222d020"/>
        <function-ref name="userId" scoped="" ref="0x2b422222d1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b4222a165e8" loc="44:/home/tinyos/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b4222a165e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b4222a16938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x2b4222a16bc0" loc="45:/home/tinyos/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x2b4222a16bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b4222a15020"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b4222a151a8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b4222a15330"/>
        <function-ref name="dequeue" scoped="" ref="0x2b4222a154b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x2b4222a12820" loc="52:/home/tinyos/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x2b4222a12820"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x2b4222a12b90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x2b4222a12d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x2b4222a118c0" loc="56:/home/tinyos/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x2b4222a118c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x2b4222a11c30"/>
        <function-ref name="configure" scoped="" ref="0x2b4222a11db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x2b4222a100a0" loc="57:/home/tinyos/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x2b4222a100a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x2b4222a103f0"/>
        <function-ref name="isEmpty" scoped="" ref="0x2b4222a10578"/>
        <function-ref name="isEnqueued" scoped="" ref="0x2b4222a10700"/>
        <function-ref name="dequeue" scoped="" ref="0x2b4222a10888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x2b4222a14a28" loc="51:/home/tinyos/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x2b4222a14a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x2b4222a14d98"/>
        <function-ref name="immediateRequest" scoped="" ref="0x2b4222a12020"/>
        <function-ref name="request" scoped="" ref="0x2b4222a121a8"/>
        <function-ref name="granted" scoped="" ref="0x2b4222a12330"/>
        <function-ref name="isOwner" scoped="" ref="0x2b4222a124b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x2b4222a11020" loc="53:/home/tinyos/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x2b4222a11020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x2b4222a11370"/>
        <function-ref name="userId" scoped="" ref="0x2b4222a114f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x2b4222a10b50" loc="69:/home/tinyos/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x2b4222a10b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x2b4222a0f020"/>
        <function-ref name="runTask" scoped="" ref="0x2b4222a0f1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b42222145e8" loc="80:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b42222145e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b4222214938"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b4222214ac0"/>
        <function-ref name="getControlA" scoped="" ref="0x2b4222214c48"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b4222214dd0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b422221d020"/>
        <function-ref name="setControlB" scoped="" ref="0x2b422221d1a8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b422221d330"/>
        <function-ref name="getControlB" scoped="" ref="0x2b422221d4b8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b422221d640"/>
        <function-ref name="setControlA" scoped="" ref="0x2b422221d7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b422221dca0" loc="81:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b422221dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b4222211e20"/>
        <function-ref name="test" scoped="" ref="0x2b4222211510"/>
        <function-ref name="get" scoped="" ref="0x2b422221c858"/>
        <function-ref name="captured" scoped="" ref="0x2b4222213238"/>
        <function-ref name="reset" scoped="" ref="0x2b4222213710"/>
        <function-ref name="isOn" scoped="" ref="0x2b4222211998"/>
        <function-ref name="set" scoped="" ref="0x2b422221cce0"/>
        <function-ref name="start" scoped="" ref="0x2b4222213b98"/>
        <function-ref name="stop" scoped="" ref="0x2b4222211088"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x2b4222210a20" loc="82:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x2b4222210a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b422224e270"/>
        <function-ref name="fired" scoped="" ref="0x2b422220e020"/>
        <function-ref name="get" scoped="" ref="0x2b422220f5d8"/>
        <function-ref name="reset" scoped="" ref="0x2b422220e4a8"/>
        <function-ref name="isOn" scoped="" ref="0x2b422224e6f8"/>
        <function-ref name="set" scoped="" ref="0x2b422220fa60"/>
        <function-ref name="start" scoped="" ref="0x2b422220e930"/>
        <function-ref name="stop" scoped="" ref="0x2b422220edb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b42222256e8" loc="79:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b42222256e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b422221f930"/>
        <function-ref name="test" scoped="" ref="0x2b422221f020"/>
        <function-ref name="get" scoped="" ref="0x2b42222223a8"/>
        <function-ref name="setScale" scoped="" ref="0x2b422221fdb8"/>
        <function-ref name="getScale" scoped="" ref="0x2b422221e2f0"/>
        <function-ref name="reset" scoped="" ref="0x2b42222201f8"/>
        <function-ref name="overflow" scoped="" ref="0x2b4222222d08"/>
        <function-ref name="isOn" scoped="" ref="0x2b422221f4a8"/>
        <function-ref name="set" scoped="" ref="0x2b4222222830"/>
        <function-ref name="start" scoped="" ref="0x2b4222220680"/>
        <function-ref name="stop" scoped="" ref="0x2b4222220b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x2b4222246c90" loc="80:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x2b4222246c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x2b4222244020"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x2b42222441a8"/>
        <function-ref name="getControlA" scoped="" ref="0x2b4222244330"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x2b42222444b8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x2b4222244640"/>
        <function-ref name="setControlB" scoped="" ref="0x2b42222447c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x2b4222244950"/>
        <function-ref name="getControlB" scoped="" ref="0x2b4222244ad8"/>
        <function-ref name="setControlC" scoped="" ref="0x2b4222244c60"/>
        <function-ref name="setControlA" scoped="" ref="0x2b4222244de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x2b4222240c48" loc="82:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x2b4222240c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b422223c4a8"/>
        <function-ref name="fired" scoped="" ref="0x2b422223d1d0"/>
        <function-ref name="get" scoped="" ref="0x2b422223e820"/>
        <function-ref name="reset" scoped="" ref="0x2b422223d658"/>
        <function-ref name="isOn" scoped="" ref="0x2b422223c930"/>
        <function-ref name="set" scoped="" ref="0x2b422223eca8"/>
        <function-ref name="start" scoped="" ref="0x2b422223dae0"/>
        <function-ref name="stop" scoped="" ref="0x2b422223c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x2b4222243350" loc="81:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x2b4222243350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x2b4222240580"/>
        <function-ref name="test" scoped="" ref="0x2b4222241c20"/>
        <function-ref name="get" scoped="" ref="0x2b4222242020"/>
        <function-ref name="captured" scoped="" ref="0x2b4222242980"/>
        <function-ref name="reset" scoped="" ref="0x2b4222242e58"/>
        <function-ref name="isOn" scoped="" ref="0x2b42222400f8"/>
        <function-ref name="set" scoped="" ref="0x2b42222424a8"/>
        <function-ref name="start" scoped="" ref="0x2b4222241310"/>
        <function-ref name="stop" scoped="" ref="0x2b4222241798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x2b422223a020" loc="83:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x2b422223a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b42222387a8"/>
        <function-ref name="fired" scoped="" ref="0x2b4222239560"/>
        <function-ref name="get" scoped="" ref="0x2b422223aba0"/>
        <function-ref name="reset" scoped="" ref="0x2b42222399e8"/>
        <function-ref name="isOn" scoped="" ref="0x2b4222238c30"/>
        <function-ref name="set" scoped="" ref="0x2b4222239088"/>
        <function-ref name="start" scoped="" ref="0x2b4222239e70"/>
        <function-ref name="stop" scoped="" ref="0x2b4222238320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x2b4222236360" loc="84:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x2b4222236360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b4222234c20"/>
        <function-ref name="fired" scoped="" ref="0x2b4222235980"/>
        <function-ref name="get" scoped="" ref="0x2b4222235020"/>
        <function-ref name="reset" scoped="" ref="0x2b4222235e08"/>
        <function-ref name="isOn" scoped="" ref="0x2b42222330f8"/>
        <function-ref name="set" scoped="" ref="0x2b42222354a8"/>
        <function-ref name="start" scoped="" ref="0x2b4222234310"/>
        <function-ref name="stop" scoped="" ref="0x2b4222234798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b422224dbe8" loc="79:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b422224dbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b4222247db8"/>
        <function-ref name="test" scoped="" ref="0x2b42222474a8"/>
        <function-ref name="get" scoped="" ref="0x2b422224a7a0"/>
        <function-ref name="setScale" scoped="" ref="0x2b4222246270"/>
        <function-ref name="getScale" scoped="" ref="0x2b4222246748"/>
        <function-ref name="reset" scoped="" ref="0x2b42222485b8"/>
        <function-ref name="overflow" scoped="" ref="0x2b4222248130"/>
        <function-ref name="isOn" scoped="" ref="0x2b4222247930"/>
        <function-ref name="set" scoped="" ref="0x2b422224ac28"/>
        <function-ref name="start" scoped="" ref="0x2b4222248a40"/>
        <function-ref name="stop" scoped="" ref="0x2b4222247020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4222306b68" loc="30:/home/tinyos/tinyos-main/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4222306b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TOne" ref="0x2b42214ce9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4222303238"/>
        <function-ref name="fired" scoped="" ref="0x2b42223042b0"/>
        <function-ref name="startAt" scoped="" ref="0x2b4222304bc0"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4222304738"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b42223036c0"/>
        <function-ref name="start" scoped="" ref="0x2b42223058f8"/>
        <function-ref name="stop" scoped="" ref="0x2b4222305dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x2b42222c2dc0" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x2b42222c2dc0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x2b4221409388"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x2b4221409388"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x2b42222b5170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b42222b5540" loc="47:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b42222b5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b42222f66f8"/>
        <function-ref name="test" scoped="" ref="0x2b42222f8db8"/>
        <function-ref name="get" scoped="" ref="0x2b42222f90f8"/>
        <function-ref name="setScale" scoped="" ref="0x2b42222f6b80"/>
        <function-ref name="getScale" scoped="" ref="0x2b42222f5088"/>
        <function-ref name="reset" scoped="" ref="0x2b42222f8020"/>
        <function-ref name="overflow" scoped="" ref="0x2b42222f9a58"/>
        <function-ref name="isOn" scoped="" ref="0x2b42222f6270"/>
        <function-ref name="set" scoped="" ref="0x2b42222f9580"/>
        <function-ref name="start" scoped="" ref="0x2b42222f84a8"/>
        <function-ref name="stop" scoped="" ref="0x2b42222f8930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x2b4222a5a9d8" loc="55:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x2b4222a5a9d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x2b4221409020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x2b4221409020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TOne" ref="0x2b42214ce9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b4222a56088"/>
        <function-ref name="fired" scoped="" ref="0x2b4222a580f8"/>
        <function-ref name="startAt" scoped="" ref="0x2b4222a58a08"/>
        <function-ref name="isRunning" scoped="" ref="0x2b4222a58580"/>
        <function-ref name="getAlarm" scoped="" ref="0x2b4222a56510"/>
        <function-ref name="start" scoped="" ref="0x2b4222a59768"/>
        <function-ref name="stop" scoped="" ref="0x2b4222a59c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x2b4222a51a80" loc="58:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x2b4222a51a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x2b4222ab0270"/>
        <function-ref name="fired" scoped="" ref="0x2b4222a4f020"/>
        <function-ref name="get" scoped="" ref="0x2b4222a50658"/>
        <function-ref name="reset" scoped="" ref="0x2b4222a4f4a8"/>
        <function-ref name="isOn" scoped="" ref="0x2b4222ab06f8"/>
        <function-ref name="set" scoped="" ref="0x2b4222a50ae0"/>
        <function-ref name="start" scoped="" ref="0x2b4222a4f930"/>
        <function-ref name="stop" scoped="" ref="0x2b4222a4fdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x2b4222a56a30" loc="57:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x2b4222a56a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b4222a52b80"/>
        <function-ref name="test" scoped="" ref="0x2b4222a52270"/>
        <function-ref name="get" scoped="" ref="0x2b4222a555d8"/>
        <function-ref name="setScale" scoped="" ref="0x2b4222a51088"/>
        <function-ref name="getScale" scoped="" ref="0x2b4222a51560"/>
        <function-ref name="reset" scoped="" ref="0x2b4222a544a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b4222a54020"/>
        <function-ref name="isOn" scoped="" ref="0x2b4222a526f8"/>
        <function-ref name="set" scoped="" ref="0x2b4222a55a60"/>
        <function-ref name="start" scoped="" ref="0x2b4222a54930"/>
        <function-ref name="stop" scoped="" ref="0x2b4222a54db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b42222fe400" loc="39:/home/tinyos/tinyos-main/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b42222fe400"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b4221496788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b42222fd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b42222fa150" loc="24:/home/tinyos/tinyos-main/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b42222fa150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TOne" ref="0x2b42214ce9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b422233f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b422233f930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b422233f4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b422233fdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b422233be08" loc="45:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b422233be08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TOne" ref="0x2b42214ce9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b422233abe8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4222329548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b42223290c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b42223299d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x2b4222328020" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b4222328020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x2b42223240f8"/>
        <function-ref name="test" scoped="" ref="0x2b42223257a8"/>
        <function-ref name="get" scoped="" ref="0x2b4222328ba0"/>
        <function-ref name="setScale" scoped="" ref="0x2b4222324580"/>
        <function-ref name="getScale" scoped="" ref="0x2b4222324a58"/>
        <function-ref name="reset" scoped="" ref="0x2b42223279e8"/>
        <function-ref name="overflow" scoped="" ref="0x2b4222327560"/>
        <function-ref name="isOn" scoped="" ref="0x2b4222325c30"/>
        <function-ref name="set" scoped="" ref="0x2b4222327088"/>
        <function-ref name="start" scoped="" ref="0x2b4222327e70"/>
        <function-ref name="stop" scoped="" ref="0x2b4222325320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x2b422234a450" loc="63:/home/tinyos/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x2b422234a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b4221496788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b42223481d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4222348ae0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b4222348658"/>
        <function-ref name="overflow" scoped="" ref="0x2b4222347020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x2b422234c270" loc="62:/home/tinyos/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b422234c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b4221496788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b422234b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b422234b930"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b422234b4a8"/>
        <function-ref name="overflow" scoped="" ref="0x2b422234bdb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x2b4222346c38" loc="48:/home/tinyos/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x2b4222346c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b4221496788"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4222345820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x2b4222345e48" loc="49:/home/tinyos/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x2b4222345e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b4221496788"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x2b4222343be8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x2b4222342548"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x2b42223420c0"/>
        <function-ref name="overflow" scoped="" ref="0x2b42223429d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x2b42223813c0" loc="36:/home/tinyos/tinyos-main/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x2b42223813c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b4221496430"/>
            <typename><typedef-ref name="TMicro" ref="0x2b4221496788"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x2b4222380150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x2b42223fa760" loc="46:/home/tinyos/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x2b42223fa760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x2b42223faab0"/>
        <function-ref name="payloadLength" scoped="" ref="0x2b42223fac38"/>
        <function-ref name="getPayload" scoped="" ref="0x2b42223fadc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x2b42223f9020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x2b42223f91a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x2b42223fa1c8" loc="45:/home/tinyos/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x2b42223fa1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x2b42223fa518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x2b42223f93f0" loc="47:/home/tinyos/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="RadioCountToLedsAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x2b42223f93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x2b42223f9740"/>
        <function-ref name="source" scoped="" ref="0x2b42223f98c8"/>
        <function-ref name="address" scoped="" ref="0x2b42223f9a50"/>
        <function-ref name="destination" scoped="" ref="0x2b42223f9bd8"/>
        <function-ref name="setSource" scoped="" ref="0x2b42223f9d60"/>
        <function-ref name="setDestination" scoped="" ref="0x2b42223f8020"/>
        <function-ref name="type" scoped="" ref="0x2b42223f81a8"/>
        <function-ref name="setType" scoped="" ref="0x2b42223f8330"/>
        <function-ref name="isForMe" scoped="" ref="0x2b42223f84b8"/>
        <function-ref name="setGroup" scoped="" ref="0x2b42223f8640"/>
        <function-ref name="localGroup" scoped="" ref="0x2b42223f87c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x2b42223ee128" loc="45:/home/tinyos/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="RadioCountToLedsAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x2b42223ee128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x2b422148c020"/>
            <typename><typedef-ref name="TMilli" ref="0x2b422148c378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x2b42223ea5f0"/>
        <function-ref name="fired" scoped="" ref="0x2b42223eca48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x2b42223eb8c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x2b42223eb470"/>
        <function-ref name="getdt" scoped="" ref="0x2b42223e9020"/>
        <function-ref name="gett0" scoped="" ref="0x2b42223eaa40"/>
        <function-ref name="isRunning" scoped="" ref="0x2b42223eb020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x2b42223eec70"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x2b42223ea020"/>
        <function-ref name="startOneShot" scoped="" ref="0x2b42223ec158"/>
        <function-ref name="stop" scoped="" ref="0x2b42223ec5f8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/tinyos/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b42215138a8" loc="62:/home/tinyos/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/tinyos/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/tinyos/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/tinyos/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x2b422151f580" loc="60:/home/tinyos/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/tinyos/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x2b4221526810" loc="60:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x2b42215265a0" loc="60:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x2b4221529020" loc="31:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x2b4221529a18" loc="39:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b42215297a8" loc="39:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x2b42215284d0" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x2b4221528260" loc="46:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x2b4221528d18" loc="53:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/tinyos/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/tinyos/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x2b4221532dc0" loc="44:/home/tinyos/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x2b422153e4c8" loc="45:/home/tinyos/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x2b4221532070" loc="42:/home/tinyos/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x2b422153d290" loc="47:/home/tinyos/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b4221532710" loc="43:/home/tinyos/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x2b422153eb80" loc="46:/home/tinyos/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b4221533328" loc="40:/home/tinyos/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x2b4221533998" loc="41:/home/tinyos/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/tinyos/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/tinyos/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x2b42214223a0" loc="57:/home/tinyos/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/tinyos/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x2b4221421290" loc="72:/home/tinyos/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/tinyos/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x2b4221422ab8" loc="65:/home/tinyos/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/tinyos/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/tinyos/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x2b422142d070" loc="67:/home/tinyos/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/tinyos/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x2b422142d860" loc="75:/home/tinyos/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/tinyos/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/tinyos/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/tinyos/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x2b42214d4e30" loc="76:/home/tinyos/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/tinyos/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/tinyos/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/tinyos/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x2b42214f94f8" loc="62:/home/tinyos/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/tinyos/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x2b4221467940"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/tinyos/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/tinyos/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x2b42214fb020" loc="52:/home/tinyos/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/tinyos/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/tinyos/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/tinyos/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x2b4221773dc0" loc="113:/home/tinyos/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/tinyos/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b4221773b50" loc="113:/home/tinyos/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x2b4221770290" loc="138:/home/tinyos/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/tinyos/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b4221770020" loc="138:/home/tinyos/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b42217731d8" loc="104:/home/tinyos/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/tinyos/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b4221771620" loc="130:/home/tinyos/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/tinyos/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/tinyos/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b4221759020" loc="80:/home/tinyos/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/tinyos/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b422175a5c8" loc="80:/home/tinyos/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b422175a928" loc="80:/home/tinyos/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b422175ac38" loc="80:/home/tinyos/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b4221754380" loc="135:/home/tinyos/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/tinyos/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221755d48" loc="135:/home/tinyos/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b42217540c8" loc="135:/home/tinyos/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b4221755540" loc="123:/home/tinyos/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/tinyos/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b42217582d0" loc="96:/home/tinyos/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/tinyos/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221758060" loc="96:/home/tinyos/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b4221757708" loc="110:/home/tinyos/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/tinyos/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221757160" loc="110:/home/tinyos/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b4221757488" loc="110:/home/tinyos/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/tinyos/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/tinyos/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b4221775e50" loc="65:/home/tinyos/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/tinyos/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221775be0" loc="65:/home/tinyos/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b422176ee20" loc="78:/home/tinyos/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/tinyos/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b422176ebb0" loc="78:/home/tinyos/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b4221780020" loc="126:/home/tinyos/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/tinyos/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221782a08" loc="126:/home/tinyos/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b4221782d18" loc="126:/home/tinyos/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b4221782178" loc="106:/home/tinyos/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/tinyos/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b42217832a0" loc="94:/home/tinyos/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/tinyos/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b422176dc48" loc="94:/home/tinyos/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b4221783020" loc="94:/home/tinyos/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/tinyos/tinyos-main/tos/interfaces/Receive.nc">
      <function event="" provided="0" name="receive" ref="0x2b422175d020" loc="78:/home/tinyos/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/tinyos/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
              <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b422175e598" loc="78:/home/tinyos/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x2b422175e8c0" loc="78:/home/tinyos/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b422175ebd0" loc="78:/home/tinyos/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b42216f25e0" loc="53:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b42216f25e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b4221762020" loc="136:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b42217679b0" loc="83:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x2b42217645b8" loc="114:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b4221764020" loc="114:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b4221764338" loc="114:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x2b42217668a8" loc="98:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x2b4221761020" loc="151:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x2b4221762740" loc="144:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b4221766110" loc="92:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x2b4221768108" loc="64:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b42216f2e40" loc="64:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x2b42217635b8" loc="129:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b4221763020" loc="129:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x2b4221763338" loc="129:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x2b4221768b48" loc="73:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b42217688d8" loc="73:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b4221767328" loc="78:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/tinyos/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/tinyos/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x2b42216e4550" loc="61:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x2b42216e4c88" loc="67:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x2b42216e3420" loc="72:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x2b42216e12a8" loc="83:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x2b42216e08b0" loc="100:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b42216df070" loc="117:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x2b42216e3b38" loc="77:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b42216dfb70" loc="134:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x2b42216df900" loc="134:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x2b42216e5df8" loc="56:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x2b42216e1a18" loc="89:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x2b42216e0178" loc="94:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/tinyos/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x2b42217d3790" loc="177:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b4221734168"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b42217d3520" loc="177:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b42217c3850" loc="88:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b42217c35e0" loc="88:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b42217c9dc0" loc="68:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b42217c5840" loc="78:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b42217c55d0" loc="78:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b42217c1020" loc="121:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b42217c0a08" loc="121:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b42217c0d40" loc="121:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b42217c2b88" loc="103:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b42217c25d0" loc="103:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b42217c2908" loc="103:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x2b42217d53e0" loc="147:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b42217d5170" loc="147:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x2b42217d4680" loc="162:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b42217d4100" loc="162:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x2b42217d4400" loc="162:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x2b4221735d78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b42217d7290" loc="136:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b42217d7020" loc="136:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b42217d0b48" loc="187:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b4221734168"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x2b42217d0598" loc="187:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b42217d08c8" loc="187:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b4221734168"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x2b42217cf8e8" loc="195:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/tinyos/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b4221734168"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/tinyos/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x2b42217cc0a8" loc="59:/home/tinyos/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/tinyos/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42217c6dd8" loc="59:/home/tinyos/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x2b42217e4290" loc="71:/home/tinyos/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/tinyos/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42217e4020" loc="71:/home/tinyos/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x2b42217e3338" loc="85:/home/tinyos/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/tinyos/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42217e30c8" loc="85:/home/tinyos/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/tinyos/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b42217ef2a0" loc="75:/home/tinyos/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/tinyos/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42217d8c30" loc="75:/home/tinyos/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b42217ef020" loc="75:/home/tinyos/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b42217e95e8" loc="125:/home/tinyos/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/tinyos/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42217e9020" loc="125:/home/tinyos/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b42217e9330" loc="125:/home/tinyos/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b42217ea740" loc="112:/home/tinyos/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/tinyos/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b42217ee4e8" loc="89:/home/tinyos/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/tinyos/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42217ee278" loc="89:/home/tinyos/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b42217ec8f0" loc="100:/home/tinyos/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/tinyos/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42217ec348" loc="100:/home/tinyos/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b42217ec670" loc="100:/home/tinyos/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/home/tinyos/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/home/tinyos/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x2b422184ed18" loc="59:/home/tinyos/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/home/tinyos/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x2b422184e738" loc="59:/home/tinyos/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b422184ea98" loc="59:/home/tinyos/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/home/tinyos/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/home/tinyos/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x2b4221861608" loc="65:/home/tinyos/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/home/tinyos/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221861020" loc="65:/home/tinyos/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x2b4221861388" loc="65:/home/tinyos/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x2b422185f758" loc="71:/home/tinyos/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/home/tinyos/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b422185f4e8" loc="71:/home/tinyos/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x2b42218627b0" loc="57:/home/tinyos/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/home/tinyos/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x2b4221865c98" loc="52:/home/tinyos/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/home/tinyos/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x2b4221865a28" loc="52:/home/tinyos/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/home/tinyos/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/home/tinyos/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x2b4221875670" loc="65:/home/tinyos/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/home/tinyos/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221875400" loc="65:/home/tinyos/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x2b422185d968" loc="46:/home/tinyos/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/home/tinyos/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b422185d380" loc="46:/home/tinyos/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x2b422185d6e8" loc="46:/home/tinyos/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x2b422185c710" loc="59:/home/tinyos/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/home/tinyos/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b422185c4a0" loc="59:/home/tinyos/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x2b422185bc80" loc="53:/home/tinyos/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/home/tinyos/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b422185b698" loc="53:/home/tinyos/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x2b422185ba00" loc="53:/home/tinyos/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x2b42218745b8" loc="71:/home/tinyos/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/home/tinyos/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221874348" loc="71:/home/tinyos/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x2b4221871d48" loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b4221871590" loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b4221871320" loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b4221870500" loc="53:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/home/tinyos/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x2b42218725c8" loc="35:/home/tinyos/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b42218725c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b42218727f8" loc="35:/home/tinyos/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b42218727f8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x2b422186c4e8" loc="63:/home/tinyos/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/home/tinyos/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b42218727f8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b422186c278" loc="63:/home/tinyos/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x2b422186b5b8" loc="70:/home/tinyos/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/home/tinyos/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b422186b348" loc="70:/home/tinyos/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x2b422186d370" loc="49:/home/tinyos/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/home/tinyos/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b422186d100" loc="49:/home/tinyos/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b4221869838" loc="78:/home/tinyos/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/home/tinyos/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b42218727f8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221869278" loc="78:/home/tinyos/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b42218695b8" loc="78:/home/tinyos/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b42218727f8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x2b422188c6e0" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b422188c6e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x2b4221887670" loc="51:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221887400" loc="51:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b4221888c50" loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b422188c6e0"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218889e0" loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x2b4221888290" loc="40:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221888020" loc="40:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b4221886388" loc="57:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b422188c6e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221887d60" loc="57:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b4221886108" loc="57:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x2b422188c6e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/tinyos/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/tinyos/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4221899728" loc="53:/home/tinyos/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4221899728"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b4221894020" loc="61:/home/tinyos/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/tinyos/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/home/tinyos/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/home/tinyos/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x2b4221897020" loc="47:/home/tinyos/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/home/tinyos/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b422189ac58" loc="47:/home/tinyos/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/home/tinyos/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/home/tinyos/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x2b42218c90d8" loc="120:/home/tinyos/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/home/tinyos/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x2b42218ae178" loc="97:/home/tinyos/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/home/tinyos/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b42218b0848" loc="88:/home/tinyos/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/home/tinyos/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x2b42218ae900" loc="102:/home/tinyos/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/home/tinyos/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x2b42218c9ac0" loc="128:/home/tinyos/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/home/tinyos/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x2b42218c4020" loc="41:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b4221720020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218c5cc8" loc="41:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x2b42218b1bd0" loc="37:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b4221720020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b42218c55b8" loc="39:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b4221720020"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218c5348" loc="39:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b42218c3988" loc="45:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b4221720020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218c3398" loc="45:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b42218c3708" loc="45:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b4221720020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b42218c4cd8" loc="43:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b4221720020"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218c46e8" loc="43:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b42218c4a58" loc="43:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b4221720020"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x2b42218c2c30" loc="49:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b4221722b38"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218c29c0" loc="49:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x2b42218c0928" loc="51:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2b4221722b38"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218c0348" loc="51:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b42218c06a8" loc="51:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x2b4221722b38"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b42218c22d0" loc="47:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218c2060" loc="47:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2b42218bf070" loc="53:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b4221722b38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b42218b7a70" loc="67:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b4221720020"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x2b42218b7170" loc="67:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b4221720020"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x2b42218b74d0" loc="67:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b42218b77e0" loc="67:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x2b42218b3df0" loc="122:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218b3828" loc="122:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b42218b3b38" loc="122:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b42218b3020" loc="110:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b42218b67e8" loc="83:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218b6578" loc="83:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b42218b46e8" loc="97:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218b4140" loc="97:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b42218b4468" loc="97:/home/tinyos/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x2b422190e328" loc="40:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x2b4221902020" loc="40:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218ecd48" loc="40:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x2b4221911030" loc="52:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b4221734168"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221913d98" loc="52:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x2b4221910670" loc="63:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221910400" loc="63:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x2b42218f69b0" loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218f6740" loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x2b42218f7290" loc="40:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218f7020" loc="40:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x2b4221913680" loc="49:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42219130c8" loc="49:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b4221913400" loc="49:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x2b42218f6020" loc="43:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218f7998" loc="43:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b42218f7cd0" loc="43:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x2b4221911cb0" loc="55:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b4221734168"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221911700" loc="55:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x2b4221911a30" loc="55:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b4221734168"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x2b42218e7b30" loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x2b42218fc4a0" loc="49:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x2b42218fa5b8" loc="65:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218fa348" loc="65:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x2b42218fb020" loc="54:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218fccb8" loc="54:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x2b42218fbaa8" loc="60:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218fb838" loc="60:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x2b422192c8e0" loc="60:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x2b422192da70" loc="50:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2b4221724b08"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x2b422192d800" loc="50:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x2b4221724b08"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b422192c1d8" loc="55:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x2b422192d020" loc="45:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x2b422192a070" loc="65:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x2b4221724b08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x2b4221924290" loc="70:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221924020" loc="70:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x2b42219286f8" loc="49:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221928488" loc="49:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b4221927d58" loc="59:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x2b42219275d0" loc="54:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221927020" loc="54:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x2b4221927350" loc="54:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2b422192fbf8" loc="43:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b422192f988" loc="43:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2b42219257b8" loc="65:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221925548" loc="65:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230DriverConfig" loc="35:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x2b42218da258" loc="46:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="42:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x2b42218dda40" loc="40:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="37:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218dd7d0" loc="40:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x2b42218dad10" loc="52:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="48:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218daaa0" loc="52:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x2b42218d9590" loc="59:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="54:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x2b42218d8108" loc="65:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
        <documentation loc="61:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RF230DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218d9e28" loc="65:/home/tinyos/tinyos-main/tos/chips/rf230/RF230DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x2b42218eda20" loc="41:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218ed7b0" loc="41:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x2b42218eed68" loc="86:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x2b42218ee600" loc="80:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b42218ee020" loc="80:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b42218ee380" loc="80:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2b42218f2290" loc="55:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218f2020" loc="55:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x2b42218f2d30" loc="62:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218f2ac0" loc="62:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x2b42218f1be0" loc="69:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b42218f1600" loc="69:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b42218f1960" loc="69:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x2b42218dba28" loc="43:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2b42218f3770" loc="49:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218f31f8" loc="49:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b42218f34f0" loc="49:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2b42218ef718" loc="75:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218ef4a8" loc="75:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x2b422191c290" loc="131:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b422191c020" loc="131:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x2b422191fa28" loc="120:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b422191f7b8" loc="120:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x2b422190b850" loc="57:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b422190b2b0" loc="57:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x2b422190b5d0" loc="57:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x2b42219097f0" loc="75:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221909580" loc="75:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x2b4221917020" loc="156:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42219189c8" loc="156:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b4221918cf8" loc="156:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x2b422190ad48" loc="69:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b422190aad8" loc="69:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x2b422191d808" loc="125:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b422191d278" loc="125:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x2b422191d588" loc="125:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x2b4221906118" loc="88:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b4221907ad0" loc="88:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b4221907e30" loc="88:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x2b4221918290" loc="151:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221918020" loc="151:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x2b422190a2d0" loc="63:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b422190a060" loc="63:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x2b4221905aa8" loc="99:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221905838" loc="99:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x2b4221905020" loc="94:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b4221906968" loc="94:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b4221906cc8" loc="94:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x2b4221914510" loc="178:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x2b4221720020"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x2b4221917a20" loc="162:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42219177b0" loc="162:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x2b4221916d38" loc="173:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x2b4221722b38"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x2b422191a748" loc="146:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b422191a198" loc="146:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x2b422191a4c8" loc="146:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x2b42219072d0" loc="81:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221907060" loc="81:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x2b422191f040" loc="115:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221920a78" loc="115:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x2b4221920d98" loc="115:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x2b422191b020" loc="136:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b422191c9e8" loc="136:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x2b422191cd08" loc="136:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x2b4221931020" loc="185:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221914c50" loc="185:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x2b42219217f0" loc="105:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221921278" loc="105:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x2b4221921570" loc="105:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x2b422190db00" loc="51:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b422190d890" loc="51:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x2b42219164e8" loc="168:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221916278" loc="168:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x2b422191ba28" loc="141:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b422191b7b8" loc="141:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x2b42219202d0" loc="110:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221920060" loc="110:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x2b42218e97a8" loc="52:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218e91f8" loc="52:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x2b42218e9528" loc="52:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x2b42218e8020" loc="58:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x2b42218ea020" loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218f4c50" loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x2b42218eaa40" loc="47:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218ea7d0" loc="47:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x2b42219000a8" loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221901db8" loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x2b42219015b8" loc="40:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221901348" loc="40:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x2b4221900890" loc="51:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x2b42218ff338" loc="57:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42218ff0c8" loc="57:/home/tinyos/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/tinyos/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/tinyos/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4221981b20" loc="56:/home/tinyos/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4221981b20"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b4221981d50" loc="56:/home/tinyos/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4221981d50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x2b422199a7a0" loc="109:/home/tinyos/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/tinyos/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4221981d50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b422199c7c0" loc="78:/home/tinyos/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/tinyos/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x2b422199bd70" loc="103:/home/tinyos/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/tinyos/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4221981d50"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4221981d50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x2b422199b7d0" loc="103:/home/tinyos/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4221981d50"/></type-var>
          </variable>
          <variable name="dt" ref="0x2b422199baf0" loc="103:/home/tinyos/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4221981d50"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x2b422199b020" loc="88:/home/tinyos/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/tinyos/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x2b4221999020" loc="116:/home/tinyos/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/tinyos/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4221981d50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b422199e848" loc="66:/home/tinyos/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/tinyos/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4221981d50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b422199e5d8" loc="66:/home/tinyos/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4221981d50"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b422199c070" loc="73:/home/tinyos/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/tinyos/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x2b42219aaa18" loc="59:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x2b42219a9328" loc="72:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x2b42219a9c40" loc="79:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x2b42219aa328" loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x2b42219d58d0" loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42219d5660" loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x2b42219d1290" loc="64:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42219d1020" loc="64:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b42219d27a0" loc="54:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42219d21f8" loc="54:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x2b42219d2520" loc="54:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2b42219d4c18" loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
              <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b42219d4970" loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/tinyos/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x2b4221a008f8" loc="50:/home/tinyos/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/tinyos/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x2b42219fe7c8" loc="60:/home/tinyos/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/tinyos/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x2b42219fe0d8" loc="55:/home/tinyos/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/tinyos/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x2b4221734168"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x2b4221a00118" loc="45:/home/tinyos/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/tinyos/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b4221734168"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x2b42219e1ae8" loc="45:/home/tinyos/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x2b4221734168"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x2b42219e1e20" loc="45:/home/tinyos/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/home/tinyos/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/home/tinyos/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x2b4221a92c98" loc="53:/home/tinyos/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/home/tinyos/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x2b4221a8f5c0" loc="61:/home/tinyos/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/home/tinyos/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/home/tinyos/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/home/tinyos/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x2b4221aaebf0" loc="65:/home/tinyos/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/home/tinyos/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x2b4221aae440" loc="59:/home/tinyos/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/home/tinyos/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/home/tinyos/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/home/tinyos/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x2b4221a8d360" loc="90:/home/tinyos/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/home/tinyos/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x2b4221a8db50" loc="98:/home/tinyos/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/home/tinyos/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/home/tinyos/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/home/tinyos/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x2b4221aa5ac8" loc="79:/home/tinyos/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/home/tinyos/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b4221aafc48"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b4221aa5858" loc="79:/home/tinyos/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b4221aafc48"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x2b4221aaaaf0" loc="53:/home/tinyos/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/home/tinyos/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x2b4221aa65e8" loc="62:/home/tinyos/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/home/tinyos/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b4221aafc48"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b4221aa6378" loc="62:/home/tinyos/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x2b4221aafc48"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x2b4221aa5020" loc="70:/home/tinyos/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/home/tinyos/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x2b4221aafc48"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x2b4221c09e70" loc="53:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
              <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221c09bc8" loc="53:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x2b4221c09290" loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221c09020" loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x2b4221c21720" loc="57:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b4221c214b0" loc="57:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x2b4221c20020" loc="62:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b4221c224d0" loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b4221c22260" loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b4221c22dd8" loc="51:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b4221c22b68" loc="51:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x2b4221bfd020" loc="57:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b4221bfed80" loc="57:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x2b4221bfc4a8" loc="71:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b4221bfc238" loc="71:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x2b4221bfdab0" loc="62:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b4221bfd840" loc="62:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x2b4221c24020" loc="80:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x2b4221bfccb0" loc="80:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x2b4221bfe5b0" loc="49:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x2b4221bfe340" loc="49:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x2b4221734520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x2b4221c97328" loc="44:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x2b4221c95328" loc="56:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x2b4221c95d30" loc="63:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x2b4221c95ac0" loc="63:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x2b4221c944b8" loc="69:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x2b4221c97b58" loc="50:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x2b4221c94c60" loc="74:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x2b4221c98930" loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221c986c0" loc="48:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x2b4221c90cb8" loc="63:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b4221c904b0" loc="56:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b4221c90240" loc="56:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/tinyos/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x2b4221d00540" loc="52:/home/tinyos/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/tinyos/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x2b4221d03d80" loc="46:/home/tinyos/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/tinyos/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x2b4220e25608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/tinyos/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x2b4221d329f8" loc="53:/home/tinyos/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b4221d329f8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x2b4221d2f4c8" loc="64:/home/tinyos/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/tinyos/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b4221d329f8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x2b4221d2f258" loc="64:/home/tinyos/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x2b4221d329f8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x2b4221d66988" loc="55:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221d66718" loc="55:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b4221d698b0" loc="40:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221d69640" loc="40:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x2b4221d685b0" loc="45:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221d68020" loc="45:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x2b4221d68330" loc="45:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b4221d66020" loc="50:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x2b4221d68cd8" loc="50:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x2b422174a860"/>
                <typename><typedef-ref name="message_t" ref="0x2b4221749da8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x2b4221d95020" loc="52:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x2b4221d97c68" loc="52:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x2b4221d974e0" loc="44:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/home/tinyos/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/tinyos/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/tinyos/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4221e0ee00" loc="57:/home/tinyos/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4221e0ee00"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b4221e09068" loc="57:/home/tinyos/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4221e09068"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x2b4221e09900" loc="64:/home/tinyos/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/tinyos/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4221e09068"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x2b4221e08968" loc="76:/home/tinyos/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/tinyos/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x2b4221e08178" loc="71:/home/tinyos/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/tinyos/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b4221e070d8" loc="82:/home/tinyos/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/tinyos/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b4221e40488" loc="89:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b4221e41360" loc="85:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2b4221e44110" loc="79:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b4221e41cd0" loc="86:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b4221e41a60" loc="86:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2b4221e42bb8" loc="82:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b4221e42948" loc="82:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b4221e40e00" loc="90:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b4221e40b90" loc="90:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2b4221e44840" loc="80:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2b4221e42290" loc="81:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b4221e42020" loc="81:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x2b4221e639a8" loc="92:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x2b4221e65a60" loc="68:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x2b4221e641d8" loc="74:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x2b4221e649a8" loc="80:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x2b4221e611d8" loc="98:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x2b4221e631d8" loc="86:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x2b4221e68888" loc="57:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b42214ad978"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b42214add80"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x2b4221e65290" loc="63:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b42214ad978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b42214add80"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x2b4221e65020" loc="63:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x2b42214ad978"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x2b42214add80"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b4221e46850" loc="41:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4221e46850"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x2b4221e38020" loc="74:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x2b4221e3b258" loc="58:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b4221e3c178" loc="48:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4221e46850"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b4221e3b960" loc="62:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b4221e38770" loc="80:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b4221e3cac0" loc="54:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4221e46850"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b4221e3c850" loc="54:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4221e46850"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b4221e3a0d8" loc="65:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b4221e3a7c0" loc="68:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x2b4221e21b68" loc="55:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b4221e21b68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x2b4221e4b020" loc="98:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b4221e4d178" loc="87:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b4221e50438" loc="61:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b4221e21b68"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x2b4221e4b970" loc="104:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x2b4221e4b700" loc="104:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x2b4221e4a178" loc="110:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b4221e4fc00" loc="75:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x2b4221e4f4e0" loc="70:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b4221e4d8d0" loc="93:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b4221e50d70" loc="67:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b4221e21b68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b4221e50b00" loc="67:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x2b4221e21b68"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b4221e4e328" loc="78:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b4221e4ea10" loc="81:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/home/tinyos/tinyos-main/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/home/tinyos/tinyos-main/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x2b4222022910" loc="59:/home/tinyos/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x2b4222022910"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x2b4222022b40" loc="59:/home/tinyos/tinyos-main/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4222022b40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x2b4222057630" loc="66:/home/tinyos/tinyos-main/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/home/tinyos/tinyos-main/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4222022b40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x2b42220573c0" loc="66:/home/tinyos/tinyos-main/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b4222022b40"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/home/tinyos/tinyos-main/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x2b42220211d8" loc="54:/home/tinyos/tinyos-main/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x2b4222020290" loc="66:/home/tinyos/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/home/tinyos/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b4222021b00" loc="61:/home/tinyos/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/home/tinyos/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x2b4222021890" loc="61:/home/tinyos/tinyos-main/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x2b4222024970" loc="53:/home/tinyos/tinyos-main/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/home/tinyos/tinyos-main/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/home/tinyos/tinyos-main/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/home/tinyos/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x2b4222028020" loc="62:/home/tinyos/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/home/tinyos/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b422202bce8" loc="62:/home/tinyos/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x2b4222027338" loc="74:/home/tinyos/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/home/tinyos/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b42220270c8" loc="74:/home/tinyos/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x2b4222028820" loc="68:/home/tinyos/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/home/tinyos/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b4222027cd8" loc="81:/home/tinyos/tinyos-main/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/home/tinyos/tinyos-main/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b4222027a68" loc="81:/home/tinyos/tinyos-main/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="40:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x2b422211b4d8" loc="40:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b422211b4d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x2b4222113020" loc="88:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="84:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x2b4222114c98" loc="88:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x2b4222116e18" loc="76:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="72:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x2b422211bd90" loc="47:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="43:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b422211b4d8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x2b4222117108" loc="60:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="56:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b422211b4d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b4222118e28" loc="60:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b422211b4d8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x2b4222117848" loc="64:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x2b42221145c0" loc="82:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="78:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x2b42221186f0" loc="53:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="49:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b422211b4d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x2b4222118480" loc="53:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x2b422211b4d8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x2b4222116020" loc="67:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="66:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b4222116708" loc="70:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/home/tinyos/tinyos-main/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/home/tinyos/tinyos-main/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/home/tinyos/tinyos-main/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x2b4222139b88" loc="70:/home/tinyos/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/home/tinyos/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b4222139278" loc="70:/home/tinyos/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b42221395d8" loc="70:/home/tinyos/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b42221398f8" loc="70:/home/tinyos/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x2b4222135020" loc="82:/home/tinyos/tinyos-main/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/home/tinyos/tinyos-main/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x2b42221382b0" loc="82:/home/tinyos/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x2b4222138610" loc="82:/home/tinyos/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x2b4222138930" loc="82:/home/tinyos/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x2b4220e24b98"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x2b4222138c78" loc="83:/home/tinyos/tinyos-main/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/home/tinyos/tinyos-main/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/home/tinyos/tinyos-main/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x2b422213b020" loc="45:/home/tinyos/tinyos-main/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/home/tinyos/tinyos-main/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x2b422213ec20" loc="45:/home/tinyos/tinyos-main/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x2b4222160328" loc="86:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x2b4222157c40" loc="126:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x2b422215b7a8" loc="117:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x2b4222156610" loc="128:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x2b42221563a0" loc="128:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x2b4222161ba8" loc="83:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x2b4222159338" loc="122:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x2b42221590c8" loc="122:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x2b422215c020" loc="113:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x2b422215ec88" loc="113:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x2b422215f1d8" loc="97:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x2b4222152de0" loc="141:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x2b4222152b70" loc="141:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x2b422215c758" loc="114:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x2b4222155690" loc="131:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x2b4222155420" loc="131:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x2b4222153538" loc="136:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x2b4222157518" loc="125:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x2b42221572a8" loc="125:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x2b42221524a0" loc="140:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x2b422215a290" loc="119:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x2b422215a020" loc="119:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x2b422215fb30" loc="103:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b422215f8c0" loc="103:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x2b422215b0a8" loc="116:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x2b422215cdf8" loc="116:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x2b4222159b48" loc="123:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x2b4222156d18" loc="129:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x2b4222155d80" loc="132:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x2b4222153c80" loc="138:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x2b422215a9a8" loc="120:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x2b42214029b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x2b4222160a40" loc="89:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x2b422215e4e0" loc="109:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x2b422215e270" loc="109:/home/tinyos/tinyos-main/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/home/tinyos/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/home/tinyos/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x2b42221b7748" loc="95:/home/tinyos/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/home/tinyos/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x2b42221b6020" loc="105:/home/tinyos/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/home/tinyos/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x2b4221427ae0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="76:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="67:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x2b42222191d8" loc="81:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x2b4222217578" loc="87:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="86:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x2b422221b328" loc="79:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="78:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x2b4222215780" loc="91:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="90:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x2b4222215020" loc="88:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x2b4222217c78" loc="88:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x2b42222184c0" loc="83:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b4222218250" loc="83:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x2b4222214290" loc="92:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x2b4222214020" loc="92:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x2b422221ba58" loc="80:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x2b4222218de8" loc="84:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b4222218b78" loc="84:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x2b4222219b00" loc="82:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x2b4222219890" loc="82:/home/tinyos/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x2b4220e24160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
